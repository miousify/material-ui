(window.webpackJsonp=window.webpackJsonp||[]).push([["5f0e"],{LPGf:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/StepConnector/StepConnector.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# StepConnector API\n\n<p class="description">The API documentation of the StepConnector React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport StepConnector from \'@material-ui/core/StepConnector\';\n// or\nimport { StepConnector } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiStepConnector`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiStepConnector-root</span> | Styles applied to the root element.\n| <span class="prop-name">horizontal</span> | <span class="prop-name">MuiStepConnector-horizontal</span> | Styles applied to the root element if `orientation="horizontal"`.\n| <span class="prop-name">vertical</span> | <span class="prop-name">MuiStepConnector-vertical</span> | Styles applied to the root element if `orientation="vertical"`.\n| <span class="prop-name">alternativeLabel</span> | <span class="prop-name">MuiStepConnector-alternativeLabel</span> | Styles applied to the root element if `alternativeLabel={true}`.\n| <span class="prop-name">active</span> | <span class="prop-name">MuiStepConnector-active</span> | Pseudo-class applied to the root element if `active={true}`.\n| <span class="prop-name">completed</span> | <span class="prop-name">MuiStepConnector-completed</span> | Pseudo-class applied to the root element if `completed={true}`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n| <span class="prop-name">line</span> | <span class="prop-name">MuiStepConnector-line</span> | Styles applied to the line element.\n| <span class="prop-name">lineHorizontal</span> | <span class="prop-name">MuiStepConnector-lineHorizontal</span> | Styles applied to the root element if `orientation="horizontal"`.\n| <span class="prop-name">lineVertical</span> | <span class="prop-name">MuiStepConnector-lineVertical</span> | Styles applied to the root element if `orientation="vertical"`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/StepConnector/StepConnector.js) for more detail.\n\n## Demos\n\n- [Steppers](/components/steppers/)\n\n'},LhnF:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return l});var o=t("mXGw"),a=t.n(o),s=t("e+1t"),p=t("LPGf"),i=t.n(p),r=a.a.createElement(s.a,{markdown:i.a});function l(){return r}},z3GC:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/step-connector",function(){var e=t("LhnF");return{page:e.default||e}}])}},[["z3GC","5d41","9da1"]]]);