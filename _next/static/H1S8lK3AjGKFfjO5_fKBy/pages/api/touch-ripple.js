(window.webpackJsonp=window.webpackJsonp||[]).push([["009f"],{"1AQd":function(e,n){e.exports='---\nfilename: /packages/material-ui/src/ButtonBase/TouchRipple.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# TouchRipple API\n\n<p class="description">The API documentation of the TouchRipple React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport TouchRipple from \'@material-ui/core/ButtonBase/TouchRipple.js/TouchRipple\';\n// or\nimport { TouchRipple } from \'@material-ui/core/ButtonBase/TouchRipple.js\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">center</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the ripple starts at the center of the component rather than at the point of interaction. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n\nThe `ref` is attached to an Imperative Handle. Have a look at the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ButtonBase/TouchRipple.js) for more detail.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiTouchRipple`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiTouchRipple-root</span> | Styles applied to the root element.\n| <span class="prop-name">ripple</span> | <span class="prop-name">MuiTouchRipple-ripple</span> | Styles applied to the internal `Ripple` components `ripple` class.\n| <span class="prop-name">rippleVisible</span> | <span class="prop-name">MuiTouchRipple-rippleVisible</span> | Styles applied to the internal `Ripple` components `rippleVisible` class.\n| <span class="prop-name">ripplePulsate</span> | <span class="prop-name">MuiTouchRipple-ripplePulsate</span> | Styles applied to the internal `Ripple` components `ripplePulsate` class.\n| <span class="prop-name">child</span> | <span class="prop-name">MuiTouchRipple-child</span> | Styles applied to the internal `Ripple` components `child` class.\n| <span class="prop-name">childLeaving</span> | <span class="prop-name">MuiTouchRipple-childLeaving</span> | Styles applied to the internal `Ripple` components `childLeaving` class.\n| <span class="prop-name">childPulsate</span> | <span class="prop-name">MuiTouchRipple-childPulsate</span> | Styles applied to the internal `Ripple` components `childPulsate` class.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ButtonBase/TouchRipple.js) for more detail.\n\n'},GI9L:function(e,n,p){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/touch-ripple",function(){var e=p("huIb");return{page:e.default||e}}])},huIb:function(e,n,p){"use strict";p.r(n),p.d(n,"default",function(){return c});var a=p("mXGw"),t=p.n(a),s=p("e+1t"),o=p("1AQd"),i=p.n(o),l=t.a.createElement(s.a,{markdown:i.a});function c(){return l}}},[["GI9L","5d41","9da1"]]]);