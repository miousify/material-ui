(window.webpackJsonp=window.webpackJsonp||[]).push([["39a9"],{"9Utx":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/form-control-label",function(){var e=a("Gf7y");return{page:e.default||e}}])},"9jct":function(e,n){e.exports='---\nfilename: /packages/material-ui/src/FormControlLabel/FormControlLabel.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# FormControlLabel API\n\n<p class="description">The API documentation of the FormControlLabel React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\n// or\nimport { FormControlLabel } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\nDrop in replacement of the `Radio`, `Switch` and `Checkbox` component.\nUse this component if you want to display an extra label.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">checked</span> | <span class="prop-type">bool</span> |  | If `true`, the component appears selected. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">control</span> | <span class="prop-type">element</span> |  | A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`. |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> |  | If `true`, the control will be disabled. |\n| <span class="prop-name">inputRef</span> | <span class="prop-type">func<br>&#124;&nbsp;object</span> |  | This prop can be used to pass a ref callback to the `input` element. |\n| <span class="prop-name">label</span> | <span class="prop-type">node</span> |  | The text to be used in an enclosing label element. |\n| <span class="prop-name">labelPlacement</span> | <span class="prop-type">\'end\'<br>&#124;&nbsp;\'start\'<br>&#124;&nbsp;\'top\'<br>&#124;&nbsp;\'bottom\'</span> | <span class="prop-default">\'end\'</span> | The position of the label. |\n| <span class="prop-name">name</span> | <span class="prop-type">string</span> |  |  |\n| <span class="prop-name">onChange</span> | <span class="prop-type">func</span> |  | Callback fired when the state is changed.<br><br>**Signature:**<br>`function(event: object, checked: boolean) => void`<br>*event:* The event source of the callback. You can pull out the new value by accessing `event.target.checked`.<br>*checked:* The `checked` value of the switch |\n| <span class="prop-name">value</span> | <span class="prop-type">any</span> |  | The value of the component. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiFormControlLabel`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiFormControlLabel-root</span> | Styles applied to the root element.\n| <span class="prop-name">labelPlacementStart</span> | <span class="prop-name">MuiFormControlLabel-labelPlacementStart</span> | Styles applied to the root element if `labelPlacement="start"`.\n| <span class="prop-name">labelPlacementTop</span> | <span class="prop-name">MuiFormControlLabel-labelPlacementTop</span> | Styles applied to the root element if `labelPlacement="top"`.\n| <span class="prop-name">labelPlacementBottom</span> | <span class="prop-name">MuiFormControlLabel-labelPlacementBottom</span> | Styles applied to the root element if `labelPlacement="bottom"`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n| <span class="prop-name">label</span> | <span class="prop-name">MuiFormControlLabel-label</span> | Styles applied to the label\'s Typography component.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/FormControlLabel/FormControlLabel.js) for more detail.\n\n## Demos\n\n- [Checkboxes](/components/checkboxes/)\n- [Radio Buttons](/components/radio-buttons/)\n- [Switches](/components/switches/)\n\n'},Gf7y:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var o=a("mXGw"),t=a.n(o),s=a("e+1t"),p=a("9jct"),l=a.n(p),r=t.a.createElement(s.a,{markdown:l.a});function c(){return r}}},[["9Utx","5d41","9da1"]]]);