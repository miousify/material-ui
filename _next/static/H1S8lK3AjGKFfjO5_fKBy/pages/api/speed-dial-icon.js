(window.webpackJsonp=window.webpackJsonp||[]).push([["3f83"],{"9aiG":function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/speed-dial-icon",function(){var n=o("ALuX");return{page:n.default||n}}])},ALuX:function(n,e,o){"use strict";o.r(e),o.d(e,"default",function(){return l});var a=o("mXGw"),p=o.n(a),t=o("e+1t"),s=o("UyvQ"),i=o.n(s),c=p.a.createElement(t.a,{markdown:i.a});function l(){return c}},UyvQ:function(n,e){n.exports='---\nfilename: /packages/material-ui-lab/src/SpeedDialIcon/SpeedDialIcon.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# SpeedDialIcon API\n\n<p class="description">The API documentation of the SpeedDialIcon React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport SpeedDialIcon from \'@material-ui/lab/SpeedDialIcon\';\n// or\nimport { SpeedDialIcon } from \'@material-ui/lab\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">icon</span> | <span class="prop-type">node</span> |  | The icon to display in the SpeedDial Floating Action Button. |\n| <span class="prop-name">openIcon</span> | <span class="prop-type">node</span> |  | The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open. |\n\nThe component cannot hold a ref.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiSpeedDialIcon`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiSpeedDialIcon-root</span> | Styles applied to the root element.\n| <span class="prop-name">icon</span> | <span class="prop-name">MuiSpeedDialIcon-icon</span> | Styles applied to the icon component.\n| <span class="prop-name">iconOpen</span> | <span class="prop-name">MuiSpeedDialIcon-iconOpen</span> | Styles applied to the icon component if `open={true}`.\n| <span class="prop-name">iconWithOpenIconOpen</span> | <span class="prop-name">MuiSpeedDialIcon-iconWithOpenIconOpen</span> | Styles applied to the icon when and `openIcon` is provided & if `open={true}`.\n| <span class="prop-name">openIcon</span> | <span class="prop-name">MuiSpeedDialIcon-openIcon</span> | Styles applied to the `openIcon` if provided.\n| <span class="prop-name">openIconOpen</span> | <span class="prop-name">MuiSpeedDialIcon-openIconOpen</span> | Styles applied to the `openIcon` if provided & if `open={true}`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/SpeedDialIcon/SpeedDialIcon.js) for more detail.\n\n## Demos\n\n- [Speed Dial](/components/speed-dial/)\n\n'}},[["9aiG","5d41","9da1"]]]);