(window.webpackJsonp=window.webpackJsonp||[]).push([["bba7"],{"/7gx":function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/root-ref",function(){var e=o("R1NK");return{page:e.default||e}}])},HT1m:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/RootRef/RootRef.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# RootRef API\n\n<p class="description">The API documentation of the RootRef React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport RootRef from \'@material-ui/core/RootRef\';\n// or\nimport { RootRef } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n⚠️⚠️⚠️\nIf you want the DOM element of a Material-UI component check out\n[FAQ: How can I access the DOM element?](/getting-started/faq/#how-can-i-access-the-dom-element)\nfirst.\n\nThis component uses `findDOMNode` which is deprecated in React.StrictMode.\n\nHelper component to allow attaching a ref to a\nwrapped element to access the underlying DOM element.\n\nIt\'s highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.\nFor example:\n```jsx\nimport React from \'react\';\nimport RootRef from \'@material-ui/core/RootRef\';\n\nfunction MyComponent() {\n  const domRef = React.useRef();\n\n  React.useEffect(() => {\n    console.log(domRef.current); // DOM node\n  }, []);\n\n  return (\n    <RootRef rootRef={domRef}>\n      <SomeChildComponent />\n    </RootRef>\n  );\n}\n```\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">element</span> |  | The wrapped element. |\n| <span class="prop-name required">rootRef&nbsp;*</span> | <span class="prop-type">func<br>&#124;&nbsp;object</span> |  | Provide a way to access the DOM node of the wrapped element. You can provide a callback ref or a `React.createRef()` ref. |\n\nThe component cannot hold a ref.\n\n\n'},R1NK:function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return p});var t=o("mXGw"),a=o.n(t),r=o("e+1t"),c=o("HT1m"),i=o.n(c),s=a.a.createElement(r.a,{markdown:i.a});function p(){return s}}},[["/7gx","5d41","9da1"]]]);