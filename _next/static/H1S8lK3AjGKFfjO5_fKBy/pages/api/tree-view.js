(window.webpackJsonp=window.webpackJsonp||[]).push([["2cbe"],{"0xIs":function(e,n){e.exports='---\nfilename: /packages/material-ui-lab/src/TreeView/TreeView.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# TreeView API\n\n<p class="description">The API documentation of the TreeView React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport TreeView from \'@material-ui/lab/TreeView\';\n// or\nimport { TreeView } from \'@material-ui/lab\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the component. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">defaultCollapseIcon</span> | <span class="prop-type">node</span> |  | The default icon used to collapse the node. |\n| <span class="prop-name">defaultEndIcon</span> | <span class="prop-type">node</span> |  | The default icon displayed next to a end node. This is applied to all tree nodes and can be overridden by the TreeItem `icon` prop. |\n| <span class="prop-name">defaultExpanded</span> | <span class="prop-type">Array<string></span> | <span class="prop-default">[]</span> | Expanded node ids. |\n| <span class="prop-name">defaultExpandIcon</span> | <span class="prop-type">node</span> |  | The default icon used to expand the node. |\n| <span class="prop-name">defaultParentIcon</span> | <span class="prop-type">node</span> |  | The default icon displayed next to a parent node. This is applied to all parent nodes and can be overridden by the TreeItem `icon` prop. |\n| <span class="prop-name">onNodeToggle</span> | <span class="prop-type">func</span> |  | Callback fired when a `TreeItem` is expanded/collapsed.<br><br>**Signature:**<br>`function(nodeId: string, expanded: boolean) => void`<br>*nodeId:* The id of the toggled node.<br>*expanded:* The node status - If `true` the node was expanded. If `false` the node was collapsed. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiTreeView`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiTreeView-root</span> | Styles applied to the root element.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/TreeView/TreeView.js) for more detail.\n\n## Demos\n\n- [Tree View](/components/tree-view/)\n\n'},imyI:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/tree-view",function(){var e=a("xq6M");return{page:e.default||e}}])},xq6M:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return l});var o=a("mXGw"),t=a.n(o),s=a("e+1t"),p=a("0xIs"),i=a.n(p),r=t.a.createElement(s.a,{markdown:i.a});function l(){return r}}},[["imyI","5d41","9da1"]]]);