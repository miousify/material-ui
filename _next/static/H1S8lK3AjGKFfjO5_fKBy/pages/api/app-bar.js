(window.webpackJsonp=window.webpackJsonp||[]).push([["c261"],{OoET:function(n,e,a){"use strict";a.r(e),a.d(e,"default",function(){return l});var o=a("mXGw"),p=a.n(o),s=a("e+1t"),t=a("RDOy"),i=a.n(t),r=p.a.createElement(s.a,{markdown:i.a});function l(){return r}},RDOy:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/AppBar/AppBar.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# AppBar API\n\n<p class="description">The API documentation of the AppBar React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport AppBar from \'@material-ui/core/AppBar\';\n// or\nimport { AppBar } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the component. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">color</span> | <span class="prop-type">\'default\'<br>&#124;&nbsp;\'inherit\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'</span> | <span class="prop-default">\'primary\'</span> | The color of the component. It supports those theme colors that make sense for this component. |\n| <span class="prop-name">position</span> | <span class="prop-type">\'absolute\'<br>&#124;&nbsp;\'fixed\'<br>&#124;&nbsp;\'relative\'<br>&#124;&nbsp;\'static\'<br>&#124;&nbsp;\'sticky\'</span> | <span class="prop-default">\'fixed\'</span> | The positioning type. The behavior of the different options is described [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning). Note: `sticky` is not universally supported and will fall back to `static` when unavailable. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([Paper](/api/paper/)).\n\n## CSS\n\n- Style sheet name: `MuiAppBar`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiAppBar-root</span> | Styles applied to the root element.\n| <span class="prop-name">positionFixed</span> | <span class="prop-name">MuiAppBar-positionFixed</span> | Styles applied to the root element if `position="fixed"`.\n| <span class="prop-name">positionAbsolute</span> | <span class="prop-name">MuiAppBar-positionAbsolute</span> | Styles applied to the root element if `position="absolute"`.\n| <span class="prop-name">positionSticky</span> | <span class="prop-name">MuiAppBar-positionSticky</span> | Styles applied to the root element if `position="sticky"`.\n| <span class="prop-name">positionStatic</span> | <span class="prop-name">MuiAppBar-positionStatic</span> | Styles applied to the root element if `position="static"`.\n| <span class="prop-name">positionRelative</span> | <span class="prop-name">MuiAppBar-positionRelative</span> | Styles applied to the root element if `position="relative"`.\n| <span class="prop-name">colorDefault</span> | <span class="prop-name">MuiAppBar-colorDefault</span> | Styles applied to the root element if `color="default"`.\n| <span class="prop-name">colorPrimary</span> | <span class="prop-name">MuiAppBar-colorPrimary</span> | Styles applied to the root element if `color="primary"`.\n| <span class="prop-name">colorSecondary</span> | <span class="prop-name">MuiAppBar-colorSecondary</span> | Styles applied to the root element if `color="secondary"`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/AppBar/AppBar.js) for more detail.\n\n## Inheritance\n\nThe props of the [Paper](/api/paper/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [App Bar](/components/app-bar/)\n\n'},nDwl:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/app-bar",function(){var n=a("OoET");return{page:n.default||n}}])}},[["nDwl","5d41","9da1"]]]);