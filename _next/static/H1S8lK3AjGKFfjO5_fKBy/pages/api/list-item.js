(window.webpackJsonp=window.webpackJsonp||[]).push([["3b8c"],{JGvI:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/ListItem/ListItem.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ListItem API\n\n<p class="description">The API documentation of the ListItem React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ListItem from \'@material-ui/core/ListItem\';\n// or\nimport { ListItem } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\nUses an additional container component if `ListItemSecondaryAction` is the last child.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">alignItems</span> | <span class="prop-type">\'flex-start\'<br>&#124;&nbsp;\'center\'</span> | <span class="prop-default">\'center\'</span> | Defines the `align-items` style property. |\n| <span class="prop-name">autoFocus</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the list item will be focused during the first mount. Focus will also be triggered if the value changes from false to true. |\n| <span class="prop-name">button</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the list item will be a button (using `ButtonBase`). |\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the component. If a `ListItemSecondaryAction` is used it must be the last child. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">component</span> | <span class="prop-type">elementType</span> |  | The component used for the root node. Either a string to use a DOM element or a component. By default, it\'s a `li` when `button` is `false` and a `div` when `button` is `true`. |\n| <span class="prop-name">ContainerComponent</span> | <span class="prop-type">elementType</span> | <span class="prop-default">\'li\'</span> | The container component used when a `ListItemSecondaryAction` is the last child. |\n| <span class="prop-name">ContainerProps</span> | <span class="prop-type">object</span> | <span class="prop-default">{}</span> | Props applied to the container component if used. |\n| <span class="prop-name">dense</span> | <span class="prop-type">bool</span> |  | If `true`, compact vertical padding designed for keyboard and mouse input will be used. |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the list item will be disabled. |\n| <span class="prop-name">disableGutters</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the left and right padding is removed. |\n| <span class="prop-name">divider</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, a 1px light border is added to the bottom of the list item. |\n| <span class="prop-name">selected</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Use to apply selected styling. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiListItem`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiListItem-root</span> | Styles applied to the (normally root) `component` element. May be wrapped by a `container`.\n| <span class="prop-name">container</span> | <span class="prop-name">MuiListItem-container</span> | Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`.\n| <span class="prop-name">focusVisible</span> | <span class="prop-name">Mui-focusVisible</span> | Pseudo-class applied to the `component`\'s `focusVisibleClassName` prop if `button={true}`.\n| <span class="prop-name">dense</span> | <span class="prop-name">MuiListItem-dense</span> | Styles applied to the `component` element if dense.\n| <span class="prop-name">alignItemsFlexStart</span> | <span class="prop-name">MuiListItem-alignItemsFlexStart</span> | Styles applied to the `component` element if `alignItems="flex-start"`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the inner `component` element if `disabled={true}`.\n| <span class="prop-name">divider</span> | <span class="prop-name">MuiListItem-divider</span> | Styles applied to the inner `component` element if `divider={true}`.\n| <span class="prop-name">gutters</span> | <span class="prop-name">MuiListItem-gutters</span> | Styles applied to the inner `component` element if `disableGutters={false}`.\n| <span class="prop-name">button</span> | <span class="prop-name">MuiListItem-button</span> | Styles applied to the inner `component` element if `button={true}`.\n| <span class="prop-name">secondaryAction</span> | <span class="prop-name">MuiListItem-secondaryAction</span> | Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`.\n| <span class="prop-name">selected</span> | <span class="prop-name">Mui-selected</span> | Pseudo-class applied to the root element if `selected={true}`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListItem/ListItem.js) for more detail.\n\n## Demos\n\n- [Lists](/components/lists/)\n- [Transfer List](/components/transfer-list/)\n\n'},dawP:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/list-item",function(){var e=s("hUaM");return{page:e.default||e}}])},hUaM:function(e,n,s){"use strict";s.r(n),s.d(n,"default",function(){return r});var a=s("mXGw"),t=s.n(a),p=s("e+1t"),o=s("JGvI"),i=s.n(o),l=t.a.createElement(p.a,{markdown:i.a});function r(){return l}}},[["dawP","5d41","9da1"]]]);