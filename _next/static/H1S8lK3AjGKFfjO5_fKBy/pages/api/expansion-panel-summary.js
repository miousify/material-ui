(window.webpackJsonp=window.webpackJsonp||[]).push([["8f1d"],{KhnK:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/ExpansionPanelSummary/ExpansionPanelSummary.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ExpansionPanelSummary API\n\n<p class="description">The API documentation of the ExpansionPanelSummary React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ExpansionPanelSummary from \'@material-ui/core/ExpansionPanelSummary\';\n// or\nimport { ExpansionPanelSummary } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the expansion panel summary. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">expandIcon</span> | <span class="prop-type">node</span> |  | The icon to display as the expand indicator. |\n| <span class="prop-name">IconButtonProps</span> | <span class="prop-type">object</span> |  | Props applied to the `IconButton` element wrapping the expand icon. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([ButtonBase](/api/button-base/)).\n\n## CSS\n\n- Style sheet name: `MuiExpansionPanelSummary`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiExpansionPanelSummary-root</span> | Styles applied to the root element.\n| <span class="prop-name">expanded</span> | <span class="prop-name">Mui-expanded</span> | Styles applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`.\n| <span class="prop-name">focused</span> | <span class="prop-name">Mui-focused</span> | Styles applied to the root and children wrapper elements when focused.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Styles applied to the root element if `disabled={true}`.\n| <span class="prop-name">content</span> | <span class="prop-name">MuiExpansionPanelSummary-content</span> | Styles applied to the children wrapper element.\n| <span class="prop-name">expandIcon</span> | <span class="prop-name">MuiExpansionPanelSummary-expandIcon</span> | Styles applied to the `IconButton` component when `expandIcon` is supplied.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ExpansionPanelSummary/ExpansionPanelSummary.js) for more detail.\n\n## Inheritance\n\nThe props of the [ButtonBase](/api/button-base/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Expansion Panels](/components/expansion-panels/)\n\n'},M7dI:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/expansion-panel-summary",function(){var n=a("v8jv");return{page:n.default||n}}])},v8jv:function(n,e,a){"use strict";a.r(e),a.d(e,"default",function(){return l});var o=a("mXGw"),s=a.n(o),t=a("e+1t"),p=a("KhnK"),i=a.n(p),r=s.a.createElement(t.a,{markdown:i.a});function l(){return r}}},[["M7dI","5d41","9da1"]]]);