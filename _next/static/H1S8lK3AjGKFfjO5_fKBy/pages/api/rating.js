(window.webpackJsonp=window.webpackJsonp||[]).push([["e7bf"],{V9uc:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/rating",function(){var n=e("p0oj");return{page:n.default||n}}])},onDL:function(n,a){n.exports='---\nfilename: /packages/material-ui-lab/src/Rating/Rating.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# Rating API\n\n<p class="description">The API documentation of the Rating React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport Rating from \'@material-ui/lab/Rating\';\n// or\nimport { Rating } from \'@material-ui/lab\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the rating will be disabled. |\n| <span class="prop-name">emptyIcon</span> | <span class="prop-type">node</span> |  | The icon to display when empty. |\n| <span class="prop-name">getLabelText</span> | <span class="prop-type">func</span> | <span class="prop-default">function defaultLabelText(value) {  return `${value} Star${value !== 1 ? \'s\' : \'\'}`;}</span> | Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.<br><br>**Signature:**<br>`function(value: number) => string`<br>*value:* The rating label\'s value to format |\n| <span class="prop-name">icon</span> | <span class="prop-type">node</span> | <span class="prop-default">&lt;Star fontSize="inherit" /></span> | The icon to display. |\n| <span class="prop-name">IconContainerComponent</span> | <span class="prop-type">elementType</span> | <span class="prop-default">function IconContainer(props) {  const { value, ...other } = props;  return &lt;div {...other} />;}</span> | The component containing the icon. |\n| <span class="prop-name">max</span> | <span class="prop-type">number</span> | <span class="prop-default">5</span> | Maximum rating. |\n| <span class="prop-name">name</span> | <span class="prop-type">string</span> |  | The name attribute of the radio `input` elements. If `readOnly` is false, the prop is required, this input name`should be unique within the parent form. |\n| <span class="prop-name">onChange</span> | <span class="prop-type">func</span> |  | Callback fired when the value changes.<br><br>**Signature:**<br>`function(event: object, value: number) => void`<br>*event:* The event source of the callback<br>*value:* The new value |\n| <span class="prop-name">onChangeActive</span> | <span class="prop-type">func</span> |  | Callback function that is fired when the hover state changes.<br><br>**Signature:**<br>`function(event: object, value: number) => void`<br>*event:* The event source of the callback<br>*value:* The new value |\n| <span class="prop-name">precision</span> | <span class="prop-type">number</span> | <span class="prop-default">1</span> | The minimum increment value change allowed. |\n| <span class="prop-name">readOnly</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Removes all hover effects and pointer events. |\n| <span class="prop-name">size</span> | <span class="prop-type">\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;\'large\'</span> | <span class="prop-default">\'medium\'</span> | The size of the rating. |\n| <span class="prop-name">value</span> | <span class="prop-type">number</span> | <span class="prop-default">null</span> | The rating value. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiRating`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiRating-root</span> | Styles applied to the root element.\n| <span class="prop-name">sizeSmall</span> | <span class="prop-name">MuiRating-sizeSmall</span> | Styles applied to the root element if `size="small"`.\n| <span class="prop-name">sizeLarge</span> | <span class="prop-name">MuiRating-sizeLarge</span> | Styles applied to the root element if `size="large"`.\n| <span class="prop-name">readOnly</span> | <span class="prop-name">MuiRating-readOnly</span> | Styles applied to the root element if `readOnly={true}`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n| <span class="prop-name">focusVisible</span> | <span class="prop-name">Mui-focusVisible</span> | Pseudo-class applied to the root element if keyboard focused.\n| <span class="prop-name">visuallyhidden</span> | <span class="prop-name">MuiRating-visuallyhidden</span> | Visually hide an element.\n| <span class="prop-name">pristine</span> | <span class="prop-name">MuiRating-pristine</span> | Styles applied to the pristine label.\n| <span class="prop-name">label</span> | <span class="prop-name">MuiRating-label</span> | Styles applied to the label elements.\n| <span class="prop-name">icon</span> | <span class="prop-name">MuiRating-icon</span> | Styles applied to the icon wrapping elements.\n| <span class="prop-name">iconEmpty</span> | <span class="prop-name">MuiRating-iconEmpty</span> | Styles applied to the icon wrapping elements when empty.\n| <span class="prop-name">iconFilled</span> | <span class="prop-name">MuiRating-iconFilled</span> | Styles applied to the icon wrapping elements when filled.\n| <span class="prop-name">iconHover</span> | <span class="prop-name">MuiRating-iconHover</span> | Styles applied to the icon wrapping elements when hover.\n| <span class="prop-name">iconFocus</span> | <span class="prop-name">MuiRating-iconFocus</span> | Styles applied to the icon wrapping elements when focus.\n| <span class="prop-name">iconActive</span> | <span class="prop-name">MuiRating-iconActive</span> | Styles applied to the icon wrapping elements when active.\n| <span class="prop-name">decimal</span> | <span class="prop-name">MuiRating-decimal</span> | Styles applied to the icon wrapping elements when decimals are necessary.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/Rating/Rating.js) for more detail.\n\n## Demos\n\n- [Rating](/components/rating/)\n\n'},p0oj:function(n,a,e){"use strict";e.r(a),e.d(a,"default",function(){return r});var s=e("mXGw"),p=e.n(s),t=e("e+1t"),o=e("onDL"),i=e.n(o),l=p.a.createElement(t.a,{markdown:i.a});function r(){return l}}},[["V9uc","5d41","9da1"]]]);