(window.webpackJsonp=window.webpackJsonp||[]).push([["4684"],{"0TlN":function(e,n){e.exports='---\nfilename: /packages/material-ui/src/ListItemText/ListItemText.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ListItemText API\n\n<p class="description">The API documentation of the ListItemText React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ListItemText from \'@material-ui/core/ListItemText\';\n// or\nimport { ListItemText } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | Alias for the `primary` property. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">disableTypography</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the children won\'t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the `children` (or `primary`) text, and optional `secondary` text with the Typography component. |\n| <span class="prop-name">inset</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the children will be indented. This should be used if there is no left avatar or left icon. |\n| <span class="prop-name">primary</span> | <span class="prop-type">node</span> |  | The main content element. |\n| <span class="prop-name">primaryTypographyProps</span> | <span class="prop-type">object</span> |  | These props will be forwarded to the primary typography component (as long as disableTypography is not `true`). |\n| <span class="prop-name">secondary</span> | <span class="prop-type">node</span> |  | The secondary content element. |\n| <span class="prop-name">secondaryTypographyProps</span> | <span class="prop-type">object</span> |  | These props will be forwarded to the secondary typography component (as long as disableTypography is not `true`). |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiListItemText`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiListItemText-root</span> | Styles applied to the root element.\n| <span class="prop-name">multiline</span> | <span class="prop-name">MuiListItemText-multiline</span> | Styles applied to the `Typography` components if primary and secondary are set.\n| <span class="prop-name">dense</span> | <span class="prop-name">MuiListItemText-dense</span> | Styles applied to the `Typography` components if dense.\n| <span class="prop-name">inset</span> | <span class="prop-name">MuiListItemText-inset</span> | Styles applied to the root element if `inset={true}`.\n| <span class="prop-name">primary</span> | <span class="prop-name">MuiListItemText-primary</span> | Styles applied to the primary `Typography` component.\n| <span class="prop-name">secondary</span> | <span class="prop-name">MuiListItemText-secondary</span> | Styles applied to the secondary `Typography` component.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListItemText/ListItemText.js) for more detail.\n\n## Demos\n\n- [Lists](/components/lists/)\n\n'},"Gb+7":function(e,n,s){"use strict";s.r(n),s.d(n,"default",function(){return l});var t=s("mXGw"),a=s.n(t),p=s("e+1t"),o=s("0TlN"),r=s.n(o),i=a.a.createElement(p.a,{markdown:r.a});function l(){return i}},wrIS:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/list-item-text",function(){var e=s("Gb+7");return{page:e.default||e}}])}},[["wrIS","5d41","9da1"]]]);