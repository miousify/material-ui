(window.webpackJsonp=window.webpackJsonp||[]).push([["f260"],{"/f6c":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return i});var s=a("mXGw"),p=a.n(s),t=a("e+1t"),o=a("LXn9"),l=a.n(o),r=p.a.createElement(t.a,{markdown:l.a});function i(){return r}},JHPF:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/fab",function(){var e=a("/f6c");return{page:e.default||e}}])},LXn9:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/Fab/Fab.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# Fab API\n\n<p class="description">The API documentation of the Fab React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport Fab from \'@material-ui/core/Fab\';\n// or\nimport { Fab } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">node</span> |  | The content of the button. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">color</span> | <span class="prop-type">\'default\'<br>&#124;&nbsp;\'inherit\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'</span> | <span class="prop-default">\'default\'</span> | The color of the component. It supports those theme colors that make sense for this component. |\n| <span class="prop-name">component</span> | <span class="prop-type">elementType</span> | <span class="prop-default">\'button\'</span> | The component used for the root node. Either a string to use a DOM element or a component. |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the button will be disabled. |\n| <span class="prop-name">disableFocusRipple</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the  keyboard focus ripple will be disabled. `disableRipple` must also be true. |\n| <span class="prop-name">disableRipple</span> | <span class="prop-type">bool</span> |  | If `true`, the ripple effect will be disabled. |\n| <span class="prop-name">href</span> | <span class="prop-type">string</span> |  | The URL to link to when the button is clicked. If defined, an `a` element will be used as the root node. |\n| <span class="prop-name">size</span> | <span class="prop-type">\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;\'large\'</span> | <span class="prop-default">\'large\'</span> | The size of the button. `small` is equivalent to the dense button styling. |\n| <span class="prop-name">variant</span> | <span class="prop-type">\'round\'<br>&#124;&nbsp;\'extended\'</span> | <span class="prop-default">\'round\'</span> | The variant to use. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([ButtonBase](/api/button-base/)).\n\n## CSS\n\n- Style sheet name: `MuiFab`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiFab-root</span> | Styles applied to the root element.\n| <span class="prop-name">label</span> | <span class="prop-name">MuiFab-label</span> | Styles applied to the span element that wraps the children.\n| <span class="prop-name">primary</span> | <span class="prop-name">MuiFab-primary</span> | Styles applied to the root element if `color="primary"`.\n| <span class="prop-name">secondary</span> | <span class="prop-name">MuiFab-secondary</span> | Styles applied to the root element if `color="secondary"`.\n| <span class="prop-name">extended</span> | <span class="prop-name">MuiFab-extended</span> | Styles applied to the root element if `variant="extended"`.\n| <span class="prop-name">focusVisible</span> | <span class="prop-name">Mui-focusVisible</span> | Pseudo-class applied to the ButtonBase root element if the button is keyboard focused.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n| <span class="prop-name">colorInherit</span> | <span class="prop-name">MuiFab-colorInherit</span> | Styles applied to the root element if `color="inherit"`.\n| <span class="prop-name">sizeSmall</span> | <span class="prop-name">MuiFab-sizeSmall</span> | Styles applied to the root element if `size="small"``.\n| <span class="prop-name">sizeMedium</span> | <span class="prop-name">MuiFab-sizeMedium</span> | Styles applied to the root element if `size="medium"``.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Fab/Fab.js) for more detail.\n\n## Inheritance\n\nThe props of the [ButtonBase](/api/button-base/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Buttons](/components/buttons/)\n\n'}},[["JHPF","5d41","9da1"]]]);