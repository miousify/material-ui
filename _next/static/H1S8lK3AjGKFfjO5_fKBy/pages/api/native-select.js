(window.webpackJsonp=window.webpackJsonp||[]).push([["ff90"],{Pd4W:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/native-select",function(){var e=a("az0h");return{page:e.default||e}}])},az0h:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),s=a.n(t),p=a("e+1t"),o=a("qJqN"),l=a.n(o),i=s.a.createElement(p.a,{markdown:l.a});function c(){return i}},qJqN:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/NativeSelect/NativeSelect.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# NativeSelect API\n\n<p class="description">The API documentation of the NativeSelect React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport NativeSelect from \'@material-ui/core/NativeSelect\';\n// or\nimport { NativeSelect } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\nAn alternative to `<Select native />` with a much smaller bundle size footprint.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The option elements to populate the select with. Can be some `<option>` elements. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">IconComponent</span> | <span class="prop-type">elementType</span> | <span class="prop-default">ArrowDropDownIcon</span> | The icon that displays the arrow. |\n| <span class="prop-name">input</span> | <span class="prop-type">element</span> | <span class="prop-default">&lt;Input /></span> | An `Input` element; does not have to be a material-ui specific `Input`. |\n| <span class="prop-name">inputProps</span> | <span class="prop-type">object</span> |  | Attributes applied to the `select` element. |\n| <span class="prop-name">onChange</span> | <span class="prop-type">func</span> |  | Callback function fired when a menu item is selected.<br><br>**Signature:**<br>`function(event: object) => void`<br>*event:* The event source of the callback. You can pull out the new value by accessing `event.target.value`. |\n| <span class="prop-name">value</span> | <span class="prop-type">any</span> |  | The input value. |\n| <span class="prop-name">variant</span> | <span class="prop-type">\'standard\'<br>&#124;&nbsp;\'outlined\'<br>&#124;&nbsp;\'filled\'</span> |  | The variant to use. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([Input](/api/input/)).\n\n## CSS\n\n- Style sheet name: `MuiNativeSelect`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiNativeSelect-root</span> | Styles applied to the select component `root` class.\n| <span class="prop-name">select</span> | <span class="prop-name">MuiNativeSelect-select</span> | Styles applied to the select component `select` class.\n| <span class="prop-name">filled</span> | <span class="prop-name">MuiNativeSelect-filled</span> | Styles applied to the select component if `variant="filled"`.\n| <span class="prop-name">outlined</span> | <span class="prop-name">MuiNativeSelect-outlined</span> | Styles applied to the select component if `variant="outlined"`.\n| <span class="prop-name">selectMenu</span> | <span class="prop-name">MuiNativeSelect-selectMenu</span> | Styles applied to the select component `selectMenu` class.\n| <span class="prop-name">disabled</span> | <span class="prop-name">Mui-disabled</span> | Pseudo-class applied to the select component `disabled` class.\n| <span class="prop-name">icon</span> | <span class="prop-name">MuiNativeSelect-icon</span> | Styles applied to the select component `icon` class.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/NativeSelect/NativeSelect.js) for more detail.\n\n## Inheritance\n\nThe props of the [Input](/api/input/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Selects](/components/selects/)\n\n'}},[["Pd4W","5d41","9da1"]]]);