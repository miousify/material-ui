(window.webpackJsonp=window.webpackJsonp||[]).push([["0397"],{R3f2:function(e,n){e.exports='---\nfilename: /packages/material-ui/src/StepIcon/StepIcon.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# StepIcon API\n\n<p class="description">The API documentation of the StepIcon React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport StepIcon from \'@material-ui/core/StepIcon\';\n// or\nimport { StepIcon } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">active</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Whether this step is active. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">completed</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Mark the step as completed. Is passed to child components. |\n| <span class="prop-name">error</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | Mark the step as failed. |\n| <span class="prop-name required">icon&nbsp;*</span> | <span class="prop-type">node</span> |  | The label displayed in the step icon. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiStepIcon`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiStepIcon-root</span> | Styles applied to the root element.\n| <span class="prop-name">text</span> | <span class="prop-name">MuiStepIcon-text</span> | Styles applied to the SVG text element.\n| <span class="prop-name">active</span> | <span class="prop-name">MuiStepIcon-active</span> | Pseudo-class applied to the root element if `active={true}`.\n| <span class="prop-name">completed</span> | <span class="prop-name">MuiStepIcon-completed</span> | Pseudo-class applied to the root element if `completed={true}`.\n| <span class="prop-name">error</span> | <span class="prop-name">Mui-error</span> | Pseudo-class applied to the root element if `error={true}`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/StepIcon/StepIcon.js) for more detail.\n\n## Demos\n\n- [Steppers](/components/steppers/)\n\n'},WJ5x:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/step-icon",function(){var e=s("jYm/");return{page:e.default||e}}])},"jYm/":function(e,n,s){"use strict";s.r(n),s.d(n,"default",function(){return c});var t=s("mXGw"),a=s.n(t),o=s("e+1t"),p=s("R3f2"),r=s.n(p),i=a.a.createElement(o.a,{markdown:r.a});function c(){return i}}},[["WJ5x","5d41","9da1"]]]);