(window.webpackJsonp=window.webpackJsonp||[]).push([["6033"],{"7O4M":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/list-item-avatar",function(){var e=n("joi6");return{page:e.default||e}}])},io8U:function(e,t){e.exports='---\nfilename: /packages/material-ui/src/ListItemAvatar/ListItemAvatar.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ListItemAvatar API\n\n<p class="description">The API documentation of the ListItemAvatar React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ListItemAvatar from \'@material-ui/core/ListItemAvatar\';\n// or\nimport { ListItemAvatar } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\nA simple wrapper to apply `List` styles to an `Avatar`.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">element</span> |  | The content of the component â€“ normally `Avatar`. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiListItemAvatar`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiListItemAvatar-root</span> | Styles applied to the root element.\n| <span class="prop-name">alignItemsFlexStart</span> | <span class="prop-name">MuiListItemAvatar-alignItemsFlexStart</span> | Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ListItemAvatar/ListItemAvatar.js) for more detail.\n\n## Demos\n\n- [Lists](/components/lists/)\n\n'},joi6:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return m});var a=n("mXGw"),s=n.n(a),o=n("e+1t"),i=n("io8U"),r=n.n(i),p=s.a.createElement(o.a,{markdown:r.a});function m(){return p}}},[["7O4M","5d41","9da1"]]]);