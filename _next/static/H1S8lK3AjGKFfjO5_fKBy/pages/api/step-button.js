(window.webpackJsonp=window.webpackJsonp||[]).push([["f339"],{"B+UJ":function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/step-button",function(){var n=t("y9lK");return{page:n.default||n}}])},F2hx:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/StepButton/StepButton.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# StepButton API\n\n<p class="description">The API documentation of the StepButton React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport StepButton from \'@material-ui/core/StepButton\';\n// or\nimport { StepButton } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | Can be a `StepLabel` or a node to place inside `StepLabel` as children. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">icon</span> | <span class="prop-type">node</span> |  | The icon displayed by the step label. |\n| <span class="prop-name">optional</span> | <span class="prop-type">node</span> |  | The optional node to display. |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element ([ButtonBase](/api/button-base/)).\n\n## CSS\n\n- Style sheet name: `MuiStepButton`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiStepButton-root</span> | Styles applied to the root element.\n| <span class="prop-name">horizontal</span> | <span class="prop-name">MuiStepButton-horizontal</span> | Styles applied to the root element if `orientation="horizontal"`.\n| <span class="prop-name">vertical</span> | <span class="prop-name">MuiStepButton-vertical</span> | Styles applied to the root element if `orientation="vertical"`.\n| <span class="prop-name">touchRipple</span> | <span class="prop-name">MuiStepButton-touchRipple</span> | Styles applied to the `ButtonBase` touch-ripple.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/StepButton/StepButton.js) for more detail.\n\n## Inheritance\n\nThe props of the [ButtonBase](/api/button-base/) component are also available.\nYou can take advantage of this behavior to [target nested components](/guides/api/#spread).\n\n## Demos\n\n- [Steppers](/components/steppers/)\n\n'},y9lK:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return l});var o=t("mXGw"),a=t.n(o),s=t("e+1t"),p=t("F2hx"),i=t.n(p),r=a.a.createElement(s.a,{markdown:i.a});function l(){return r}}},[["B+UJ","5d41","9da1"]]]);