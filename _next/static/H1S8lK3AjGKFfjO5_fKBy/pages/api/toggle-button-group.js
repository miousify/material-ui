(window.webpackJsonp=window.webpackJsonp||[]).push([["b735"],{"4Mlf":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var o=t("mXGw"),a=t.n(o),s=t("e+1t"),p=t("9g8z"),l=t.n(p),r=a.a.createElement(s.a,{markdown:l.a});function i(){return r}},"9g8z":function(e,n){e.exports='---\nfilename: /packages/material-ui-lab/src/ToggleButtonGroup/ToggleButtonGroup.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# ToggleButtonGroup API\n\n<p class="description">The API documentation of the ToggleButtonGroup React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport ToggleButtonGroup from \'@material-ui/lab/ToggleButtonGroup\';\n// or\nimport { ToggleButtonGroup } from \'@material-ui/lab\';\n```\n\nYou can learn more about the difference by [reading our guide](/guides/minimizing-bundle-size/).\n\n\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">node</span> |  | The content of the button. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name">exclusive</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, only allow one of the child ToggleButton values to be selected. |\n| <span class="prop-name">onChange</span> | <span class="prop-type">func</span> |  | Callback fired when the value changes.<br><br>**Signature:**<br>`function(event: object, value: object) => void`<br>*event:* The event source of the callback<br>*value:* of the selected buttons. When `exclusive` is true this is a single value; when false an array of selected values. If no value is selected and `exclusive` is true the value is null; when false an empty array. |\n| <span class="prop-name">size</span> | <span class="prop-type">\'small\'<br>&#124;&nbsp;\'medium\'<br>&#124;&nbsp;\'large\'</span> | <span class="prop-default">\'medium\'</span> | The size of the buttons. |\n| <span class="prop-name">value</span> | <span class="prop-type">any</span> |  | The currently selected value within the group or an array of selected values when `exclusive` is false. |\n\nThe component cannot hold a ref.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n- Style sheet name: `MuiToggleButtonGroup`.\n- Style sheet details:\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">MuiToggleButtonGroup-root</span> | Styles applied to the root element.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-lab/src/ToggleButtonGroup/ToggleButtonGroup.js) for more detail.\n\n## Demos\n\n- [Toggle Button](/components/toggle-button/)\n\n'},D5kU:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api/toggle-button-group",function(){var e=t("4Mlf");return{page:e.default||e}}])}},[["D5kU","5d41","9da1"]]]);