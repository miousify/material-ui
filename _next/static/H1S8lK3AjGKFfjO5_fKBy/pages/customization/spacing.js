(window.webpackJsonp=window.webpackJsonp||[]).push([["1ce7"],{"1SHr":function(n,e,t){var a={"./spacing-aa.md":"HUQq","./spacing-de.md":"Z5F/","./spacing-es.md":"rZYh","./spacing-fr.md":"kMsc","./spacing-ja.md":"ZYBQ","./spacing-pt.md":"ezGh","./spacing-ru.md":"gmUN","./spacing-zh.md":"r7R4","./spacing.md":"4/7L"};function s(n){var e=r(n);return t(e)}function r(n){var e=a[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}s.keys=function(){return Object.keys(a)},s.resolve=r,n.exports=s,s.id="1SHr"},"4/7L":function(n,e){n.exports="# Spacing\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI uses [a recommended 8px scaling factor by default](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS uses px as the default units for this CSS property.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nYou can change the spacing transformation by providing:\n\n- a number\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- a function\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- an array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Multiple arity\n\nThe `theme.spacing()` helper accepts up to 4 arguments.\nYou can use the arguments to reduce the boilerplate:\n```diff\n-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```\n"},HUQq:function(n,e){n.exports='# crwdns93688:0crwdne93688:0\n\n<p class="description">crwdns93690:0crwdne93690:0</p>\n\ncrwdns93692:0crwdne93692:0\n\n```js\ncrwdns93694:0crwdne93694:0\n    crwdns93696:0crwdne93696:0\n```\n\ncrwdns93698:0crwdne93698:0\n\n- crwdns93700:0crwdne93700:0\n\n```js\ncrwdns93702:0crwdne93702:0\n```\n\n- crwdns93704:0crwdne93704:0\n\n```js\ncrwdns93706:0crwdne93706:0\n```\n\n- crwdns93708:0crwdne93708:0\n\n```js\ncrwdns93710:0[factor]crwdne93710:0\n```\n\n## crwdns93712:0crwdne93712:0\n\ncrwdns93714:0crwdne93714:0 crwdns93716:0crwdne93716:0\n\n```diff\n<br />crwdns93718:0crwdne93718:0\n```'},MD4r:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/customization/spacing",function(){var n=t("YPMt");return{page:n.default||n}}])},YPMt:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return o});var a=t("mXGw"),s=t.n(a),r=t("e+1t"),c=t("1SHr"),i=t("pRs9"),p=s.a.createElement(r.a,{req:c,reqSource:i,reqPrefix:"pages/customization/spacing"});function o(){return p}},"Z5F/":function(n,e){n.exports="# Abstände (Spacing)\n\n<p class=\"description\">Verwende den theme.spacing() Helfer, um einen konsistenten Abstand zwischen den Elementen Ihrer Benutzeroberfläche zu erstellen.</p>\n\nDie Material-UI verwendet standardmäßig den [empfohlenen 8px-Skalierungsfaktor](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS verwendet px als Standardeinheiten für diese CSS-Eigenschaft.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nSie können die Abstandstransformation ändern, indem Sie Folgendes angeben:\n\n- eine Zahl\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- eine Funktion\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap Strategie)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- eine Array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Mehrere Aritäten\n\nDer `theme.spacing ()` Helfer akzeptiert bis zu 4 Argumente. Sie können die Argumente verwenden, um den Boilerplate zu reduzieren:\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"},ZYBQ:function(n,e){n.exports="# Spacing\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI uses [a recommended 8px scaling factor by default](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS uses px as the default units for this CSS property.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nYou can change the spacing transformation by providing:\n\n- a number\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- a function\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- an array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Multiple arity\n\nThe `theme.spacing()` helper accepts up to 4 arguments. You can use the arguments to reduce the boilerplate:\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"},ezGh:function(n,e){n.exports="# Espaçamento\n\n<p class=\"description\">Use o auxiliar theme.spacing() para criar um espaçamento consistente entre os elementos da sua UI.</p>\n\nMaterial-UI usa [um fator de escala recomendado de 8px por padrão](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // O JSS usa px como unidade padrão para essa propriedade CSS.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nVocê pode alterar a transformação do espaçamento fornecendo:\n\n- um número\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- uma função\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (estratégia do Bootstrap)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- um vetor\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Aridade múltipla\n\nO auxiliar ` theme.spacing()` aceita até 4 argumentos. Você pode usar os argumentos para reduzir o boilerplate:\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"},gmUN:function(n,e){n.exports="# Интервал\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI uses [a recommended 8px scaling factor by default](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS использует пиксели в качестве дефолтных единиц измерения для этого CSS свойства.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nВы можете изменить преобразование расстояния, передав:\n\n- число\n\n```js\nconst theme = createMuiTheme ({\n  spacing: 4,\n});\n\ntheme.spacing (2) // = 4 * 2\n```\n\n- функция\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- массив\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Multiple arity\n\nВспомогательная функция ` theme.spacing () ` принимает до 4 аргументов. Вы можете использовать аргументы, чтобы уменьшить шаблон:\n\n```diff\n<br />- padding: `$ {theme.spacing (1)} px $ {theme.spacing (2)} px`,\n+ padding: theme.spacing (1, 2), // '8px 16px'\n```"},kMsc:function(n,e){n.exports="# Ecartement\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI uses [a recommended 8px scaling factor by default](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS uses px as the default units for this CSS property.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nYou can change the spacing transformation by providing:\n\n- a number\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- a function\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- an array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Multiple arity\n\nThe `theme.spacing()` helper accepts up to 4 arguments. You can use the arguments to reduce the boilerplate:\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"},pRs9:function(n,e){function t(n){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}t.keys=function(){return[]},t.resolve=t,n.exports=t,t.id="pRs9"},r7R4:function(n,e){n.exports="# 间距\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI默认使用[8px的缩放系数](https://material.io/design/layout/understanding-layout.html) 。\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS使用px作为此CSS属性的默认单位。\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\n您可以通过提供以下内容来更改间距转换值：\n\n- 一个数字\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- a function\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- an array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## 多个参数\n\n` theme.spacing() ` 最多接受4个参数。 您可以使用参数来减少样板：\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"},rZYh:function(n,e){n.exports="# Espaciado\n\n<p class=\"description\">Use the theme.spacing() helper to create consistent spacing between the elements of your UI.</p>\n\nMaterial-UI uses [a recommended 8px scaling factor by default](https://material.io/design/layout/understanding-layout.html).\n\n```js\nconst styles = theme => ({\n  root: {\n    // JSS uses px as the default units for this CSS property.\n    padding: theme.spacing(2), // = 8 * 2\n  },\n});\n```\n\nYou can change the spacing transformation by providing:\n\n- a number\n\n```js\nconst theme = createMuiTheme({\n  spacing: 4,\n});\n\ntheme.spacing(2) // = 4 * 2\n```\n\n- a function\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n});\n\ntheme.spacing(2); // = 0.25 * 2rem = 0.5rem = 8px\n```\n\n- an array\n\n```js\nconst theme = createMuiTheme({\n  spacing: factor => [0, 4, 8, 16, 32, 64][factor],\n});\n\ntheme.spacing(2); // = 8\n```\n\n## Multiple arity\n\nThe `theme.spacing()` helper accepts up to 4 arguments. You can use the arguments to reduce the boilerplate:\n\n```diff\n<br />-  padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n+  padding: theme.spacing(1, 2), // '8px 16px'\n```"}},[["MD4r","5d41","9da1"]]]);