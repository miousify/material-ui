(window.webpackJsonp=window.webpackJsonp||[]).push([["a732"],{"/ZL3":function(e,t,n){var i={"./AdvancedGridList.js":"hIxR","./AdvancedGridList.tsx":"SxT0","./ImageGridList.js":"4DPt","./ImageGridList.tsx":"fvHS","./SingleLineGridList.js":"dK8R","./SingleLineGridList.tsx":"2rx7","./TitlebarGridList.js":"BAwC","./TitlebarGridList.tsx":"R1Za","./grid-list-aa.md":"JuD0","./grid-list-de.md":"M+yB","./grid-list-es.md":"Vwxc","./grid-list-fr.md":"gn/A","./grid-list-ja.md":"YSYX","./grid-list-pt.md":"yT18","./grid-list-ru.md":"8Ugl","./grid-list-zh.md":"A06b","./grid-list.md":"MGrc","./tileData.js":"gxDM"};function a(e){var t=r(e);return n(t)}function r(e){var t=i[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}a.keys=function(){return Object.keys(i)},a.resolve=r,e.exports=a,a.id="/ZL3"},"2rx7":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return g});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("WLtd"),o=n("PUlT"),l=n("iKYT"),c=n("wuUx"),d=n("l/nz"),m=n("nQ73"),u=n("gxDM"),p=Object(r.a)(function(e){return Object(s.a)({root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{flexWrap:"nowrap",transform:"translateZ(0)"},title:{color:e.palette.primary.light},titleBar:{background:"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)"}})});function g(){var e=p();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{className:e.gridList,cols:2.5},u.default.map(function(t){return a.a.createElement(l.a,{key:t.img},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(c.a,{title:t.title,classes:{root:e.titleBar,title:e.title},actionIcon:a.a.createElement(d.a,{"aria-label":"star ".concat(t.title)},a.a.createElement(m.a,{className:e.title}))}))})))}},"4DPt":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("PUlT"),o=n("iKYT"),l=n("gxDM"),c=Object(r.a)(function(e){return{root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450}}});function d(){var e=c();return a.a.createElement("div",{className:e.root},a.a.createElement(s.a,{cellHeight:160,className:e.gridList,cols:3},l.default.map(function(e){return a.a.createElement(o.a,{key:e.img,cols:e.cols||1},a.a.createElement("img",{src:e.img,alt:e.title}))})))}},"7ZnH":function(e,t,n){var i={"./AdvancedGridList.js":"lt4t","./AdvancedGridList.tsx":"nhTq","./ImageGridList.js":"kXhf","./ImageGridList.tsx":"z4qI","./SingleLineGridList.js":"F2Tr","./SingleLineGridList.tsx":"xQ13","./TitlebarGridList.js":"kufl","./TitlebarGridList.tsx":"SRUf","./tileData.js":"DdFP"};function a(e){var t=r(e);return n(t)}function r(e){var t=i[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}a.keys=function(){return Object.keys(i)},a.resolve=r,e.exports=a,a.id="7ZnH"},"8Ugl":function(e,t){e.exports='---\ntitle: Сеть изображений, компонент React\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Сеть изображений\n\n<p class="description">Сеть изображений суть коллекция изображений на упорядоченной сетке.</p>\n\n[Сеть изображений](https://material.io/design/components/image-lists.html) являются коллекцией элементов в повторяющемся шаблоне. Они помогают улучшить визуальное восприятие своего содержания.\n\n## Простая сеть изображений\n\nПростой пример прокручиваемой `Сети изображений`.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Сеть изображений с заголовками\n\nЭтот пример демонстрирует использование `Полосы заголовка сети изображений`, которую следует добавить в каждый `Заголовок сети изображений`. Мы можем указать `заголовок`, `подзаголовок` и дополнительное действие - в этом примере `кнопка-иконка`.\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Сеть изображений в одну строку\n\nДанный пример показывает сеть изображений в одну строку с горизонтальной прокруткой. Сети изображений с горизонтальнйо прокруткой не рекомендуется применять, так как это может вызвать дискомфорт у пользователей, ведь обычно при чтении используется вертикальная прокрутка. Исключением из этого правила являются сети с горизонтальной прокруткой в одну строку, например галерея.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Более сложный пример\n\nВ этом примере демонстрирует «рекомендуемые» листы, в которых используются свойства `rows` и `cols` чтобы отрегулировать размер плитки, и свойство `padding` чтобы отрегулировать поля между плитками. На плитках можно видеть пользовательскую полосу расположенную вверху с даным значением градиента в свойстве `titleBackground`. Дополнительное действие в `Кнопке-иконке` распложенно по левую сторону.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},"9d+y":function(e,t,n){"use strict";var i=n("mXGw"),a=n.n(i),r=n("0Zz2");t.a=Object(r.a)(a.a.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"}),"Info")},A06b:function(e,t){e.exports='---\ntitle: React Grid List（网格列表）组件\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Grid List（网格列表）\n\n<p class="description">网格列表在一个系统的网格中展示了一系列的图像。</p>\n\n[网格列表](https://material.io/design/components/image-lists.html)展示了一个在重复的模式中的子集。 它们有助于提高对所持内容的视觉理解。\n\n## 仅有图像的网格列表\n\n这是一个可滚动的图像的`网格列表`的简单示例。\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## 带有标题栏的网格列表\n\n此示例演示如何使用 `GridListTileBar` 为每个 `GridListTile` 添加一个叠加层。 叠加层可以容纳 code>title</code>， `subtitle` 和辅助操作—在本例中为 `IconButton`。\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## 单行网格列表\n\n此示例演示了可以在水平方向滚动的单行纯图像网格列表。 我们其实不鼓励水平滚动网格列表，因为滚动会干扰典型的阅读模式，从而影响用户的理解。 一个值得注意的例外是水平滚动的单行网格图像列表，例如图库。\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## 高级网格列表\n\n此示例演示了“精选的”瓷砖效果 ，使用 `rows` 和 `cols` props 来调整磁贴的大小，并使用 `padding` 属性来调整间距。 瓷砖有一个位于顶部的自定义标题栏，并带有自定义渐变的 `titleBackground `。 而辅助操作的 `IconButton` 则位于左侧。\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},AMAy:function(e,t,n){"use strict";function i(e){return e}n.d(t,"a",function(){return i})},BAwC:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return h});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("PUlT"),o=n("iKYT"),l=n("wuUx"),c=n("hSxP"),d=n("l/nz"),m=n("9d+y"),u=n("gxDM"),p=Object(r.a)(function(e){return{root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450},icon:{color:"rgba(255, 255, 255, 0.54)"}}}),g=a.a.createElement(c.a,{component:"div"},"December"),f=a.a.createElement(m.a,null);function h(){var e=p();return a.a.createElement("div",{className:e.root},a.a.createElement(s.a,{cellHeight:180,className:e.gridList},a.a.createElement(o.a,{key:"Subheader",cols:2,style:{height:"auto"}},g),u.default.map(function(t){return a.a.createElement(o.a,{key:t.img},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(l.a,{title:t.title,subtitle:a.a.createElement("span",null,"by: ",t.author),actionIcon:a.a.createElement(d.a,{"aria-label":"info about ".concat(t.title),className:e.icon},f)}))})))}},DdFP:function(e,t){e.exports="const tileData = [\n  {\n    img: '/static/images/grid-list/breakfast.jpg',\n    title: 'Breakfast',\n    author: 'jill111',\n    cols: 2,\n    featured: true,\n  },\n  {\n    img: '/static/images/grid-list/burgers.jpg',\n    title: 'Tasty burger',\n    author: 'director90',\n  },\n  {\n    img: '/static/images/grid-list/camera.jpg',\n    title: 'Camera',\n    author: 'Danson67',\n  },\n  {\n    img: '/static/images/grid-list/morning.jpg',\n    title: 'Morning',\n    author: 'fancycrave1',\n    featured: true,\n  },\n  {\n    img: '/static/images/grid-list/hats.jpg',\n    title: 'Hats',\n    author: 'Hans',\n  },\n  {\n    img: '/static/images/grid-list/honey.jpg',\n    title: 'Honey',\n    author: 'fancycravel',\n  },\n  {\n    img: '/static/images/grid-list/vegetables.jpg',\n    title: 'Vegetables',\n    author: 'jill111',\n    cols: 2,\n  },\n  {\n    img: '/static/images/grid-list/plant.jpg',\n    title: 'Water plant',\n    author: 'BkrmadtyaKarki',\n  },\n  {\n    img: '/static/images/grid-list/mushroom.jpg',\n    title: 'Mushrooms',\n    author: 'PublicDomainPictures',\n  },\n  {\n    img: '/static/images/grid-list/olive.jpg',\n    title: 'Olive oil',\n    author: 'congerdesign',\n  },\n  {\n    img: '/static/images/grid-list/star.jpg',\n    title: 'Sea star',\n    cols: 2,\n    author: '821292',\n  },\n  {\n    img: '/static/images/grid-list/bike.jpg',\n    title: 'Bike',\n    author: 'danfador',\n  },\n];\n\nexport default tileData;\n"},F2Tr:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},JuD0:function(e,t){e.exports='---\ntitle: crwdns90280:0crwdne90280:0\ncomponents: crwdns90282:0crwdne90282:0\n---\n\n# crwdns90284:0crwdne90284:0\n\n<p class="description">crwdns90286:0crwdne90286:0</p>\n\ncrwdns90288:0crwdne90288:0 crwdns90290:0crwdne90290:0\n\n## crwdns90292:0crwdne90292:0\n\ncrwdns90294:0crwdne90294:0\n\ncrwdns90296:0crwdne90296:0\n\n## crwdns90298:0crwdne90298:0\n\ncrwdns90300:0crwdne90300:0 crwdns90302:0crwdne90302:0\n\ncrwdns90304:0crwdne90304:0\n\n## crwdns90306:0crwdne90306:0\n\ncrwdns90308:0crwdne90308:0 crwdns90310:0crwdne90310:0 crwdns90312:0crwdne90312:0\n\ncrwdns90314:0crwdne90314:0\n\n## crwdns90316:0crwdne90316:0\n\ncrwdns90318:0crwdne90318:0 crwdns90320:0crwdne90320:0 crwdns90322:0crwdne90322:0\n\ncrwdns90324:0crwdne90324:0'},Kvo8:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/grid-list",function(){var e=n("huz/");return{page:e.default||e}}])},"M+yB":function(e,t){e.exports='---\ntitle: Grid List React Komponente\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Rasterliste (Grid List)\n\n<p class="description">Rasterlisten zeigen eine Sammlung von Bildern in einem organisierten Raster an.</p>\n\n[Rasterlisten](https://material.io/design/components/image-lists.html) repräsentieren eine Sammlung von Elementen in einem sich wiederholenden Muster. Sie verbessern das visuelle Verständnis der Inhalte, die sie enthalten.\n\n## Nur-Bild Raster Liste\n\nEin einfaches Beispiel für ein scrollbare `RasterList` mit Bildern.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Rasterliste mit Titelleisten\n\nIn diesem Beispiel wird die Verwendung der `GridListTileBar` veranschaulicht, um jeweils eine Überlagerung zu jedem `GridListTile`hinzuzufügen. Die Überlagerung kann einen `title`, `subtitle` und eine sekundäre Aktion aufnehmen - in diesem Beispiel ein `IconButton`.\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Einzeilige Rasterliste\n\nDieses Beispiel zeigt eine horizontale, durchlaufbare, einzeilige Rasterliste von Bildern. Horizontales Scrollen von Rasterlisten wird empfohlen, da das Scrollen typische Lesemuster stört und das Verständnis beeinträchtigt. Eine Ausnahme ist eine horizontal scrollende, einzeilige Rasterliste von Bildern, z. B. einer Galerie.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Erweiterte Rasterliste\n\nIn diesem Beispiel werden "vorgestellte" Fliesen dargestellt, wobei die Eigenschaften `rows` und `cols` die Größe der Kacheln festlegen und der Abstand durch die `padding` Eigenschaft einstellen wird. Die Kacheln haben eine angepasste Titleleiste, an der Spitze positioniert ist und einem benutzerdefinierten Gradienten `titleBackground` hat. Die sekundäre Aktion `IconButton` befindet sich links.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},MGrc:function(e,t){e.exports='---\ntitle: Grid List React component\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Grid List\n\n<p class="description">Grid lists display a collection of images in an organized grid.</p>\n\n[Grid lists](https://material.io/design/components/image-lists.html) represent a collection of items in a repeated pattern. They help improve the visual comprehension of the content they hold.\n\n## Image-only Grid list\n\nA simple example of a scrollable image `GridList`.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Grid list with titlebars\n\nThis example demonstrates the use of the `GridListTileBar` to add an overlay to each `GridListTile`.\nThe overlay can accommodate a `title`, `subtitle` and secondary action - in this example an `IconButton`.\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Single line Grid list\n\nThis example demonstrates a horizontal scrollable single-line grid list of images.\nHorizontally scrolling grid lists are discouraged because the scrolling interferes with typical reading patterns, affecting comprehension.\nOne notable exception is a horizontally-scrolling, single-line grid list of images, such as a gallery.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Advanced Grid list\n\nThis example demonstrates "featured" tiles, using the `rows` and `cols` props to adjust the size of the tile, and the `padding` prop to adjust the spacing.\nThe tiles have a customized titlebar, positioned at the top and with a custom gradient `titleBackground`.\nThe secondary action `IconButton` is positioned on the left.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}\n'},PUlT:function(e,t,n){"use strict";var i=n("z3IF"),a=n("Rbzu"),r=n("2Fjn"),s=n("mXGw"),o=n.n(s),l=n("PDtE"),c=(n("FIWN"),n("XpU0")),d=o.a.forwardRef(function(e,t){var n=e.cellHeight,s=void 0===n?180:n,c=e.children,d=e.classes,m=e.className,u=e.cols,p=void 0===u?2:u,g=e.component,f=void 0===g?"ul":g,h=e.spacing,L=void 0===h?4:h,b=e.style,G=Object(r.a)(e,["cellHeight","children","classes","className","cols","component","spacing","style"]);return o.a.createElement(f,Object(i.default)({className:Object(l.a)(d.root,m),ref:t,style:Object(a.a)({margin:-L/2},b)},G),o.a.Children.map(c,function(e){if(!o.a.isValidElement(e))return null;var t=e.props.cols||1,n=e.props.rows||1;return o.a.cloneElement(e,{style:Object(i.default)({width:"".concat(100/p*t,"%"),height:"auto"===s?"auto":s*n+L,padding:L/2},e.props.style)})}))});t.a=Object(c.default)({root:{display:"flex",flexWrap:"wrap",overflowY:"auto",listStyle:"none",padding:0,WebkitOverflowScrolling:"touch"}},{name:"MuiGridList"})(d)},R1Za:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return L});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("WLtd"),o=n("PUlT"),l=n("iKYT"),c=n("wuUx"),d=n("hSxP"),m=n("l/nz"),u=n("9d+y"),p=n("gxDM"),g=Object(r.a)(function(e){return Object(s.a)({root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450},icon:{color:"rgba(255, 255, 255, 0.54)"}})}),f=a.a.createElement(d.a,{component:"div"},"December"),h=a.a.createElement(u.a,null);function L(){var e=g();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{cellHeight:180,className:e.gridList},a.a.createElement(l.a,{key:"Subheader",cols:2,style:{height:"auto"}},f),p.default.map(function(t){return a.a.createElement(l.a,{key:t.img},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(c.a,{title:t.title,subtitle:a.a.createElement("span",null,"by: ",t.author),actionIcon:a.a.createElement(m.a,{"aria-label":"info about ".concat(t.title),className:e.icon},h)}))})))}},SRUf:function(e,t){e.exports="import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n  }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},SxT0:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return f});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("WLtd"),o=n("PUlT"),l=n("iKYT"),c=n("wuUx"),d=n("l/nz"),m=n("nQ73"),u=n("gxDM"),p=Object(r.a)(function(e){return Object(s.a)({root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450,transform:"translateZ(0)"},titleBar:{background:"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)"},icon:{color:"white"}})}),g=a.a.createElement(m.a,null);function f(){var e=p();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{cellHeight:200,spacing:1,className:e.gridList},u.default.map(function(t){return a.a.createElement(l.a,{key:t.img,cols:t.featured?2:1,rows:t.featured?2:1},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(c.a,{title:t.title,titlePosition:"top",actionIcon:a.a.createElement(d.a,{"aria-label":"star ".concat(t.title),className:e.icon},g),actionPosition:"left",className:e.titleBar}))})))}},Vwxc:function(e,t){e.exports='---\ntitle: Componente React para Lista cuadriculada\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Lista cuadriculada\n\n<p class="description">Las listas cuadriculadas muestran una colección de imágenes organizadas en una cuadrícula.</p>\n\nLas [Listas cuadriculadas](https://material.io/design/components/image-lists.html) representan una colección de ítems con un patrón repetitivo. Ayudan a mejorar la comprensión visual del contenido que tienen.\n\n## Lista cuadriculada sólo con imágenes\n\nUn ejemplo simple de una lista cuadriculada (`GridList`) con imágenes desplazables.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Lista cuadriculada con barras de título\n\nEste ejemplo demuestra el uso de una barra para cuadro de lista cuadriculada (`GridListTileBar`) que agrega una capa sobrepuesta a cada cuadro en una lista cuadriculada (`GridListTile`). La capa sobrepuesta puede acomodar un título (`title`), subtítulo (`subtitle`), y acción secundaria (en este ejemplo un `IconButton`).\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Lista cuadriculada con una línea\n\nEste ejemplo muestra una lista cuadrícula con una sola línea desplazable horizontalmente. Se desaconseja usar listas cuadriculadas con desplazamiento horizontal ya que estas interfieren con los patrones típicos de lectura, afectando la comprensión. Una excepción notable es una lista cuadriculada que desplaza imágenes horizontalmente en una sola línea, como una galería.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Lista cuadriculada avanzada\n\nEste ejemplo muestra cuadros "destacados" usando los props filas (`rows`) y columnas (`cols`) para ajustar el tamaño del cuadro, y la prop relleno (`padding`) para ajustar el espaciado. Los cuadros tienen una barra de título personalizada, ubicada en la parte superior y un fondo de titulo (`titleBackground`) con degradado personalizado. La acción secundaria `IconButton` está ubicada a la izquierda.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},WLtd:function(e,t,n){"use strict";n.d(t,"a",function(){return a});var i=n("AMAy");function a(e){return Object(i.a)(e)}},YSYX:function(e,t){e.exports='---\ntitle: Grid List React component\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Grid List\n\n<p class="description">グリッドリストは、整理されたグリッドで画像のコレクションを表示します。</p>\n\n[グリッドリスト](https://material.io/design/components/image-lists.html) は、繰り返しパターンの項目の集まりを表します。 それらは、保持するコンテンツの視覚的理解を改善するのに役立ちます。\n\n## 画像のみのGrid list\n\nスクロール可能な画像の簡単な `GridList`の例。\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## タイトルバー付きのGrid list\n\nこの例は、 `GridListTileBar` を使用して、各 `GridListTile`オーバーレイを追加する方法を示しています。 オーバーレイには、 `title`, `subtitle` および副次的アクション例えば`IconButton`を含めることができます。\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Single line Grid list 単一行グリッドリスト\n\nこの例では、水平スクロール可能な単一行グリッドの画像リストを示します。 水平方向のスクロールグリッドリストは、スクロールが一般的な読み方の邪魔になり理解に影響を与えるため、推奨されません。 注目すべき例外の1つは、水平にスクロールする、ギャラリーなどの画像の1行グリッドリストです。\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## 高度なグリッドリスト\n\nこの例では、`rows` and `cols` プロップを使用してタイルのサイズを調整し、 `padding`プロップを使用して間隔を調整する方法を示します。 タイルには、上部にカスタムのタイトルバーがあり、カスタムのグラデーション`titleBackground`があります。 セカンダリアクション `IconButton` は左側に配置されます。\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},dK8R:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return p});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("PUlT"),o=n("iKYT"),l=n("wuUx"),c=n("l/nz"),d=n("nQ73"),m=n("gxDM"),u=Object(r.a)(function(e){return{root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{flexWrap:"nowrap",transform:"translateZ(0)"},title:{color:e.palette.primary.light},titleBar:{background:"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)"}}});function p(){var e=u();return a.a.createElement("div",{className:e.root},a.a.createElement(s.a,{className:e.gridList,cols:2.5},m.default.map(function(t){return a.a.createElement(o.a,{key:t.img},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(l.a,{title:t.title,classes:{root:e.titleBar,title:e.title},actionIcon:a.a.createElement(c.a,{"aria-label":"star ".concat(t.title)},a.a.createElement(d.a,{className:e.title}))}))})))}},fvHS:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return m});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("WLtd"),o=n("PUlT"),l=n("iKYT"),c=n("gxDM"),d=Object(r.a)(function(e){return Object(s.a)({root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450}})});function m(){var e=d();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{cellHeight:160,className:e.gridList,cols:3},c.default.map(function(e){return a.a.createElement(l.a,{key:e.img,cols:e.cols||1},a.a.createElement("img",{src:e.img,alt:e.title}))})))}},"gn/A":function(e,t){e.exports='---\ntitle: Composant React Grid List\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Grid list\n\n<p class="description">Les listes de grille affichent une collection d\'images dans une grille organisée.</p>\n\n[Les listes de grille](https://material.io/design/components/image-lists.html) représentent une collection d\'éléments dans un motif répété. Ils aident à améliorer la compréhension visuelle du contenu qu\'ils contiennent.\n\n## Grid list contenant uniquement des images\n\nUn exemple simple d\'image défilable `GridList`.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Grid list avec barres de titre\n\nCet exemple illustre l\'utilisation de `GridListTileBar` pour ajouter une superposition à chaque `GridListTile`. La superposition peut accueillir un `titre`, `sous - titre` et une action secondaire - dans cet exemple un `IconButton`.\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Grid List sur une ligne\n\nCet exemple illustre une grid list défilante horizontale d\'images. Les listes de grille défilant horizontalement sont déconseillées car le défilement interfère avec les habitudes de lecture, ce qui affecte la compréhension. Une exception notable est la liste d\'images comportant une seule ligne, telle qu\'une galerie, qui défile horizontalement.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Grid list avancée\n\nCet exemple montre des tuiles , en utilisant les `rows` et `cols`props pour ajuster la taille de la tuile, et le `padding` prop pour ajuster l\'espacement. Les tuiles ont une barre de titre personnalisée, placée en haut et avec un dégradé personnalisé `titleBackground`. L\'action secondaire `IconButton` est positionnée sur la gauche.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},gxDM:function(e,t,n){"use strict";n.r(t);t.default=[{img:"/static/images/grid-list/breakfast.jpg",title:"Breakfast",author:"jill111",cols:2,featured:!0},{img:"/static/images/grid-list/burgers.jpg",title:"Tasty burger",author:"director90"},{img:"/static/images/grid-list/camera.jpg",title:"Camera",author:"Danson67"},{img:"/static/images/grid-list/morning.jpg",title:"Morning",author:"fancycrave1",featured:!0},{img:"/static/images/grid-list/hats.jpg",title:"Hats",author:"Hans"},{img:"/static/images/grid-list/honey.jpg",title:"Honey",author:"fancycravel"},{img:"/static/images/grid-list/vegetables.jpg",title:"Vegetables",author:"jill111",cols:2},{img:"/static/images/grid-list/plant.jpg",title:"Water plant",author:"BkrmadtyaKarki"},{img:"/static/images/grid-list/mushroom.jpg",title:"Mushrooms",author:"PublicDomainPictures"},{img:"/static/images/grid-list/olive.jpg",title:"Olive oil",author:"congerdesign"},{img:"/static/images/grid-list/star.jpg",title:"Sea star",cols:2,author:"821292"},{img:"/static/images/grid-list/bike.jpg",title:"Bike",author:"danfador"}]},hIxR:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return g});var i=n("mXGw"),a=n.n(i),r=n("yZEQ"),s=n("PUlT"),o=n("iKYT"),l=n("wuUx"),c=n("l/nz"),d=n("nQ73"),m=n("gxDM"),u=Object(r.a)(function(e){return{root:{display:"flex",flexWrap:"wrap",justifyContent:"space-around",overflow:"hidden",backgroundColor:e.palette.background.paper},gridList:{width:500,height:450,transform:"translateZ(0)"},titleBar:{background:"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)"},icon:{color:"white"}}}),p=a.a.createElement(d.a,null);function g(){var e=u();return a.a.createElement("div",{className:e.root},a.a.createElement(s.a,{cellHeight:200,spacing:1,className:e.gridList},m.default.map(function(t){return a.a.createElement(o.a,{key:t.img,cols:t.featured?2:1,rows:t.featured?2:1},a.a.createElement("img",{src:t.img,alt:t.title}),a.a.createElement(l.a,{title:t.title,titlePosition:"top",actionIcon:a.a.createElement(c.a,{"aria-label":"star ".concat(t.title),className:e.icon},p),actionPosition:"left",className:e.titleBar}))})))}},hSxP:function(e,t,n){"use strict";var i=n("z3IF"),a=n("2Fjn"),r=n("mXGw"),s=n.n(r),o=n("PDtE"),l=n("XpU0"),c=n("GbnF"),d=s.a.forwardRef(function(e,t){var n=e.classes,r=e.className,l=e.color,d=void 0===l?"default":l,m=e.component,u=void 0===m?"li":m,p=e.disableGutters,g=void 0!==p&&p,f=e.disableSticky,h=void 0!==f&&f,L=e.inset,b=void 0!==L&&L,G=Object(a.a)(e,["classes","className","color","component","disableGutters","disableSticky","inset"]);return s.a.createElement(u,Object(i.default)({className:Object(o.a)(n.root,r,"default"!==d&&n["color".concat(Object(c.a)(d))],b&&n.inset,!h&&n.sticky,!g&&n.gutters),ref:t},G))});t.a=Object(l.default)(function(e){return{root:{boxSizing:"border-box",lineHeight:"48px",listStyle:"none",color:e.palette.text.secondary,fontFamily:e.typography.fontFamily,fontWeight:e.typography.fontWeightMedium,fontSize:e.typography.pxToRem(14)},colorPrimary:{color:e.palette.primary.main},colorInherit:{color:"inherit"},gutters:{paddingLeft:16,paddingRight:16},inset:{paddingLeft:72},sticky:{position:"sticky",top:0,zIndex:1,backgroundColor:"inherit"}}},{name:"MuiListSubheader"})(d)},"huz/":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var i=n("mXGw"),a=n.n(i),r=n("e+1t"),s=n("/ZL3"),o=n("7ZnH"),l=a.a.createElement(r.a,{req:s,reqSource:o,reqPrefix:"pages/components/grid-list"});function c(){return l}},iKYT:function(e,t,n){"use strict";var i=n("z3IF"),a=n("2Fjn"),r=n("0tNF"),s=n("mXGw"),o=n.n(s),l=n("PDtE"),c=n("25Ld"),d=n("XpU0"),m=n("c1Jj"),u=function(e,t){var n,i,a,s;e&&e.complete&&(e.width/e.height>e.parentNode.offsetWidth/e.parentNode.offsetHeight?((n=e.classList).remove.apply(n,Object(r.default)(t.imgFullWidth.split(" "))),(i=e.classList).add.apply(i,Object(r.default)(t.imgFullHeight.split(" ")))):((a=e.classList).remove.apply(a,Object(r.default)(t.imgFullHeight.split(" "))),(s=e.classList).add.apply(s,Object(r.default)(t.imgFullWidth.split(" ")))))};var p=o.a.forwardRef(function(e,t){var n=e.children,r=e.classes,s=e.className,d=(e.cols,e.component),p=void 0===d?"li":d,g=(e.rows,Object(a.a)(e,["children","classes","className","cols","component","rows"])),f=o.a.useRef(null);return o.a.useEffect(function(){!function(e,t){e&&(e.complete?u(e,t):e.addEventListener("load",function(){u(e,t)}))}(f.current,r)}),o.a.useEffect(function(){var e=Object(c.a)(function(){u(f.current,r)});return window.addEventListener("resize",e),function(){e.clear(),window.removeEventListener("resize",e)}},[r]),o.a.createElement(p,Object(i.default)({className:Object(l.a)(r.root,s),ref:t},g),o.a.createElement("div",{className:r.tile},o.a.Children.map(n,function(e){return o.a.isValidElement(e)?"img"===e.type||Object(m.a)(e,["Image"])?o.a.cloneElement(e,{ref:f}):e:null})))});t.a=Object(d.default)({root:{boxSizing:"border-box",flexShrink:0},tile:{position:"relative",display:"block",height:"100%",overflow:"hidden"},imgFullHeight:{height:"100%",transform:"translateX(-50%)",position:"relative",left:"50%"},imgFullWidth:{width:"100%",position:"relative",transform:"translateY(-50%)",top:"50%"}},{name:"MuiGridListTile"})(p)},kXhf:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function ImageGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img} alt={tile.title} />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},kufl:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">December</ListSubheader>\n        </GridListTile>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},lt4t:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function AdvancedGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`} className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},nQ73:function(e,t,n){"use strict";var i=n("mXGw"),a=n.n(i),r=n("0Zz2");t.a=Object(r.a)(a.a.createElement("path",{d:"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"}),"StarBorder")},nhTq:function(e,t){e.exports="import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n      color: 'white',\n    },\n  }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function AdvancedGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`} className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},wuUx:function(e,t,n){"use strict";var i=n("z3IF"),a=n("2Fjn"),r=n("mXGw"),s=n.n(r),o=n("PDtE"),l=n("XpU0"),c=s.a.forwardRef(function(e,t){var n=e.actionIcon,r=e.actionPosition,l=void 0===r?"right":r,c=e.classes,d=e.className,m=e.subtitle,u=e.title,p=e.titlePosition,g=void 0===p?"bottom":p,f=Object(a.a)(e,["actionIcon","actionPosition","classes","className","subtitle","title","titlePosition"]),h=n&&l,L=Object(o.a)(c.root,d,"top"===g?c.titlePositionTop:c.titlePositionBottom,m&&c.rootSubtitle),b=Object(o.a)(c.titleWrap,{left:c.titleWrapActionPosLeft,right:c.titleWrapActionPosRight}[h]);return s.a.createElement("div",Object(i.default)({className:L,ref:t},f),s.a.createElement("div",{className:b},s.a.createElement("div",{className:c.title},u),m?s.a.createElement("div",{className:c.subtitle},m):null),n?s.a.createElement("div",{className:Object(o.a)(c.actionIcon,{left:c.actionIconActionPosLeft}[h])},n):null)});t.a=Object(l.default)(function(e){return{root:{position:"absolute",left:0,right:0,height:48,background:"rgba(0, 0, 0, 0.5)",display:"flex",alignItems:"center",fontFamily:e.typography.fontFamily},titlePositionBottom:{bottom:0},titlePositionTop:{top:0},rootSubtitle:{height:68},titleWrap:{flexGrow:1,marginLeft:16,marginRight:16,color:e.palette.common.white,overflow:"hidden"},titleWrapActionPosLeft:{marginLeft:0},titleWrapActionPosRight:{marginRight:0},title:{fontSize:e.typography.pxToRem(16),lineHeight:"24px",textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},subtitle:{fontSize:e.typography.pxToRem(12),lineHeight:1,textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"},actionIcon:{},actionIconActionPosLeft:{order:-1}}},{name:"MuiGridListTileBar"})(c)},xQ13:function(e,t){e.exports="import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    title: {\n      color: theme.palette.primary.light,\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n  }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`}>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"},yT18:function(e,t){e.exports='---\ntitle: Componente React para Lista de Grade\ncomponents: GridList, GridListTile, GridListTileBar, ListSubheader, IconButton\n---\n\n# Lista de Grade\n\n<p class="description">As listas de grade exibem uma coleção de imagens em uma grade de forma organizada.</p>\n\n[Listas de Grade](https://material.io/design/components/image-lists.html) representam uma coleção de itens em um padrão repetido. Elas ajudam a melhorar a compreensão visual do conteúdo que elas contêm.\n\n## Lista de grade com imagens\n\nUm exemplo simples de uma `GridList` com imagens.\n\n{{"demo": "pages/components/grid-list/ImageGridList.js", "hideEditButton": true}}\n\n## Lista de grade com barras de título\n\nEste exemplo demonstra o uso do `GridListTileBar` para adicionar uma sobreposição a cada `GridListTile`. A sobreposição pode acomodar um `title`, `subtitle` e ação secundária - neste exemplo utilizamos um `IconButton`.\n\n{{"demo": "pages/components/grid-list/TitlebarGridList.js", "hideEditButton": true}}\n\n## Lista de grade de linha única\n\nEste exemplo demonstra uma lista de grade com imagens, em linha unica e rolável horizontalmente. As listas de grade de rolagem horizontal não são recomendadas porque a rolagem interfere nos padrões de leitura típicos, afetando a compreensão. Uma exceção notável para rolagem horizontal, seria uma lista de grade com imagens em linha única, como uma galeria.\n\n{{"demo": "pages/components/grid-list/SingleLineGridList.js", "hideEditButton": true}}\n\n## Lista de grade avançada\n\nEste exemplo demonstra blocos "em destaque", usando as propriedades `rows` e `cols` para ajustar o tamanho do bloco, e a propriedade `padding` para ajustar o espaçamento. Os blocos tem uma barra de título customizada, posicionada no topo e com um gradiente personalizado `titleBackground`. A ação secundária `IconButton` está posicionada à esquerda.\n\n{{"demo": "pages/components/grid-list/AdvancedGridList.js", "hideEditButton": true}}'},z4qI:function(e,t){e.exports="import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport tileData from './tileData';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n  }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function ImageGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img} alt={tile.title} />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"}},[["Kvo8","5d41","9da1"]]]);