(window.webpackJsonp=window.webpackJsonp||[]).push([["b96d"],{"+3vQ":function(e,n){e.exports='---\ntitle: Checkbox React component\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Casillas de Verificación\n\n<p class="description">Los Checkbox permiten al usuario seleccionar uno o más elementos de un conjunto.</p>\n\n[Checkboxes](https://material.io/design/components/selection-controls.html#checkboxes) se pueden usar para activar o desactivar una opción.\n\nSi tienes varias opciones en una lista, puedes ahorrar espacio usando checkboxes en lugar de utilizar interruptores de encendedido/apagado. Si tienes una única opción, evita usar un checkbox y utiliza un interruptor de encendido/apagado en su lugar.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\nEl `Checkbox` también puede ser usado con una etiqueta de descripción gracias al componente `FormControlLabel`.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Checkboxes con FormGroup\n\n`FormGroup` es un contenedor muy útil usado para agrupar componentes de controles de selección que proporciona una API más sencilla.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Ubicación de Etiqueta\n\nPuede cambiar la ubicación de la etiqueta:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Accesibilidad\n\nTodos los controles de formulario deben tener etiquetas, y esto incluye radio buttons, checkboxes, and switches. En la mayoría de los casos, esto se hace usando el elemento `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nCuando no se puede usar una etiqueta, es necesario agregar un atributo directamente al componente de entrada. En este caso, puede aplicar el atributo adicional (por ejemplo, `aria-label`, `aria-labelledby`, `title`) a través de la propiedad `inputProps`.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Guía\n\n- [Checkboxes vs. Botones de selección](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},"+j9t":function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("Rbzu"),r=o("mXGw"),l=o.n(r),i=o("PDtE"),s=o("ADfD"),d=o("Hg0Q"),m=o("XpU0"),u=l.a.forwardRef(function(e,n){var o=e.classes,c=e.className,r=e.component,m=void 0===r?"p":r,u=(e.disabled,e.error,e.filled,e.focused,e.margin,e.required,e.variant,Object(t.a)(e,["classes","className","component","disabled","error","filled","focused","margin","required","variant"])),h=Object(d.a)(),b=Object(s.a)({props:e,muiFormControl:h,states:["variant","margin","disabled","error","filled","focused","required"]});return l.a.createElement(m,Object(a.default)({className:Object(i.a)(o.root,("filled"===b.variant||"outlined"===b.variant)&&o.contained,c,b.disabled&&o.disabled,b.error&&o.error,b.filled&&o.filled,b.focused&&o.focused,b.required&&o.required,{dense:o.marginDense}[b.margin]),ref:n},u))});n.a=Object(m.default)(function(e){return{root:Object(c.a)({color:e.palette.text.secondary},e.typography.caption,{textAlign:"left",marginTop:8,lineHeight:"1em",minHeight:"1em",margin:0,"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),error:{},disabled:{},marginDense:{marginTop:4},contained:{margin:"8px 12px 0"},focused:{},filled:{},required:{}}},{name:"MuiFormHelperText"})(u)},"1ChV":function(e,n){e.exports="import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Checkboxes() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{\n          'aria-label': 'primary checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{\n          'aria-label': 'secondary checkbox',\n        }}\n      />\n      <Checkbox\n        value=\"checkedC\"\n        inputProps={{\n          'aria-label': 'uncontrolled-checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        value=\"checkedD\"\n        inputProps={{\n          'aria-label': 'disabled checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{\n          'aria-label': 'disabled checked checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{\n          'aria-label': 'indeterminate checkbox',\n        }}\n      />\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{\n          'aria-label': 'checkbox with default color',\n        }}\n      />\n    </div>\n  );\n}\n"},"2x5S":function(e,n){e.exports='import React from \'react\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport { green } from \'@material-ui/core/colors\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport Checkbox from \'@material-ui/core/Checkbox\';\nimport CheckBoxOutlineBlankIcon from \'@material-ui/icons/CheckBoxOutlineBlank\';\nimport CheckBoxIcon from \'@material-ui/icons/CheckBox\';\nimport Favorite from \'@material-ui/icons/Favorite\';\nimport FavoriteBorder from \'@material-ui/icons/FavoriteBorder\';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \'&$checked\': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color="default" {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox checked={state.checkedA} onChange={handleChange(\'checkedA\')} value="checkedA" />\n        }\n        label="Secondary"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange(\'checkedB\')}\n            value="checkedB"\n            color="primary"\n          />\n        }\n        label="Primary"\n      />\n      <FormControlLabel control={<Checkbox value="checkedC" />} label="Uncontrolled" />\n      <FormControlLabel disabled control={<Checkbox value="checkedD" />} label="Disabled" />\n      <FormControlLabel disabled control={<Checkbox checked value="checkedE" />} label="Disabled" />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange(\'checkedF\')}\n            value="checkedF"\n            indeterminate\n          />\n        }\n        label="Indeterminate"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={state.checkedG}\n            onChange={handleChange(\'checkedG\')}\n            value="checkedG"\n          />\n        }\n        label="Custom color"\n      />\n      <FormControlLabel\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value="checkedH" />}\n        label="Custom icon"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize="small" />}\n            checkedIcon={<CheckBoxIcon fontSize="small" />}\n            value="checkedI"\n          />\n        }\n        label="Custom size"\n      />\n    </FormGroup>\n  );\n}\n'},"3LYT":function(e,n){e.exports='---\ntitle: Checkbox React-Komponente\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Kontrollkästchen\n\n<p class="description">Kontrollkästchen ermöglichen dem Benutzer die Auswahl eines oder mehrerer Elemente aus einem Satz.</p>\n\n[Kontrollkästchen ](https://material.io/design/components/selection-controls.html#checkboxes) können eine Option aus- oder anschalten.\n\nWenn in einer Liste mehrere Optionen erscheinen, können Sie durch Kontrollkästchen die Abstände erhalten statt Ein- / Aus - Schalter zu verwenden. Wenn Sie nur eine Option haben, vermeiden Sie die Verwendung eines Kontrollkästchens und verwenden Sie stattdessen einen Ein- / Ausschalter.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\nDie `Checkbox` kann dank der `FormControlLabel` Komponente auch mit einer Etikettenbeschreibung verwendet werden.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Kontrollkästchen mit FormGroup\n\n`FormGroup` ist ein hilfreicher Wrapper zum Gruppieren von Auswahlsteuerungskomponenten, welcher eine einfachere API bietet.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Etikettenplatzierung\n\nSie können die Platzierung des Etiketts ändern:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Barrierefreiheit\n\nAlle Formularsteuerelemente sollten Beschriftungen haben. Dazu gehören Optionsfelder, Kontrollkästchen und Schalter. In den meisten Fällen wird dazu das Element `<label>` ([FormControlLabel](/api/form-control-label/)) verwendet.\n\nWenn ein Label nicht verwendet werden kann, muss der Eingabekomponente ein Attribut direkt hinzugefügt werden. In diesem Fall können Sie das zusätzliche Attribut (z. B. `aria-label`, `aria-labelby`, `title`) über die Eigenschaft `inputProps` anwenden.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Anleitung\n\n- [Kontrollkästchen vs. Optionsfeld (Radio Buttons)](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},"3tg/":function(e,n,o){"use strict";var a=o("mXGw"),t=o.n(a),c=o("0Zz2");n.a=Object(c.a)(t.a.createElement("path",{d:"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}),"FavoriteBorder")},"3xDF":function(e,n){e.exports='---\ntitle: Checkbox React component\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Cases à cocher\n\n<p class="description">Les cases à cocher permettent à l\'utilisateur de sélectionner un ou plusieurs objets d\'un ensembe.</p>\n\n[Les cases à cocher](https://material.io/design/components/selection-controls.html#checkboxes) peuvent être utilisées pour activer ou désactiver une option.\n\nSi vous avez plusieurs options dans une liste, vous pouvez conserver de l\'espace en utilisant des cases à cocher au lieu d\'interrupteurs d\'activation / désactivation. Si vous n\'avez qu\'une seule option, évitez d’utiliser une case à cocher et utilisez plutôt un interrupteur on / off à la place.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\n`La case à cocher` peut également être utilisée avec une description label grâce au composant `FormControlLabel`.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Cases à cocher avec FormGroup\n\n`FormGroup` est un wrapper utile utilisé pour regrouper les composants de contrôles de sélection et qui fournit une API plus simple.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Emplacement du label\n\nVous pouvez changer l\'emplacement du label:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Accessibilité\n\nTous les contrôles de formulaire doivent avoir des labels, cela vaut également pour les boutons radio, les cases à cocher et les interrupteurs. Dans la plupart des cas, cela se fait en utilisant l\'élément `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nLorsqu\'un label ne peut pas être utilisé, il est nécessaire d\'ajouter un attribut directement au composant input. Dans ce cas, vous pouvez appliquer l\'attribut supplémentaire (ex: `aria-label`, `aria-labelledby`, `title`) via la propriété `inputProps`.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Conseils\n\n- [Checkboxes vs. Radio Buttons](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},"5Z+S":function(e,n){e.exports='import React from \'react\';\nimport Checkbox from \'@material-ui/core/Checkbox\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\n\nfunction FormControlLabelPosition() {\n  const [value, setValue] = React.useState(\'female\');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">labelPlacement</FormLabel>\n      <FormGroup aria-label="position" name="position" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value="top"\n          control={<Checkbox color="primary" />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Checkbox color="primary" />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Checkbox color="primary" />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel\n          value="end"\n          control={<Checkbox color="primary" />}\n          label="End"\n          labelPlacement="end"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default FormControlLabelPosition;\n'},"5vc6":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return E});var a=o("azxR"),t=o("Rbzu"),c=o("z3IF"),r=o("mXGw"),l=o.n(r),i=o("XpU0"),s=o("FJkE"),d=o("BT9p"),m=o("Lqxv"),u=o("ldZT"),h=o("gXWL"),b=o("FhH1"),p=o("PDil"),k=o("3tg/"),C=Object(i.default)({root:{color:s.default[400],"&$checked":{color:s.default[600]}},checked:{}})(function(e){return l.a.createElement(u.a,Object(c.default)({color:"default"},e))}),f=l.a.createElement(m.a,{control:l.a.createElement(u.a,{value:"checkedC"}),label:"Uncontrolled"}),x=l.a.createElement(m.a,{disabled:!0,control:l.a.createElement(u.a,{value:"checkedD"}),label:"Disabled"}),v=l.a.createElement(m.a,{disabled:!0,control:l.a.createElement(u.a,{checked:!0,value:"checkedE"}),label:"Disabled"}),g=l.a.createElement(m.a,{control:l.a.createElement(u.a,{icon:l.a.createElement(k.a,null),checkedIcon:l.a.createElement(p.a,null),value:"checkedH"}),label:"Custom icon"}),F=l.a.createElement(m.a,{control:l.a.createElement(u.a,{icon:l.a.createElement(h.a,{fontSize:"small"}),checkedIcon:l.a.createElement(b.a,{fontSize:"small"}),value:"checkedI"}),label:"Custom size"});function E(){var e=l.a.useState({checkedA:!0,checkedB:!0,checkedF:!0,checkedG:!0}),n=e[0],o=e[1],c=function(e){return function(c){o(Object(t.a)({},n,Object(a.a)({},e,c.target.checked)))}};return l.a.createElement(d.a,{row:!0},l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedA,onChange:c("checkedA"),value:"checkedA"}),label:"Secondary"}),l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedB,onChange:c("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),f,x,v,l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedF,onChange:c("checkedF"),value:"checkedF",indeterminate:!0}),label:"Indeterminate"}),l.a.createElement(m.a,{control:l.a.createElement(C,{checked:n.checkedG,onChange:c("checkedG"),value:"checkedG"}),label:"Custom color"}),g,F)}},"7In6":function(e,n){e.exports='---\ntitle: Componente React Caixa de Seleção\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Caixas de Seleção\n\n<p class="description">Caixas de Seleção permitem o usuário selecionar um ou mais itens de um conjunto.</p>\n\n[Caixas de Seleção](https://material.io/design/components/selection-controls.html#checkboxes) podem ser usadas para ativar ou desativar uma opção.\n\nSe você tem várias opções aparecendo em uma lista, você pode economizar espaço usando caixas de seleção ao invés de seletores liga/desliga. Se você tem uma única opção, evite usar uma caixa de seleção e use um seletor de liga/desliga.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\nCaixa de Seleção pode também ser usada com um rótulo graças ao componente `FormControlLabel`.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Caixas de Seleção com FormGroup\n\n`FormGroup` é usado para agrupar componentes seletores para facilitar o uso da API.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Posicionamento do Rótulo\n\nVocê pode alterar o posicionamento do rótulo:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Acessibilidade\n\nTodos os controles de formulário devem ter rótulos, e isso inclui Botões de Opção, Caixas de Seleção e Seletores. Na maioria dos casos, isso é feito usando o elemento `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nQuando um rótulo não pode ser usado, é necessário adicionar um atributo diretamente no componente de entrada. Nesse caso você pode aplicar um atributo adicional (e.g.`aria-label`,`aria-labelledby`, `title`) através da propriedade `inputProps`.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Guia\n\n- [Caixas de Seleção vs. Botões de Opção](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},"7RiP":function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("Rbzu"),r=o("mXGw"),l=o.n(r),i=o("PDtE"),s=o("ADfD"),d=o("Hg0Q"),m=o("XpU0"),u=l.a.forwardRef(function(e,n){var o=e.children,c=e.classes,r=e.className,m=e.component,u=void 0===m?"label":m,h=(e.disabled,e.error,e.filled,e.focused,e.required,Object(t.a)(e,["children","classes","className","component","disabled","error","filled","focused","required"])),b=Object(d.a)(),p=Object(s.a)({props:e,muiFormControl:b,states:["required","focused","disabled","error","filled"]});return l.a.createElement(u,Object(a.default)({className:Object(i.a)(c.root,r,p.disabled&&c.disabled,p.error&&c.error,p.filled&&c.filled,p.focused&&c.focused,p.required&&c.required),ref:n},h),o,p.required&&l.a.createElement("span",{className:Object(i.a)(c.asterisk,p.error&&c.error)}," ","*"))});n.a=Object(m.default)(function(e){return{root:Object(c.a)({color:e.palette.text.secondary},e.typography.body1,{lineHeight:1,padding:0,"&$focused":{color:e.palette.primary["light"===e.palette.type?"dark":"light"]},"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),focused:{},disabled:{},error:{},filled:{},required:{},asterisk:{"&$error":{color:e.palette.error.main}}}},{name:"MuiFormLabel"})(u)},"7oX2":function(e,n){e.exports='---\ntitle: CheckBox コンポーネント\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Checkbox\n\n<p class="description">Checkboxコンポーネントにより、ユーザーの選択が一つ以上の項目から設定します。</p>\n\n[CheckBox コンポーネント](https://material.io/design/components/selection-controls.html#checkboxes) を使用してオプションをオンまたはオフにすることができます。\n\nリストに複数のオプションを持っている場合は、 Checkboxを使用して代わりのオン/オフスイッチのスペースを保存することができます。 選択肢が1つしかない場合は、チェックボックスを使用せずに代わりにオン/オフスイッチを使用します。\n\n{{"demo": "pages/demos/checkboxes/Checkboxes.js"}}\n\n`Checkbox`コンポーネントは` FormControlLabel<code>コンポーネントを説明のラベルとして使うことができます。</p>\n\n<p>{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}</p>\n\n<h2>FormGroupのCheckbox</h2>\n\n<p><code>FormGroup` は、より簡単なAPIを提供する選択コントロールコンポーネントをグループ化するために使用される便利なラッパーです。\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## ラベルの配置\n\nラベルの配置は自由に変更できます。\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## アクセシビリティ\n\nラジオボタン、チェックボックス、スイッチなどのすべてのフォームコントロールにラベルを付ける必要があります。 ほとんどの場合、 `<label>` 要素（[FormControlLabel](/api/form-control-label/)）を使用して行われます。\n\nラベルを使用できない場合は、入力コンポーネントに直接属性を追加する必要があります。 この場合、追加の属性（例： `aria-label`, `aria-labelledby`, `title`)を経由して `inputProps` プロパティを追加します。\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## ガイド\n\n- [Checkboxと Radio Buttons](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},AMAy:function(e,n,o){"use strict";function a(e){return e}o.d(n,"a",function(){return a})},BT9p:function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("mXGw"),r=o.n(c),l=o("PDtE"),i=o("XpU0"),s=r.a.forwardRef(function(e,n){var o=e.classes,c=e.className,i=e.row,s=void 0!==i&&i,d=Object(t.a)(e,["classes","className","row"]);return r.a.createElement("div",Object(a.default)({className:Object(l.a)(o.root,c,s&&o.row),ref:n},d))});n.a=Object(i.default)({root:{display:"flex",flexDirection:"column",flexWrap:"wrap"},row:{flexDirection:"row"}},{name:"MuiFormGroup"})(s)},CJnx:function(e,n,o){"use strict";o.r(n);var a=o("mXGw"),t=o.n(a),c=o("ldZT"),r=o("BT9p"),l=o("Lqxv"),i=o("Nulz"),s=o("7RiP"),d=t.a.createElement(s.a,{component:"legend"},"labelPlacement"),m=t.a.createElement(l.a,{value:"top",control:t.a.createElement(c.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),u=t.a.createElement(l.a,{value:"start",control:t.a.createElement(c.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),h=t.a.createElement(l.a,{value:"bottom",control:t.a.createElement(c.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),b=t.a.createElement(l.a,{value:"end",control:t.a.createElement(c.a,{color:"primary"}),label:"End",labelPlacement:"end"});n.default=function(){var e=t.a.useState("female"),n=e[0],o=e[1];return t.a.createElement(i.a,{component:"fieldset"},d,t.a.createElement(r.a,{"aria-label":"position",name:"position",value:n,onChange:function(e){o(e.target.value)},row:!0},m,u,h,b))}},"DY+x":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return E});var a=o("azxR"),t=o("Rbzu"),c=o("z3IF"),r=o("mXGw"),l=o.n(r),i=o("XpU0"),s=o("FJkE"),d=o("BT9p"),m=o("Lqxv"),u=o("ldZT"),h=o("gXWL"),b=o("FhH1"),p=o("PDil"),k=o("3tg/"),C=Object(i.default)({root:{color:s.default[400],"&$checked":{color:s.default[600]}},checked:{}})(function(e){return l.a.createElement(u.a,Object(c.default)({color:"default"},e))}),f=l.a.createElement(m.a,{control:l.a.createElement(u.a,{value:"checkedC"}),label:"Uncontrolled"}),x=l.a.createElement(m.a,{disabled:!0,control:l.a.createElement(u.a,{value:"checkedD"}),label:"Disabled"}),v=l.a.createElement(m.a,{disabled:!0,control:l.a.createElement(u.a,{checked:!0,value:"checkedE"}),label:"Disabled"}),g=l.a.createElement(m.a,{control:l.a.createElement(u.a,{icon:l.a.createElement(k.a,null),checkedIcon:l.a.createElement(p.a,null),value:"checkedH"}),label:"Custom icon"}),F=l.a.createElement(m.a,{control:l.a.createElement(u.a,{icon:l.a.createElement(h.a,{fontSize:"small"}),checkedIcon:l.a.createElement(b.a,{fontSize:"small"}),value:"checkedI"}),label:"Custom size"});function E(){var e=l.a.useState({checkedA:!0,checkedB:!0,checkedF:!0,checkedG:!0}),n=e[0],o=e[1],c=function(e){return function(c){o(Object(t.a)({},n,Object(a.a)({},e,c.target.checked)))}};return l.a.createElement(d.a,{row:!0},l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedA,onChange:c("checkedA"),value:"checkedA"}),label:"Secondary"}),l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedB,onChange:c("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),f,x,v,l.a.createElement(m.a,{control:l.a.createElement(u.a,{checked:n.checkedF,onChange:c("checkedF"),value:"checkedF",indeterminate:!0}),label:"Indeterminate"}),l.a.createElement(m.a,{control:l.a.createElement(C,{checked:n.checkedG,onChange:c("checkedG"),value:"checkedG"}),label:"Custom color"}),g,F)}},FJkE:function(e,n,o){"use strict";o.r(n);n.default={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"}},FhH1:function(e,n,o){"use strict";var a=o("mXGw"),t=o.n(a),c=o("0Zz2");n.a=Object(c.a)(t.a.createElement("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox")},Hg0Q:function(e,n,o){"use strict";o.d(n,"a",function(){return r});var a=o("mXGw"),t=o.n(a),c=o("zpLS");function r(){return t.a.useContext(c.a)}},KbyV:function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return i});var a=o("azxR"),t=o("Rbzu"),c=o("mXGw"),r=o.n(c),l=o("ldZT");function i(){var e=r.a.useState({checkedA:!0,checkedB:!0,checkedF:!0}),n=e[0],o=e[1],c=function(e){return function(c){o(Object(t.a)({},n,Object(a.a)({},e,c.target.checked)))}};return r.a.createElement("div",null,r.a.createElement(l.a,{checked:n.checkedA,onChange:c("checkedA"),value:"checkedA",inputProps:{"aria-label":"primary checkbox"}}),r.a.createElement(l.a,{checked:n.checkedB,onChange:c("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"secondary checkbox"}}),r.a.createElement(l.a,{value:"checkedC",inputProps:{"aria-label":"uncontrolled-checkbox"}}),r.a.createElement(l.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),r.a.createElement(l.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"disabled checked checkbox"}}),r.a.createElement(l.a,{checked:n.checkedF,onChange:c("checkedF"),value:"checkedF",indeterminate:!0,inputProps:{"aria-label":"indeterminate checkbox"}}),r.a.createElement(l.a,{defaultChecked:!0,color:"default",value:"checkedG",inputProps:{"aria-label":"checkbox with default color"}}))}},LIpD:function(e,n){e.exports='---\ntitle: Checkbox React component\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Чекбоксы\n\n<p class="description">Чекбоксы позволяют выбрать один или несколько элементов из набора.</p>\n\n[Чекбоксы](https://material.io/design/components/selection-controls.html#checkboxes) могут быть использованы для включения или выключения различных опций.\n\nЕсли у вас есть несколько опций, отображаемых в списке, вы можете сохранить пространство, используя чекбоксы вместо переключателей. Если у вас есть только один вариант, лучше не использовать чекбокс, вместо него используйте переключатель включения / выключения.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\n`Чекбокс` также можно использовать с описанием метки благодаря компоненту `FormControlLabel`.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Чекбоксы с FormGroup\n\n`FormGroup` - это полезная обертка, используемая для группировки компонентов элементов управления выбором, она предоставляет более простой API.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Расположение метки\n\nРасположение метки можно изменить:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Доступность\n\nВсе элементы формы должны иметь метки, в том числе радиокнопки, переключатели и чекбоксы. В большинстве случаев это делается с помощью элемента `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nКогда метка не может быть использована, необходимо добавить атрибут непосредственно на поле ввода. В этом случае можно применить дополнительный атрибут (например, `aria-label`, `aria-labelledby`, `title`) через свойство `inputProps`.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Guidance\n\n- [Checkboxes vs. Radio Buttons (радиокнопки)](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},Lqxv:function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("mXGw"),r=o.n(c),l=o("PDtE"),i=o("Hg0Q"),s=o("XpU0"),d=o("Oy88"),m=o("GbnF"),u=r.a.forwardRef(function(e,n){e.checked;var o=e.classes,c=e.className,s=e.control,u=e.disabled,h=(e.inputRef,e.label),b=e.labelPlacement,p=void 0===b?"end":b,k=(e.name,e.onChange,e.value,Object(t.a)(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),C=Object(i.a)(),f=u;void 0===f&&void 0!==s.props.disabled&&(f=s.props.disabled),void 0===f&&C&&(f=C.disabled);var x={disabled:f};return["checked","name","onChange","value","inputRef"].forEach(function(n){void 0===s.props[n]&&void 0!==e[n]&&(x[n]=e[n])}),r.a.createElement("label",Object(a.default)({className:Object(l.a)(o.root,c,"end"!==p&&o["labelPlacement".concat(Object(m.a)(p))],f&&o.disabled),ref:n},k),r.a.cloneElement(s,x),r.a.createElement(d.a,{component:"span",className:Object(l.a)(o.label,f&&o.disabled)},h))});n.a=Object(s.default)(function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}},{name:"MuiFormControlLabel"})(u)},Nulz:function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("mXGw"),r=o.n(c),l=o("PDtE"),i=(o("FIWN"),o("imrm")),s=o("XpU0"),d=o("GbnF"),m=o("c1Jj"),u=o("zpLS"),h=r.a.forwardRef(function(e,n){var o=e.children,c=e.classes,s=e.className,h=e.component,b=void 0===h?"div":h,p=e.disabled,k=void 0!==p&&p,C=e.error,f=void 0!==C&&C,x=e.fullWidth,v=void 0!==x&&x,g=e.hiddenLabel,F=void 0!==g&&g,E=e.margin,L=void 0===E?"none":E,j=e.required,w=void 0!==j&&j,y=e.variant,G=void 0===y?"standard":y,P=Object(t.a)(e,["children","classes","className","component","disabled","error","fullWidth","hiddenLabel","margin","required","variant"]),O=r.a.useState(function(){var e=!1;return o&&r.a.Children.forEach(o,function(n){if(Object(m.a)(n,["Input","Select"])){var o=Object(m.a)(n,["Select"])?n.props.input:n;o&&Object(i.a)(o.props)&&(e=!0)}}),e})[0],B=r.a.useState(function(){var e=!1;return o&&r.a.Children.forEach(o,function(n){Object(m.a)(n,["Input","Select"])&&Object(i.b)(n.props,!0)&&(e=!0)}),e}),A=B[0],S=B[1],z=r.a.useState(!1),I=z[0],R=z[1];k&&I&&R(!1);var D={adornedStart:O,disabled:k,error:f,filled:A,focused:I,hiddenLabel:F,margin:L,onBlur:function(){R(!1)},onEmpty:function(){A&&S(!1)},onFilled:function(){A||S(!0)},onFocus:function(){R(!0)},registerEffect:void 0,required:w,variant:G};return r.a.createElement(u.a.Provider,{value:D},r.a.createElement(b,Object(a.default)({className:Object(l.a)(c.root,s,"none"!==L&&c["margin".concat(Object(d.a)(L))],v&&c.fullWidth),ref:n},P),o))});n.a=Object(s.default)({root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}},{name:"MuiFormControl"})(h)},PDil:function(e,n,o){"use strict";var a=o("mXGw"),t=o.n(a),c=o("0Zz2");n.a=Object(c.a)(t.a.createElement("path",{d:"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}),"Favorite")},W9wr:function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return v});var a=o("azxR"),t=o("Rbzu"),c=o("mXGw"),r=o.n(c),l=o("yZEQ"),i=o("WLtd"),s=o("7RiP"),d=o("Nulz"),m=o("BT9p"),u=o("Lqxv"),h=o("+j9t"),b=o("ldZT"),p=Object(l.a)(function(e){return Object(i.a)({root:{display:"flex"},formControl:{margin:e.spacing(3)}})}),k=r.a.createElement(s.a,{component:"legend"},"Assign responsibility"),C=r.a.createElement(h.a,null,"Be careful"),f=r.a.createElement(s.a,{component:"legend"},"Pick two"),x=r.a.createElement(h.a,null,"You can display an error");function v(){var e=p(),n=r.a.useState({gilad:!0,jason:!1,antoine:!1}),o=n[0],c=n[1],l=function(e){return function(n){c(Object(t.a)({},o,Object(a.a)({},e,n.target.checked)))}},i=o.gilad,s=o.jason,h=o.antoine,v=2!==[i,s,h].filter(function(e){return e}).length;return r.a.createElement("div",{className:e.root},r.a.createElement(d.a,{component:"fieldset",className:e.formControl},k,r.a.createElement(m.a,null,r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:i,onChange:l("gilad"),value:"gilad"}),label:"Gilad Gray"}),r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:s,onChange:l("jason"),value:"jason"}),label:"Jason Killian"}),r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:h,onChange:l("antoine"),value:"antoine"}),label:"Antoine Llorca"})),C),r.a.createElement(d.a,{required:!0,error:v,component:"fieldset",className:e.formControl},f,r.a.createElement(m.a,null,r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:i,onChange:l("gilad"),value:"gilad"}),label:"Gilad Gray"}),r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:s,onChange:l("jason"),value:"jason"}),label:"Jason Killian"}),r.a.createElement(u.a,{control:r.a.createElement(b.a,{checked:h,onChange:l("antoine"),value:"antoine"}),label:"Antoine Llorca"})),x))}},WH4S:function(e,n,o){"use strict";var a=o("z3IF"),t=o("2Fjn"),c=o("mXGw"),r=o.n(c),l=o("PDtE"),i=o("Hg0Q"),s=o("XpU0"),d=o("l/nz"),m=r.a.forwardRef(function(e,n){var o=e.autoFocus,c=e.checked,s=e.checkedIcon,m=e.classes,u=e.className,h=e.defaultChecked,b=e.disabled,p=e.icon,k=e.id,C=e.inputProps,f=e.inputRef,x=e.name,v=e.onBlur,g=e.onChange,F=e.onFocus,E=e.readOnly,L=e.required,j=e.tabIndex,w=e.type,y=e.value,G=Object(t.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),P=r.a.useRef(null!=c).current,O=r.a.useState(Boolean(h)),B=O[0],A=O[1],S=Object(i.a)(),z=b;S&&void 0===z&&(z=S.disabled);var I=P?c:B,R="checkbox"===w||"radio"===w;return r.a.createElement(d.a,Object(a.default)({component:"span",className:Object(l.a)(m.root,u,I&&m.checked,z&&m.disabled),disabled:z,tabIndex:null,role:void 0,onFocus:function(e){F&&F(e),S&&S.onFocus&&S.onFocus(e)},onBlur:function(e){v&&v(e),S&&S.onBlur&&S.onBlur(e)},ref:n},G),I?s:p,r.a.createElement("input",Object(a.default)({autoFocus:o,checked:c,defaultChecked:h,className:m.input,disabled:z,id:R&&k,name:x,onChange:function(e){var n=e.target.checked;P||A(n),g&&g(e,n)},readOnly:E,ref:f,required:L,tabIndex:j,type:w,value:y},C)))});n.a=Object(s.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0}},{name:"PrivateSwitchBase"})(m)},WLtd:function(e,n,o){"use strict";o.d(n,"a",function(){return t});var a=o("AMAy");function t(e){return Object(a.a)(e)}},"eB/T":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return s});var a=o("mXGw"),t=o.n(a),c=o("e+1t"),r=o("imL+"),l=o("knUk"),i=t.a.createElement(c.a,{req:r,reqSource:l,reqPrefix:"pages/components/checkboxes"});function s(){return i}},f5A7:function(e,n){e.exports='import React from \'react\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport { green } from \'@material-ui/core/colors\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport Checkbox, { CheckboxProps } from \'@material-ui/core/Checkbox\';\nimport CheckBoxOutlineBlankIcon from \'@material-ui/icons/CheckBoxOutlineBlank\';\nimport CheckBoxIcon from \'@material-ui/icons/CheckBox\';\nimport Favorite from \'@material-ui/icons/Favorite\';\nimport FavoriteBorder from \'@material-ui/icons/FavoriteBorder\';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \'&$checked\': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color="default" {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox checked={state.checkedA} onChange={handleChange(\'checkedA\')} value="checkedA" />\n        }\n        label="Secondary"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange(\'checkedB\')}\n            value="checkedB"\n            color="primary"\n          />\n        }\n        label="Primary"\n      />\n      <FormControlLabel control={<Checkbox value="checkedC" />} label="Uncontrolled" />\n      <FormControlLabel disabled control={<Checkbox value="checkedD" />} label="Disabled" />\n      <FormControlLabel disabled control={<Checkbox checked value="checkedE" />} label="Disabled" />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange(\'checkedF\')}\n            value="checkedF"\n            indeterminate\n          />\n        }\n        label="Indeterminate"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={state.checkedG}\n            onChange={handleChange(\'checkedG\')}\n            value="checkedG"\n          />\n        }\n        label="Custom color"\n      />\n      <FormControlLabel\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value="checkedH" />}\n        label="Custom icon"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize="small" />}\n            checkedIcon={<CheckBoxIcon fontSize="small" />}\n            value="checkedI"\n          />\n        }\n        label="Custom size"\n      />\n    </FormGroup>\n  );\n}\n'},gLmZ:function(e,n){e.exports="---\ntitle: crwdns89740:0crwdne89740:0\ncomponents: crwdns89742:0crwdne89742:0\n---\n\n# crwdns89744:0crwdne89744:0\n\n<p class=\"description\">crwdns89746:0crwdne89746:0</p>\n\ncrwdns89748:0crwdne89748:0\n\ncrwdns89750:0crwdne89750:0 crwdns89752:0crwdne89752:0\n\ncrwdns89754:0crwdne89754:0\n\ncrwdns89756:0crwdne89756:0\n\ncrwdns89758:0crwdne89758:0\n\n## crwdns89760:0crwdne89760:0\n\ncrwdns89762:0crwdne89762:0\n\ncrwdns89764:0crwdne89764:0\n\n## crwdns89766:0crwdne89766:0\n\ncrwdns89768:0crwdne89768:0\n\ncrwdns89770:0crwdne89770:0\n\n## crwdns89772:0crwdne89772:0\n\ncrwdns89774:0crwdne89774:0 crwdns89776:0crwdne89776:0\n\ncrwdns89778:0crwdne89778:0 crwdns89780:0crwdne89780:0\n\n```jsx\ncrwdns89782:0{{ 'aria-label': 'Checkbox A' }}crwdne89782:0\n```\n\n## crwdns89784:0crwdne89784:0\n\n- [crwdns89788:0crwdne89788:0 crwdns89790:0crwdne89790:0](crwdns89786:0crwdne89786:0)"},gXWL:function(e,n,o){"use strict";var a=o("mXGw"),t=o.n(a),c=o("0Zz2");n.a=Object(c.a)(t.a.createElement("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank")},ghV2:function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return x});var a=o("azxR"),t=o("Rbzu"),c=o("mXGw"),r=o.n(c),l=o("yZEQ"),i=o("7RiP"),s=o("Nulz"),d=o("BT9p"),m=o("Lqxv"),u=o("+j9t"),h=o("ldZT"),b=Object(l.a)(function(e){return{root:{display:"flex"},formControl:{margin:e.spacing(3)}}}),p=r.a.createElement(i.a,{component:"legend"},"Assign responsibility"),k=r.a.createElement(u.a,null,"Be careful"),C=r.a.createElement(i.a,{component:"legend"},"Pick two"),f=r.a.createElement(u.a,null,"You can display an error");function x(){var e=b(),n=r.a.useState({gilad:!0,jason:!1,antoine:!1}),o=n[0],c=n[1],l=function(e){return function(n){c(Object(t.a)({},o,Object(a.a)({},e,n.target.checked)))}},i=o.gilad,u=o.jason,x=o.antoine,v=2!==[i,u,x].filter(function(e){return e}).length;return r.a.createElement("div",{className:e.root},r.a.createElement(s.a,{component:"fieldset",className:e.formControl},p,r.a.createElement(d.a,null,r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:i,onChange:l("gilad"),value:"gilad"}),label:"Gilad Gray"}),r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:u,onChange:l("jason"),value:"jason"}),label:"Jason Killian"}),r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:x,onChange:l("antoine"),value:"antoine"}),label:"Antoine Llorca"})),k),r.a.createElement(s.a,{required:!0,error:v,component:"fieldset",className:e.formControl},C,r.a.createElement(d.a,null,r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:i,onChange:l("gilad"),value:"gilad"}),label:"Gilad Gray"}),r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:u,onChange:l("jason"),value:"jason"}),label:"Jason Killian"}),r.a.createElement(m.a,{control:r.a.createElement(h.a,{checked:x,onChange:l("antoine"),value:"antoine"}),label:"Antoine Llorca"})),f))}},iDLy:function(e,n){e.exports='import React from \'react\';\nimport { makeStyles, Theme, createStyles } from \'@material-ui/core/styles\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Checkbox from \'@material-ui/core/Checkbox\';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \'flex\',\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n  }),\n);\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange(\'gilad\')} value="gilad" />}\n            label="Gilad Gray"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange(\'jason\')} value="jason" />}\n            label="Jason Killian"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange(\'antoine\')} value="antoine" />\n            }\n            label="Antoine Llorca"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl required error={error} component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange(\'gilad\')} value="gilad" />}\n            label="Gilad Gray"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange(\'jason\')} value="jason" />}\n            label="Jason Killian"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange(\'antoine\')} value="antoine" />\n            }\n            label="Antoine Llorca"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n'},"imL+":function(e,n,o){var a={"./CheckboxLabels.js":"5vc6","./CheckboxLabels.tsx":"DY+x","./Checkboxes.js":"seQv","./Checkboxes.tsx":"KbyV","./CheckboxesGroup.js":"ghV2","./CheckboxesGroup.tsx":"W9wr","./FormControlLabelPosition.js":"CJnx","./checkboxes-aa.md":"gLmZ","./checkboxes-de.md":"3LYT","./checkboxes-es.md":"+3vQ","./checkboxes-fr.md":"3xDF","./checkboxes-ja.md":"7oX2","./checkboxes-pt.md":"7In6","./checkboxes-ru.md":"LIpD","./checkboxes-zh.md":"sstN","./checkboxes.md":"zpIs"};function t(e){var n=c(e);return o(n)}function c(e){var n=a[e];if(!(n+1)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n}t.keys=function(){return Object.keys(a)},t.resolve=c,e.exports=t,t.id="imL+"},kQbK:function(e,n){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Checkbox from \'@material-ui/core/Checkbox\';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \'flex\',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange(\'gilad\')} value="gilad" />}\n            label="Gilad Gray"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange(\'jason\')} value="jason" />}\n            label="Jason Killian"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange(\'antoine\')} value="antoine" />\n            }\n            label="Antoine Llorca"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl required error={error} component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange(\'gilad\')} value="gilad" />}\n            label="Gilad Gray"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange(\'jason\')} value="jason" />}\n            label="Jason Killian"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange(\'antoine\')} value="antoine" />\n            }\n            label="Antoine Llorca"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n'},knUk:function(e,n,o){var a={"./CheckboxLabels.js":"2x5S","./CheckboxLabels.tsx":"f5A7","./Checkboxes.js":"1ChV","./Checkboxes.tsx":"xLfP","./CheckboxesGroup.js":"kQbK","./CheckboxesGroup.tsx":"iDLy","./FormControlLabelPosition.js":"5Z+S"};function t(e){var n=c(e);return o(n)}function c(e){var n=a[e];if(!(n+1)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n}t.keys=function(){return Object.keys(a)},t.resolve=c,e.exports=t,t.id="knUk"},ldZT:function(e,n,o){"use strict";var a=o("z3IF"),t=o("Rbzu"),c=o("2Fjn"),r=o("mXGw"),l=o.n(r),i=o("PDtE"),s=o("WH4S"),d=o("qoly"),m=Object(d.a)(l.a.createElement("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),u=Object(d.a)(l.a.createElement("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),h=o("cYeA"),b=Object(d.a)(l.a.createElement("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),p=o("GbnF"),k=o("XpU0"),C=l.a.createElement(u,null),f=l.a.createElement(m,null),x=l.a.createElement(b,null),v=l.a.forwardRef(function(e,n){var o=e.checkedIcon,r=void 0===o?C:o,d=e.classes,m=e.color,u=void 0===m?"secondary":m,h=e.icon,b=void 0===h?f:h,k=e.indeterminate,v=void 0!==k&&k,g=e.indeterminateIcon,F=void 0===g?x:g,E=e.inputProps,L=Object(c.a)(e,["checkedIcon","classes","color","icon","indeterminate","indeterminateIcon","inputProps"]);return l.a.createElement(s.a,Object(a.default)({type:"checkbox",checkedIcon:v?F:r,classes:{root:Object(i.a)(d.root,d["color".concat(Object(p.a)(u))],v&&d.indeterminate),checked:d.checked,disabled:d.disabled},color:u,inputProps:Object(t.a)({"data-indeterminate":v},E),icon:v?F:b,ref:n},L))});n.a=Object(k.default)(function(e){return{root:{color:e.palette.text.secondary},checked:{},disabled:{},indeterminate:{},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(h.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(h.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}}}},{name:"MuiCheckbox"})(v)},qoly:function(e,n,o){"use strict";o.d(n,"a",function(){return l});var a=o("z3IF"),t=o("mXGw"),c=o.n(t),r=o("6dYU");function l(e,n){var o=c.a.memo(c.a.forwardRef(function(n,o){return c.a.createElement(r.a,Object(a.default)({},n,{ref:o}),e)}));return o.muiName=r.a.muiName,o}},sCFN:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/checkboxes",function(){var e=o("eB/T");return{page:e.default||e}}])},seQv:function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return i});var a=o("azxR"),t=o("Rbzu"),c=o("mXGw"),r=o.n(c),l=o("ldZT");function i(){var e=r.a.useState({checkedA:!0,checkedB:!0,checkedF:!0}),n=e[0],o=e[1],c=function(e){return function(c){o(Object(t.a)({},n,Object(a.a)({},e,c.target.checked)))}};return r.a.createElement("div",null,r.a.createElement(l.a,{checked:n.checkedA,onChange:c("checkedA"),value:"checkedA",inputProps:{"aria-label":"primary checkbox"}}),r.a.createElement(l.a,{checked:n.checkedB,onChange:c("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"secondary checkbox"}}),r.a.createElement(l.a,{value:"checkedC",inputProps:{"aria-label":"uncontrolled-checkbox"}}),r.a.createElement(l.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),r.a.createElement(l.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"disabled checked checkbox"}}),r.a.createElement(l.a,{checked:n.checkedF,onChange:c("checkedF"),value:"checkedF",indeterminate:!0,inputProps:{"aria-label":"indeterminate checkbox"}}),r.a.createElement(l.a,{defaultChecked:!0,color:"default",value:"checkedG",inputProps:{"aria-label":"checkbox with default color"}}))}},sstN:function(e,n){e.exports='---\ntitle: React Checkbox（复选框）组件\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Checkboxes（复选框）\n\n<p class="description">在一个集合内，用户可以通过复选框来选择一个或者多个选项。</p>\n\n[复选框](https://material.io/design/components/selection-controls.html#checkboxes) 用于打开或者关闭一个选项。\n\n如果列表中有多个选择项，则可以使用复选框替代开关控件来节省空间。 如果您只需要一个选择项，请避免使用复选框，而改用开关控件。\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\n通过 `FormControlLabel` 组件，`复选框` 也可与标签描述一起使用。\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## 使用 FormGroup（表单组）控制多个复选框\n\n`FormGroup` 会提供相对简单的 API 对选择控件进行分组。\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## 放置标签\n\n你可以更改标签的位置:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## 可及性\n\n所有表单控件都应该带有标签，而这包括了单选按钮，复选框和开关。 在大多数情况下，这是通过使用一个`<label>`元素（[FormControlLabel](/api/form-control-label/)）实现的。\n\n如果无法使用标签，则必须直接在输入组件中添加属性。 在这种情况下，您可以通过`inputProps` 属性，来附着一些附加的属性（例如 `arial-label`，`aria-labelledby`，`title`）。\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## 指导\n\n- [复选框 对比 单选按钮](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},xLfP:function(e,n){e.exports="import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function Checkboxes() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{\n          'aria-label': 'primary checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{\n          'aria-label': 'secondary checkbox',\n        }}\n      />\n      <Checkbox\n        value=\"checkedC\"\n        inputProps={{\n          'aria-label': 'uncontrolled-checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        value=\"checkedD\"\n        inputProps={{\n          'aria-label': 'disabled checkbox',\n        }}\n      />\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{\n          'aria-label': 'disabled checked checkbox',\n        }}\n      />\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{\n          'aria-label': 'indeterminate checkbox',\n        }}\n      />\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{\n          'aria-label': 'checkbox with default color',\n        }}\n      />\n    </div>\n  );\n}\n"},zpIs:function(e,n){e.exports='---\ntitle: Checkbox React component\ncomponents: Checkbox, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Checkboxes\n\n<p class="description">Checkboxes allow the user to select one or more items from a set.</p>\n\n[Checkboxes](https://material.io/design/components/selection-controls.html#checkboxes) can be used to turn an option on or off.\n\nIf you have multiple options appearing in a list,\nyou can preserve space by using checkboxes instead of on/off switches.\nIf you have a single option, avoid using a checkbox and use an on/off switch instead.\n\n{{"demo": "pages/components/checkboxes/Checkboxes.js"}}\n\n`Checkbox` can also be used with a label description thanks to the `FormControlLabel` component.\n\n{{"demo": "pages/components/checkboxes/CheckboxLabels.js"}}\n\n## Checkboxes with FormGroup\n\n`FormGroup` is a helpful wrapper used to group selection controls components that provides an easier API.\n\n{{"demo": "pages/components/checkboxes/CheckboxesGroup.js"}}\n\n## Label placement\n\nYou can change the placement of the label:\n\n{{"demo": "pages/components/checkboxes/FormControlLabelPosition.js"}}\n\n## Accessibility\n\nAll form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the `<label>` element ([FormControlLabel](/api/form-control-label/)).\n\nWhen a label can\'t be used, it\'s necessary to add an attribute directly to the input component.\nIn this case, you can apply the additional attribute (e.g. `aria-label`, `aria-labelledby`, `title`) via the `inputProps` property.\n\n```jsx\n<Checkbox\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Checkbox A\' }}\n/>\n```\n\n## Guidance\n\n- [Checkboxes vs. Radio Buttons](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)\n'}},[["sCFN","5d41","9da1"]]]);