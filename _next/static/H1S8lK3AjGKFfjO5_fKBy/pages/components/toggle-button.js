(window.webpackJsonp=window.webpackJsonp||[]).push([["36a9"],{"/LkE":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var o=t("mXGw"),a=t.n(o),r=t("NbUR"),l=t("pa6t"),i=t("rXVv"),s=t("hYlH"),c=t("pQ8Y"),g=t("eou5"),u=t("THuk"),m=a.a.createElement(g.a,{key:1,value:"left"},a.a.createElement(r.a,null)),p=a.a.createElement(g.a,{key:2,value:"center"},a.a.createElement(l.a,null)),d=a.a.createElement(g.a,{key:3,value:"right"},a.a.createElement(i.a,null)),f=a.a.createElement(g.a,{key:4,value:"justify",disabled:!0},a.a.createElement(s.a,null));function h(){var e=a.a.useState("left"),n=e[0],t=e[1],o=function(e,n){t(n)},r=[m,p,d,f];return a.a.createElement(c.a,{container:!0,spacing:2,direction:"column",alignItems:"center"},a.a.createElement(c.a,{item:!0},a.a.createElement(u.a,{size:"small",value:n,exclusive:!0,onChange:o},r)),a.a.createElement(c.a,{item:!0},a.a.createElement(u.a,{size:"medium",value:n,exclusive:!0,onChange:o},r)),a.a.createElement(c.a,{item:!0},a.a.createElement(u.a,{size:"large",value:n,exclusive:!0,onChange:o},r)))}},"28Ad":function(e,n){e.exports='---\ntitle: Toggle Button React component\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Toggle Buttons\n\n<p class="description">Toggle buttons can be used to group related options.</p>\n\nTo emphasize groups of related [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button), a group should share a common container.\n\nThe `ToggleButtonGroup` will control the selected of its child buttons when given its own `value` prop.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Размеры\n\nFancy larger or smaller buttons? Use the `size` property.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},"39hq":function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"}),"FormatUnderlined")},"8GMO":function(e,n){e.exports='---\ntitle: Toggle Button React component\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Toggle Buttons\n\n<p class="description">Toggle buttons can be used to group related options.</p>\n\nTo emphasize groups of related [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button), a group should share a common container.\n\nThe `ToggleButtonGroup` will control the selected of its child buttons when given its own `value` prop.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Tailles\n\nFancy larger or smaller buttons? Use the `size` property.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},J0AO:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M7 10l5 5 5-5z"}),"ArrowDropDown")},NbUR:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"}),"FormatAlignLeft")},OcV2:function(e,n,t){var o={"./ToggleButtonSizes.js":"tYdh","./ToggleButtons.js":"givr"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="OcV2"},PCDN:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return I});var o=t("mXGw"),a=t.n(o),r=t("yZEQ"),l=t("NbUR"),i=t("pa6t"),s=t("rXVv"),c=t("hYlH"),g=t("xi/j"),u=t("YmQZ"),m=t("39hq"),p=t("tu/a"),d=t("J0AO"),f=t("Oy88"),h=t("pQ8Y"),v=t("eou5"),T=t("THuk"),b=Object(r.a)(function(e){return{toggleContainer:{margin:e.spacing(2,0)}}}),w=a.a.createElement(v.a,{value:"left"},a.a.createElement(l.a,null)),B=a.a.createElement(v.a,{value:"center"},a.a.createElement(i.a,null)),x=a.a.createElement(v.a,{value:"right"},a.a.createElement(s.a,null)),y=a.a.createElement(v.a,{value:"justify",disabled:!0},a.a.createElement(c.a,null)),z=a.a.createElement(f.a,{gutterBottom:!0},"Exclusive Selection"),E=a.a.createElement(f.a,null,"Text justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other."),G=a.a.createElement(v.a,{value:"bold"},a.a.createElement(g.a,null)),F=a.a.createElement(v.a,{value:"italic"},a.a.createElement(u.a,null)),j=a.a.createElement(v.a,{value:"underlined"},a.a.createElement(m.a,null)),A=a.a.createElement(v.a,{disabled:!0,value:"color"},a.a.createElement(p.a,null),a.a.createElement(d.a,null)),C=a.a.createElement(f.a,{gutterBottom:!0},"Multiple Selection"),S=a.a.createElement(f.a,null,"Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be selected.");function I(){var e=a.a.useState("left"),n=e[0],t=e[1],o=a.a.useState(function(){return["bold"]}),r=o[0],l=o[1],i=b();return a.a.createElement(h.a,{container:!0,spacing:2},a.a.createElement(h.a,{item:!0,sm:12,md:6},a.a.createElement("div",{className:i.toggleContainer},a.a.createElement(T.a,{value:n,exclusive:!0,onChange:function(e,n){t(n)}},w,B,x,y)),z,E),a.a.createElement(h.a,{item:!0,sm:12,md:6},a.a.createElement("div",{className:i.toggleContainer},a.a.createElement(T.a,{value:r,onChange:function(e,n){l(n)}},G,F,j,A)),C,S))}},QJXJ:function(e,n){e.exports='---\ntitle: Componente React para Botões de Alternância\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Botões de alternância\n\n<p class="description">Os botões de alternância podem ser usados para agrupar opções relacionadas.</p>\n\nPara enfatizar grupos de [botões de alternância](https://material.io/design/components/buttons.html#toggle-button) relacionados, o grupo deve ter um container em comum.\n\nO `ToggleButtonGroup` controlará o selecionado de seus botões filhos quando receber sua propriedade `value`.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Tamanhos\n\nGosta de botões maiores ou menores? Use a propriedade `size`.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},YmQZ:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"}),"FormatItalic")},fnJA:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toggle-button",function(){var e=t("kHxQ");return{page:e.default||e}}])},gZYQ:function(e,n){e.exports='---\ntitle: crwdns92410:0crwdne92410:0\ncomponents: crwdns92412:0crwdne92412:0\n---\n\n# crwdns92414:0crwdne92414:0\n\n<p class="description">crwdns92416:0crwdne92416:0</p>\n\ncrwdns92418:0crwdne92418:0\n\ncrwdns92420:0crwdne92420:0\n\ncrwdns92422:0crwdne92422:0\n\n## crwdns92424:0crwdne92424:0\n\ncrwdns92426:0crwdne92426:0 crwdns92428:0crwdne92428:0\n\ncrwdns92430:0crwdne92430:0'},givr:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst useStyles = makeStyles(theme => ({\n  toggleContainer: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nexport default function ToggleButtons() {\n  const [alignment, setAlignment] = React.useState('left');\n  const [formats, setFormats] = React.useState(() => ['bold']);\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item sm={12} md={6}>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\n            <ToggleButton value=\"left\">\n              <FormatAlignLeftIcon />\n            </ToggleButton>\n            <ToggleButton value=\"center\">\n              <FormatAlignCenterIcon />\n            </ToggleButton>\n            <ToggleButton value=\"right\">\n              <FormatAlignRightIcon />\n            </ToggleButton>\n            <ToggleButton value=\"justify\" disabled>\n              <FormatAlignJustifyIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <Typography gutterBottom>Exclusive Selection</Typography>\n        <Typography>\n          Text justification toggle buttons present options for left, right, center, full, and\n          justified text with only one item available for selection at a time. Selecting one option\n          deselects any other.\n        </Typography>\n      </Grid>\n      <Grid item sm={12} md={6}>\n        <div className={classes.toggleContainer}>\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\n            <ToggleButton value=\"bold\">\n              <FormatBoldIcon />\n            </ToggleButton>\n            <ToggleButton value=\"italic\">\n              <FormatItalicIcon />\n            </ToggleButton>\n            <ToggleButton value=\"underlined\">\n              <FormatUnderlinedIcon />\n            </ToggleButton>\n            <ToggleButton disabled value=\"color\">\n              <FormatColorFillIcon />\n              <ArrowDropDownIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <Typography gutterBottom>Multiple Selection</Typography>\n        <Typography>\n          Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be\n          selected.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n"},hYlH:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z"}),"FormatAlignJustify")},kHxQ:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var o=t("mXGw"),a=t.n(o),r=t("e+1t"),l=t("qvzi"),i=t("OcV2"),s=a.a.createElement(r.a,{req:l,reqSource:i,reqPrefix:"pages/components/toggle-button"});function c(){return s}},lHrC:function(e,n){e.exports='---\ntitle: Toggle Button React component\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Toggle Buttons\n\n<p class="description">Toggle buttons can be used to group related options.</p>\n\nTo emphasize groups of related [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button), a group should share a common container.\n\nThe `ToggleButtonGroup` will control the selected of its child buttons when given its own `value` prop.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Tamaños\n\nFancy larger or smaller buttons? Use the `size` property.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},mKiA:function(e,n){e.exports='---\ntitle: Schalter React Komponente\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Schalter (Toggle Buttons)\n\n<p class="description">Schalter können verwendet werden, um verwandte Optionen zu gruppieren.</p>\n\nUm Gruppen von verwandten [Schaltern](https://material.io/design/components/buttons.html#toggle-button), hervorzuheben, sollte eine Gruppe einen gemeinsamen Container verwenden.\n\nDie `ToggleButtonGroup` wird die Auswahl von den untergeordneten Schaltern steuern, wenn es eigene `value` Eigenschaft gesetzt hat.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Größen\n\nFancy larger or smaller buttons? Use the `size` property.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},mWc7:function(e,n){e.exports='---\ntitle: 切换按钮React组件\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# 切换按钮\n\n<p class="description">Toggle Buttons 可用于对相关选项进行分组。</p>\n\n为了强调组合之间的关联，每一组 [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button) 应该共享一个容器。\n\n当给 `ToggleButtonGroup` 自身的 `value` 属性赋值时，它可以控制哪个子按钮被选中。\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## 尺寸\n\n想要更大或更小的按钮？ 你可以使用 `size` 属性。\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}'},pQ8Y:function(e,n,t){"use strict";var o=t("2Fjn"),a=t("Rbzu"),r=t("yLsn"),l=t.n(r),i=t("z3IF"),s=t("mXGw"),c=t.n(s),g=t("PDtE"),u=t("XpU0"),m=[0,1,2,3,4,5,6,7,8,9,10],p=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function d(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=l()(e);return"".concat(t/n).concat(String(e).replace(String(t),"")||"px")}var f=c.a.forwardRef(function(e,n){var t=e.alignContent,a=void 0===t?"stretch":t,r=e.alignItems,l=void 0===r?"stretch":r,s=e.classes,u=e.className,m=e.component,p=void 0===m?"div":m,d=e.container,f=void 0!==d&&d,h=e.direction,v=void 0===h?"row":h,T=e.item,b=void 0!==T&&T,w=e.justify,B=void 0===w?"flex-start":w,x=e.lg,y=void 0!==x&&x,z=e.md,E=void 0!==z&&z,G=e.sm,F=void 0!==G&&G,j=e.spacing,A=void 0===j?0:j,C=e.wrap,S=void 0===C?"wrap":C,I=e.xl,H=void 0!==I&&I,O=e.xs,M=void 0!==O&&O,k=e.zeroMinWidth,R=void 0!==k&&k,U=Object(o.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),X=Object(g.a)(s.root,u,f&&[s.container,0!==A&&s["spacing-xs-".concat(String(A))]],b&&s.item,R&&s.zeroMinWidth,"row"!==v&&s["direction-xs-".concat(String(v))],"wrap"!==S&&s["wrap-xs-".concat(String(S))],"stretch"!==l&&s["align-items-xs-".concat(String(l))],"stretch"!==a&&s["align-content-xs-".concat(String(a))],"flex-start"!==B&&s["justify-xs-".concat(String(B))],!1!==M&&s["grid-xs-".concat(String(M))],!1!==F&&s["grid-sm-".concat(String(F))],!1!==E&&s["grid-md-".concat(String(E))],!1!==y&&s["grid-lg-".concat(String(y))],!1!==H&&s["grid-xl-".concat(String(H))]);return c.a.createElement(p,Object(i.default)({className:X,ref:n},U))});var h=Object(u.default)(function(e){return Object(a.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,n){var t={};return m.forEach(function(o){var a=e.spacing(o);0!==a&&(t["spacing-".concat(n,"-").concat(o)]={margin:"-".concat(d(a,2)),width:"calc(100% + ".concat(d(a),")"),"& > $item":{padding:d(a,2)}})}),t}(e,"xs"),e.breakpoints.keys.reduce(function(n,t){return function(e,n,t){var o={};p.forEach(function(e){var n="grid-".concat(t,"-").concat(e);if(!0!==e)if("auto"!==e){var a="".concat(Math.round(e/12*1e8)/1e6,"%");o[n]={flexBasis:a,flexGrow:0,maxWidth:a}}else o[n]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else o[n]={flexBasis:0,flexGrow:1,maxWidth:"100%"}}),"xs"===t?Object(i.default)(e,o):e[n.breakpoints.up(t)]=o}(n,e,t),n},{}))},{name:"MuiGrid"})(f);n.a=h},pa6t:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"}),"FormatAlignCenter")},qvzi:function(e,n,t){var o={"./ToggleButtonSizes.js":"/LkE","./ToggleButtons.js":"PCDN","./toggle-button-aa.md":"gZYQ","./toggle-button-de.md":"mKiA","./toggle-button-es.md":"lHrC","./toggle-button-fr.md":"8GMO","./toggle-button-ja.md":"vbVh","./toggle-button-pt.md":"QJXJ","./toggle-button-ru.md":"28Ad","./toggle-button-zh.md":"mWc7","./toggle-button.md":"yIYq"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="qvzi"},rXVv:function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"}),"FormatAlignRight")},tYdh:function(e,n){e.exports="import React from 'react';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport Grid from '@material-ui/core/Grid';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nexport default function ToggleButtonSizes() {\n  const [alignment, setAlignment] = React.useState('left');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const children = [\n    <ToggleButton key={1} value=\"left\">\n      <FormatAlignLeftIcon />\n    </ToggleButton>,\n    <ToggleButton key={2} value=\"center\">\n      <FormatAlignCenterIcon />\n    </ToggleButton>,\n    <ToggleButton key={3} value=\"right\">\n      <FormatAlignRightIcon />\n    </ToggleButton>,\n    <ToggleButton key={4} value=\"justify\" disabled>\n      <FormatAlignJustifyIcon />\n    </ToggleButton>,\n  ];\n\n  return (\n    <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\n      <Grid item>\n        <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n      <Grid item>\n        <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n      <Grid item>\n        <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleChange}>\n          {children}\n        </ToggleButtonGroup>\n      </Grid>\n    </Grid>\n  );\n}\n"},"tu/a":function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement(a.a.Fragment,null,a.a.createElement("path",{d:"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z"}),a.a.createElement("path",{fillOpacity:".36",d:"M0 20h24v4H0z"})),"FormatColorFill")},vbVh:function(e,n){e.exports='---\ntitle: Toggle Button React component\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# トグルボタン\n\n<p class="description">トグルボタンを使用して、関連するオプションをグループ化できます。</p>\n\n関連する [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button)のグループを強調するには、次の操作を行います。 グループは共通のコンテナーを共用する必要があります。\n\n`ToggleButtonGroup`は、次の場合に子ボタンの選択を制御します。 独自の`value`propが与えられます。\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## サイズ\n\n大きなボタンと小さなボタンがありますか? `size`プロパティを使用します。\n\n{{"demo": "pages/components/textarea-autosize/MaxHeightTextarea.js"}}'},"xi/j":function(e,n,t){"use strict";var o=t("mXGw"),a=t.n(o),r=t("0Zz2");n.a=Object(r.a)(a.a.createElement("path",{d:"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"}),"FormatBold")},yIYq:function(e,n){e.exports='---\ntitle: Toggle Button React component\ncomponents: ToggleButton, ToggleButtonGroup\n---\n\n# Toggle Buttons\n\n<p class="description">Toggle buttons can be used to group related options.</p>\n\nTo emphasize groups of related [Toggle buttons](https://material.io/design/components/buttons.html#toggle-button),\na group should share a common container.\n\nThe `ToggleButtonGroup` will control the selected of its child buttons when\ngiven its own `value` prop.\n\n{{"demo": "pages/components/toggle-button/ToggleButtons.js"}}\n\n## Sizes\n\nFancy larger or smaller buttons? Use the `size` property.\n\n{{"demo": "pages/components/toggle-button/ToggleButtonSizes.js"}}\n'}},[["fnJA","5d41","9da1"]]]);