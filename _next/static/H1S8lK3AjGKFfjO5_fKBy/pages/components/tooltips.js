(window.webpackJsonp=window.webpackJsonp||[]).push([["d15c"],{"+Sij":function(e,t){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStylesArrow = makeStyles(theme => ({\n  tooltip: {\n    position: 'relative',\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.grey[700]),\n}));\n\nfunction ArrowTooltip(props) {\n  const { arrow, ...classes } = useStylesArrow();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nArrowTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst useStylesBootstrap = makeStyles(theme => ({\n  arrow: {\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n  popper: arrowGenerator(theme.palette.common.black),\n  tooltip: {\n    position: 'relative',\n    backgroundColor: theme.palette.common.black,\n  },\n  tooltipPlacementLeft: {\n    margin: '0 8px',\n  },\n  tooltipPlacementRight: {\n    margin: '0 8px',\n  },\n  tooltipPlacementTop: {\n    margin: '8px 0',\n  },\n  tooltipPlacementBottom: {\n    margin: '8px 0',\n  },\n}));\n\nfunction BootstrapTooltip(props) {\n  const { arrow, ...classes } = useStylesBootstrap();\n  const [arrowRef, setArrowRef] = React.useState(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nBootstrapTooltip.propTypes = {\n  title: PropTypes.node,\n};\n\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport default function CustomizedTooltips() {\n  return (\n    <div>\n      <LightTooltip title=\"Add\">\n        <Button>Light</Button>\n      </LightTooltip>\n      <ArrowTooltip title=\"Add\">\n        <Button>Arrow</Button>\n      </ArrowTooltip>\n      <BootstrapTooltip title=\"Add\">\n        <Button>Bootstrap</Button>\n      </BootstrapTooltip>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n            {\"It's very engaging. Right?\"}\n          </React.Fragment>\n        }\n      >\n        <Button>HTML</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n"},"1XOP":function(e,t){e.exports='---\ntitle: Tooltip React-Komponente\ncomponents: Tooltip\n---\n\n# Tooltip\n\n<p class="description">Tooltips zeigen informativen Text an, wenn Benutzer auf ein Element zeigen, darauf fokussieren oder tippen.</p>\n\nWenn aktiviert, zeigen [Tooltips](https://material.io/design/components/tooltips.html) eine Beschriftung an, die ein Element kennzeichnet, beispielsweise eine Beschreibung seiner Funktion.\n\n## Einfache Tooltips\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Positionierte Tooltips\n\nThe `Tooltip` has 12 **placements** choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Benutzerdefinierte Tooltips\n\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Benutzerdefiniertes untergeordnetes Element\n\nThe tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its properties to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // Wir geben die Eigenschaften auf das zugrunde liegende DOM-Element weiter.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Löschen">\n  <MyComponent>\n</Tooltip>\n```\n\nSie können ein ähnliches Konzept in der [Verpackungskomponenten](/guides/composition/#wrapping-components) Dokumentation finden.\n\n## Auslöser\n\nSie können die Ereignistypen definieren, bei denen ein Tooltip angezeigt wird.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Kontrollierte Tooltips\n\nSie können die Eigenschaften `onOpen`, `onClose` und `open`, verwenden, um das Verhalten des Tooltips zu steuern.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Variable Breite\n\nDer `Tooltip` umhüllt standardmäßig lange Texte, um diese lesbar zu machen.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Interaktiv\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Deaktivierte Elemente\n\nStandardmäßig lösen deaktivierte Elemente wie `<button>` keine Benutzerinteraktionen aus, sodass ein `Tooltip` bei normalen Ereignissen wie Hover nicht aktiviert wird. Fügen Sie ein einfaches Wrapper-Element wie eine `span` hinzu, um deaktivierte Elemente aufzunehmen.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Übergänge\n\nVerwenden Sie einen anderen Übergang.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Ein-und ausblenden\n\nDer Tooltip wird normalerweise sofort angezeigt, wenn sich die Maus des Benutzers über dem Element befindet und sofort ausgeblendet wird, wenn die Maus des Benutzers verlassen wird. Eine Verzögerung beim Anzeigen oder Ausblenden des Tooltips kann über die Eigenschaften `enterDelay` und `leaveDelay` hinzugefügt werden, wie in der Demo zum kontrollierten Tooltip oben gezeigt.\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},"1wML":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=n("LpUc"),s=n("fnHy"),p=i.a.createElement(r.a,{title:"Add"},i.a.createElement(a.a,null,"Grow")),c=i.a.createElement(a.a,null,"Fade"),m=i.a.createElement(r.a,{TransitionComponent:s.a,title:"Add"},i.a.createElement(a.a,null,"Zoom"));function d(){return i.a.createElement("div",null,p,i.a.createElement(r.a,{TransitionComponent:l.a,TransitionProps:{timeout:600},title:"Add"},c),m)}},"38YC":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("WLtd"),l=n("O8uh"),s=n("zRBL"),p=Object(a.a)(function(e){return Object(r.a)({button:{margin:e.spacing(1)}})});function c(){var e=p();return i.a.createElement("div",null,i.a.createElement(s.a,{title:"Add",interactive:!0},i.a.createElement(l.a,{className:e.button},"Interactive")),i.a.createElement(s.a,{title:"Add"},i.a.createElement(l.a,{className:e.button},"Non Interactive")))}},"7hAu":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(a.a,null,"Controlled");function s(){var e=i.a.useState(!1),t=e[0],n=e[1];return i.a.createElement(r.a,{onClose:function(){n(!1)},onOpen:function(){n(!0)},open:t,title:"Add"},l)}},"7lrA":function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  customWidth: {\n    maxWidth: 500,\n  },\n  noMaxWidth: {\n    maxWidth: 'none',\n  },\n}));\n\nconst longText = `\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n`;\n\nexport default function VariableWidth() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title={longText}>\n        <Button className={classes.button}>Default Width [300px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.customWidth }}>\n        <Button className={classes.button}>Custom Width [500px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.noMaxWidth }}>\n        <Button className={classes.button}>No wrapping</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},"84Nl":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("O8uh"),l=n("zRBL"),s=Object(a.a)(function(e){return{button:{margin:e.spacing(1)},customWidth:{maxWidth:500},noMaxWidth:{maxWidth:"none"}}}),p="\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n";function c(){var e=s();return i.a.createElement("div",null,i.a.createElement(l.a,{title:p},i.a.createElement(r.a,{className:e.button},"Default Width [300px]")),i.a.createElement(l.a,{title:p,classes:{tooltip:e.customWidth}},i.a.createElement(r.a,{className:e.button},"Custom Width [500px]")),i.a.createElement(l.a,{title:p,classes:{tooltip:e.noMaxWidth}},i.a.createElement(r.a,{className:e.button},"No wrapping")))}},"8Xt6":function(e,t,n){var o={"./ControlledTooltips.js":"mT1t","./ControlledTooltips.tsx":"7hAu","./CustomizedTooltips.js":"H/c0","./CustomizedTooltips.tsx":"ZmDe","./DelayTooltips.js":"JSlW","./DelayTooltips.tsx":"MsYL","./DisabledTooltips.js":"ALT9","./DisabledTooltips.tsx":"gOq8","./InteractiveTooltips.js":"Lxax","./InteractiveTooltips.tsx":"38YC","./PositionedTooltips.js":"dLno","./PositionedTooltips.tsx":"DloY","./SimpleTooltips.js":"t8dp","./SimpleTooltips.tsx":"BLXZ","./TransitionsTooltips.js":"1wML","./TransitionsTooltips.tsx":"tEFB","./TriggersTooltips.js":"x6SS","./TriggersTooltips.tsx":"nb2l","./VariableWidth.js":"84Nl","./VariableWidth.tsx":"Bhor","./tooltips-aa.md":"ptF0","./tooltips-de.md":"1XOP","./tooltips-es.md":"ab2m","./tooltips-fr.md":"suDe","./tooltips-ja.md":"bNou","./tooltips-pt.md":"pI9+","./tooltips-ru.md":"su3M","./tooltips-zh.md":"v529","./tooltips.md":"w+ES"};function i(e){var t=a(e);return n(t)}function a(e){var t=o[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id="8Xt6"},"8ZdI":function(e,t){e.exports="import React from 'react';\nimport { withStyles, Theme, makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nfunction arrowGenerator(color: string) {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${color} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${color} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${color} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${color}`,\n      },\n    },\n  };\n}\n\nconst LightTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nconst useStylesArrow = makeStyles((theme: Theme) =>\n  createStyles({\n    tooltip: {\n      position: 'relative',\n    },\n    arrow: {\n      position: 'absolute',\n      fontSize: 6,\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n      },\n    },\n    popper: arrowGenerator(theme.palette.grey[700]),\n  }),\n);\n\nfunction ArrowTooltip(props: TooltipProps) {\n  const { arrow, ...classes } = useStylesArrow();\n  const [arrowRef, setArrowRef] = React.useState<HTMLSpanElement | null>(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nconst useStylesBootstrap = makeStyles((theme: Theme) =>\n  createStyles({\n    arrow: {\n      position: 'absolute',\n      fontSize: 6,\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: 0,\n        height: 0,\n        borderStyle: 'solid',\n      },\n    },\n    popper: arrowGenerator(theme.palette.common.black),\n    tooltip: {\n      position: 'relative',\n      backgroundColor: theme.palette.common.black,\n    },\n    tooltipPlacementLeft: {\n      margin: '0 8px',\n    },\n    tooltipPlacementRight: {\n      margin: '0 8px',\n    },\n    tooltipPlacementTop: {\n      margin: '8px 0',\n    },\n    tooltipPlacementBottom: {\n      margin: '8px 0',\n    },\n  }),\n);\n\nfunction BootstrapTooltip(props: TooltipProps) {\n  const { arrow, ...classes } = useStylesBootstrap();\n  const [arrowRef, setArrowRef] = React.useState<HTMLSpanElement | null>(null);\n\n  return (\n    <Tooltip\n      classes={classes}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            arrow: {\n              enabled: Boolean(arrowRef),\n              element: arrowRef,\n            },\n          },\n        },\n      }}\n      {...props}\n      title={\n        <React.Fragment>\n          {props.title}\n          <span className={arrow} ref={setArrowRef} />\n        </React.Fragment>\n      }\n    />\n  );\n}\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport default function CustomizedTooltips() {\n  return (\n    <div>\n      <LightTooltip title=\"Add\">\n        <Button>Light</Button>\n      </LightTooltip>\n      <ArrowTooltip title=\"Add\">\n        <Button>Arrow</Button>\n      </ArrowTooltip>\n      <BootstrapTooltip title=\"Add\">\n        <Button>Bootstrap</Button>\n      </BootstrapTooltip>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Tooltip with HTML</Typography>\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n            {\"It's very engaging. Right?\"}\n          </React.Fragment>\n        }\n      >\n        <Button>HTML</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n"},"8iES":function(e,t){e.exports="import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nexport default function TriggersTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Tooltip disableFocusListener title=\"Add\">\n            <Button>Hover or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableHoverListener title=\"Add\">\n            <Button>Focus or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableFocusListener disableTouchListener title=\"Add\">\n            <Button>Hover</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <div>\n              <Tooltip\n                PopperProps={{\n                  disablePortal: true,\n                }}\n                onClose={handleTooltipClose}\n                open={open}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                title=\"Add\"\n              >\n                <Button onClick={handleTooltipOpen}>Click</Button>\n              </Tooltip>\n            </div>\n          </ClickAwayListener>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},ALT9:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(r.a,{title:"You don't have permission to do this"},i.a.createElement("span",null,i.a.createElement(a.a,{disabled:!0},"A Disabled Button")));function s(){return l}},AMAy:function(e,t,n){"use strict";function o(e){return e}n.d(t,"a",function(){return o})},BLXZ:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return g});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("WLtd"),l=n("CgSL"),s=n("C+rX"),p=n("Ozru"),c=n("l/nz"),m=n("zRBL"),d=Object(a.a)(function(e){return Object(r.a)({fab:{margin:e.spacing(2)},absolute:{position:"absolute",bottom:e.spacing(2),right:e.spacing(3)}})}),u=i.a.createElement(m.a,{title:"Delete"},i.a.createElement(c.a,{"aria-label":"delete"},i.a.createElement(p.a,null))),h=i.a.createElement(l.a,null),f=i.a.createElement(l.a,null);function g(){var e=d();return i.a.createElement("div",null,u,i.a.createElement(m.a,{title:"Add","aria-label":"add"},i.a.createElement(s.a,{color:"primary",className:e.fab},h)),i.a.createElement(m.a,{title:"Add","aria-label":"add"},i.a.createElement(s.a,{color:"secondary",className:e.absolute},f)))}},Bhor:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return m});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("WLtd"),l=n("O8uh"),s=n("zRBL"),p=Object(a.a)(function(e){return Object(r.a)({button:{margin:e.spacing(1)},customWidth:{maxWidth:500},noMaxWidth:{maxWidth:"none"}})}),c="\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n";function m(){var e=p();return i.a.createElement("div",null,i.a.createElement(s.a,{title:c},i.a.createElement(l.a,{className:e.button},"Default Width [300px]")),i.a.createElement(s.a,{title:c,classes:{tooltip:e.customWidth}},i.a.createElement(l.a,{className:e.button},"Custom Width [500px]")),i.a.createElement(s.a,{title:c,classes:{tooltip:e.noMaxWidth}},i.a.createElement(l.a,{className:e.button},"No wrapping")))}},"C+rX":function(e,t,n){"use strict";var o=n("z3IF"),i=n("2Fjn"),a=n("Rbzu"),r=n("mXGw"),l=n.n(r),s=n("PDtE"),p=n("XpU0"),c=n("7QLS"),m=n("GbnF"),d=l.a.forwardRef(function(e,t){var n=e.children,a=e.classes,r=e.className,p=e.color,d=void 0===p?"default":p,u=e.component,h=void 0===u?"button":u,f=e.disabled,g=void 0!==f&&f,T=e.disableFocusRipple,b=void 0!==T&&T,w=e.focusVisibleClassName,v=e.size,y=void 0===v?"large":v,x=e.variant,E=void 0===x?"round":x,B=Object(i.a)(e,["children","classes","className","color","component","disabled","disableFocusRipple","focusVisibleClassName","size","variant"]);return l.a.createElement(c.a,Object(o.default)({className:Object(s.a)(a.root,r,"round"!==E&&a.extended,"large"!==y&&a["size".concat(Object(m.a)(y))],g&&a.disabled,{primary:a.primary,secondary:a.secondary,inherit:a.colorInherit}[d]),component:h,disabled:g,focusRipple:!b,focusVisibleClassName:Object(s.a)(a.focusVisible,w),ref:t},B),l.a.createElement("span",{className:a.label},n))});t.a=Object(p.default)(function(e){return{root:Object(a.a)({},e.typography.button,{boxSizing:"border-box",minHeight:36,transition:e.transitions.create(["background-color","box-shadow","border"],{duration:e.transitions.duration.short}),borderRadius:"50%",padding:0,minWidth:0,width:56,height:56,boxShadow:e.shadows[6],"&:active":{boxShadow:e.shadows[12]},color:e.palette.getContrastText(e.palette.grey[300]),backgroundColor:e.palette.grey[300],"&$focusVisible":{boxShadow:e.shadows[6]},"&:hover":{backgroundColor:e.palette.grey.A100,"@media (hover: none)":{backgroundColor:e.palette.grey[300]},"&$disabled":{backgroundColor:e.palette.action.disabledBackground},textDecoration:"none"},"&$disabled":{color:e.palette.action.disabled,boxShadow:e.shadows[0],backgroundColor:e.palette.action.disabledBackground}}),label:{width:"100%",display:"inherit",alignItems:"inherit",justifyContent:"inherit"},primary:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,"&:hover":{backgroundColor:e.palette.primary.dark,"@media (hover: none)":{backgroundColor:e.palette.primary.main}}},secondary:{color:e.palette.secondary.contrastText,backgroundColor:e.palette.secondary.main,"&:hover":{backgroundColor:e.palette.secondary.dark,"@media (hover: none)":{backgroundColor:e.palette.secondary.main}}},extended:{borderRadius:24,padding:"0 16px",width:"auto",minHeight:"auto",minWidth:48,height:48,"&$sizeSmall":{width:"auto",padding:"0 8px",borderRadius:17,minWidth:34,height:34},"&$sizeMedium":{width:"auto",padding:"0 16px",borderRadius:20,minWidth:40,height:40}},focusVisible:{},disabled:{},colorInherit:{color:"inherit"},sizeSmall:{width:40,height:40},sizeMedium:{width:48,height:48}}},{name:"MuiFab"})(d)},CgSL:function(e,t,n){"use strict";var o=n("mXGw"),i=n.n(o),a=n("0Zz2");t.a=Object(a.a)(i.a.createElement("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add")},ClyL:function(e,t){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport Grid from \'@material-ui/core/Grid\';\nimport Button from \'@material-ui/core/Button\';\nimport Tooltip from \'@material-ui/core/Tooltip\';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function PositionedTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify="center">\n        <Grid item>\n          <Tooltip title="Add" placement="top-start">\n            <Button>top-start</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="top">\n            <Button>top</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="top-end">\n            <Button>top-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container justify="center">\n        <Grid item xs={6}>\n          <Tooltip title="Add" placement="left-start">\n            <Button>left-start</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title="Add" placement="left">\n            <Button>left</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title="Add" placement="left-end">\n            <Button>left-end</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item container xs={6} alignItems="flex-end" direction="column">\n          <Grid item>\n            <Tooltip title="Add" placement="right-start">\n              <Button>right-start</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title="Add" placement="right">\n              <Button>right</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title="Add" placement="right-end">\n              <Button>right-end</Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify="center">\n        <Grid item>\n          <Tooltip title="Add" placement="bottom-start">\n            <Button>bottom-start</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="bottom">\n            <Button>bottom</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="bottom-end">\n            <Button>bottom-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n'},DloY:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return u});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("pQ8Y"),l=n("O8uh"),s=n("zRBL"),p=Object(a.a)({root:{width:500}}),c=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"top-start"},i.a.createElement(l.a,null,"top-start")),i.a.createElement(s.a,{title:"Add",placement:"top"},i.a.createElement(l.a,null,"top")),i.a.createElement(s.a,{title:"Add",placement:"top-end"},i.a.createElement(l.a,null,"top-end")))),m=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0,xs:6},i.a.createElement(s.a,{title:"Add",placement:"left-start"},i.a.createElement(l.a,null,"left-start")),i.a.createElement("br",null),i.a.createElement(s.a,{title:"Add",placement:"left"},i.a.createElement(l.a,null,"left")),i.a.createElement("br",null),i.a.createElement(s.a,{title:"Add",placement:"left-end"},i.a.createElement(l.a,null,"left-end"))),i.a.createElement(r.a,{item:!0,container:!0,xs:6,alignItems:"flex-end",direction:"column"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right-start"},i.a.createElement(l.a,null,"right-start"))),i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right"},i.a.createElement(l.a,null,"right"))),i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right-end"},i.a.createElement(l.a,null,"right-end"))))),d=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"bottom-start"},i.a.createElement(l.a,null,"bottom-start")),i.a.createElement(s.a,{title:"Add",placement:"bottom"},i.a.createElement(l.a,null,"bottom")),i.a.createElement(s.a,{title:"Add",placement:"bottom-end"},i.a.createElement(l.a,null,"bottom-end"))));function u(){var e=p();return i.a.createElement("div",{className:e.root},c,m,d)}},EkEB:function(e,t,n){var o={"./ControlledTooltips.js":"Gpjp","./ControlledTooltips.tsx":"IidP","./CustomizedTooltips.js":"+Sij","./CustomizedTooltips.tsx":"8ZdI","./DelayTooltips.js":"c8aK","./DelayTooltips.tsx":"Oapb","./DisabledTooltips.js":"kQbm","./DisabledTooltips.tsx":"zIHi","./InteractiveTooltips.js":"YvnE","./InteractiveTooltips.tsx":"RUF9","./PositionedTooltips.js":"IH4K","./PositionedTooltips.tsx":"ClyL","./SimpleTooltips.js":"KLit","./SimpleTooltips.tsx":"aQGT","./TransitionsTooltips.js":"S/bb","./TransitionsTooltips.tsx":"b/kY","./TriggersTooltips.js":"8iES","./TriggersTooltips.tsx":"TKZ9","./VariableWidth.js":"7lrA","./VariableWidth.tsx":"nn4H"};function i(e){var t=a(e);return n(t)}function a(e){var t=o[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}i.keys=function(){return Object.keys(o)},i.resolve=a,e.exports=i,i.id="EkEB"},Gpjp:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function ControlledTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <Tooltip onClose={handleTooltipClose} onOpen={handleTooltipOpen} open={open} title=\"Add\">\n      <Button>Controlled</Button>\n    </Tooltip>\n  );\n}\n"},"H/c0":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return b});var o=n("z3IF"),i=n("2Fjn"),a=n("mXGw"),r=n.n(a),l=n("XpU0"),s=n("yZEQ"),p=n("O8uh"),c=n("zRBL"),m=n("Oy88");function d(e){return{'&[x-placement*="bottom"] $arrow':{top:0,left:0,marginTop:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"0 1em 1em 1em",borderColor:"transparent transparent ".concat(e," transparent")}},'&[x-placement*="top"] $arrow':{bottom:0,left:0,marginBottom:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"1em 1em 0 1em",borderColor:"".concat(e," transparent transparent transparent")}},'&[x-placement*="right"] $arrow':{left:0,marginLeft:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 1em 1em 0",borderColor:"transparent ".concat(e," transparent transparent")}},'&[x-placement*="left"] $arrow':{right:0,marginRight:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 0 1em 1em",borderColor:"transparent transparent transparent ".concat(e)}}}}var u=Object(l.default)(function(e){return{tooltip:{backgroundColor:e.palette.common.white,color:"rgba(0, 0, 0, 0.87)",boxShadow:e.shadows[1],fontSize:11}}})(c.a),h=Object(s.a)(function(e){return{tooltip:{position:"relative"},arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:d(e.palette.grey[700])}});var f=Object(s.a)(function(e){return{arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:d(e.palette.common.black),tooltip:{position:"relative",backgroundColor:e.palette.common.black},tooltipPlacementLeft:{margin:"0 8px"},tooltipPlacementRight:{margin:"0 8px"},tooltipPlacementTop:{margin:"8px 0"},tooltipPlacementBottom:{margin:"8px 0"}}});var g=Object(l.default)(function(e){return{tooltip:{backgroundColor:"#f5f5f9",color:"rgba(0, 0, 0, 0.87)",maxWidth:220,fontSize:e.typography.pxToRem(12),border:"1px solid #dadde9"}}})(c.a),T=r.a.createElement("div",null,r.a.createElement(u,{title:"Add"},r.a.createElement(p.a,null,"Light")),r.a.createElement(function(e){var t=h(),n=t.arrow,a=Object(i.a)(t,["arrow"]),l=r.a.useState(null),s=l[0],p=l[1];return r.a.createElement(c.a,Object(o.default)({classes:a,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(s),element:s}}}}},e,{title:r.a.createElement(r.a.Fragment,null,e.title,r.a.createElement("span",{className:n,ref:p}))}))},{title:"Add"},r.a.createElement(p.a,null,"Arrow")),r.a.createElement(function(e){var t=f(),n=t.arrow,a=Object(i.a)(t,["arrow"]),l=r.a.useState(null),s=l[0],p=l[1];return r.a.createElement(c.a,Object(o.default)({classes:a,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(s),element:s}}}}},e,{title:r.a.createElement(r.a.Fragment,null,e.title,r.a.createElement("span",{className:n,ref:p}))}))},{title:"Add"},r.a.createElement(p.a,null,"Bootstrap")),r.a.createElement(g,{title:r.a.createElement(r.a.Fragment,null,r.a.createElement(m.a,{color:"inherit"},"Tooltip with HTML"),r.a.createElement("em",null,"And here's")," ",r.a.createElement("b",null,"some")," ",r.a.createElement("u",null,"amazing content"),"."," ","It's very engaging. Right?")},r.a.createElement(p.a,null,"HTML")));function b(){return T}},IH4K:function(e,t){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport Grid from \'@material-ui/core/Grid\';\nimport Button from \'@material-ui/core/Button\';\nimport Tooltip from \'@material-ui/core/Tooltip\';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function PositionedTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify="center">\n        <Grid item>\n          <Tooltip title="Add" placement="top-start">\n            <Button>top-start</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="top">\n            <Button>top</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="top-end">\n            <Button>top-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container justify="center">\n        <Grid item xs={6}>\n          <Tooltip title="Add" placement="left-start">\n            <Button>left-start</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title="Add" placement="left">\n            <Button>left</Button>\n          </Tooltip>\n          <br />\n          <Tooltip title="Add" placement="left-end">\n            <Button>left-end</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item container xs={6} alignItems="flex-end" direction="column">\n          <Grid item>\n            <Tooltip title="Add" placement="right-start">\n              <Button>right-start</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title="Add" placement="right">\n              <Button>right</Button>\n            </Tooltip>\n          </Grid>\n          <Grid item>\n            <Tooltip title="Add" placement="right-end">\n              <Button>right-end</Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container justify="center">\n        <Grid item>\n          <Tooltip title="Add" placement="bottom-start">\n            <Button>bottom-start</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="bottom">\n            <Button>bottom</Button>\n          </Tooltip>\n          <Tooltip title="Add" placement="bottom-end">\n            <Button>bottom-end</Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n'},IidP:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function ControlledTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <Tooltip onClose={handleTooltipClose} onOpen={handleTooltipOpen} open={open} title=\"Add\">\n      <Button>Controlled</Button>\n    </Tooltip>\n  );\n}\n"},JRap:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return p});var o=n("mXGw"),i=n.n(o),a=n("e+1t"),r=n("8Xt6"),l=n("EkEB"),s=i.a.createElement(a.a,{req:r,reqSource:l,reqPrefix:"pages/components/tooltips"});function p(){return s}},JSlW:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(r.a,{title:"Add",enterDelay:500,leaveDelay:200},i.a.createElement(a.a,null,"[500ms, 200ms]"));function s(){return l}},KLit:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n  absolute: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(3),\n  },\n}));\n\nexport default function SimpleTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Delete\">\n        <IconButton aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"secondary\" className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n"},Lxax:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return p});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("O8uh"),l=n("zRBL"),s=Object(a.a)(function(e){return{button:{margin:e.spacing(1)}}});function p(){var e=s();return i.a.createElement("div",null,i.a.createElement(l.a,{title:"Add",interactive:!0},i.a.createElement(r.a,{className:e.button},"Interactive")),i.a.createElement(l.a,{title:"Add"},i.a.createElement(r.a,{className:e.button},"Non Interactive")))}},MsYL:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(r.a,{title:"Add",enterDelay:500,leaveDelay:200},i.a.createElement(a.a,null,"[500ms, 200ms]"));function s(){return l}},Oapb:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DelayTooltips() {\n  return (\n    <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n      <Button>[500ms, 200ms]</Button>\n    </Tooltip>\n  );\n}\n"},Ozru:function(e,t,n){"use strict";var o=n("mXGw"),i=n.n(o),a=n("0Zz2");t.a=Object(a.a)(i.a.createElement("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete")},RUF9:function(e,t){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\nexport default function InteractiveTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Add\" interactive>\n        <Button className={classes.button}>Interactive</Button>\n      </Tooltip>\n      <Tooltip title=\"Add\">\n        <Button className={classes.button}>Non Interactive</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},"S/bb":function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\n\nexport default function TransitionsTooltips() {\n  return (\n    <div>\n      <Tooltip title=\"Add\">\n        <Button>Grow</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\"Add\">\n        <Button>Fade</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Zoom} title=\"Add\">\n        <Button>Zoom</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},TKZ9:function(e,t){e.exports="import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nexport default function TriggersTooltips() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleTooltipClose() {\n    setOpen(false);\n  }\n\n  function handleTooltipOpen() {\n    setOpen(true);\n  }\n\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <Tooltip disableFocusListener title=\"Add\">\n            <Button>Hover or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableHoverListener title=\"Add\">\n            <Button>Focus or touch</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip disableFocusListener disableTouchListener title=\"Add\">\n            <Button>Hover</Button>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <div>\n              <Tooltip\n                PopperProps={{\n                  disablePortal: true,\n                }}\n                onClose={handleTooltipClose}\n                open={open}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                title=\"Add\"\n              >\n                <Button onClick={handleTooltipOpen}>Click</Button>\n              </Tooltip>\n            </div>\n          </ClickAwayListener>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},WLtd:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var o=n("AMAy");function i(e){return Object(o.a)(e)}},YvnE:function(e,t){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function InteractiveTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Add\" interactive>\n        <Button className={classes.button}>Interactive</Button>\n      </Tooltip>\n      <Tooltip title=\"Add\">\n        <Button className={classes.button}>Non Interactive</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},ZSbK:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tooltips",function(){var e=n("JRap");return{page:e.default||e}}])},ZmDe:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return w});var o=n("z3IF"),i=n("2Fjn"),a=n("mXGw"),r=n.n(a),l=n("XpU0"),s=n("yZEQ"),p=n("WLtd"),c=n("O8uh"),m=n("zRBL"),d=n("Oy88");function u(e){return{'&[x-placement*="bottom"] $arrow':{top:0,left:0,marginTop:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"0 1em 1em 1em",borderColor:"transparent transparent ".concat(e," transparent")}},'&[x-placement*="top"] $arrow':{bottom:0,left:0,marginBottom:"-0.95em",width:"2em",height:"1em","&::before":{borderWidth:"1em 1em 0 1em",borderColor:"".concat(e," transparent transparent transparent")}},'&[x-placement*="right"] $arrow':{left:0,marginLeft:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 1em 1em 0",borderColor:"transparent ".concat(e," transparent transparent")}},'&[x-placement*="left"] $arrow':{right:0,marginRight:"-0.95em",height:"2em",width:"1em","&::before":{borderWidth:"1em 0 1em 1em",borderColor:"transparent transparent transparent ".concat(e)}}}}var h=Object(l.default)(function(e){return{tooltip:{backgroundColor:e.palette.common.white,color:"rgba(0, 0, 0, 0.87)",boxShadow:e.shadows[1],fontSize:11}}})(m.a),f=Object(s.a)(function(e){return Object(p.a)({tooltip:{position:"relative"},arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:u(e.palette.grey[700])})});var g=Object(s.a)(function(e){return Object(p.a)({arrow:{position:"absolute",fontSize:6,"&::before":{content:'""',margin:"auto",display:"block",width:0,height:0,borderStyle:"solid"}},popper:u(e.palette.common.black),tooltip:{position:"relative",backgroundColor:e.palette.common.black},tooltipPlacementLeft:{margin:"0 8px"},tooltipPlacementRight:{margin:"0 8px"},tooltipPlacementTop:{margin:"8px 0"},tooltipPlacementBottom:{margin:"8px 0"}})});var T=Object(l.default)(function(e){return{tooltip:{backgroundColor:"#f5f5f9",color:"rgba(0, 0, 0, 0.87)",maxWidth:220,fontSize:e.typography.pxToRem(12),border:"1px solid #dadde9"}}})(m.a),b=r.a.createElement("div",null,r.a.createElement(h,{title:"Add"},r.a.createElement(c.a,null,"Light")),r.a.createElement(function(e){var t=f(),n=t.arrow,a=Object(i.a)(t,["arrow"]),l=r.a.useState(null),s=l[0],p=l[1];return r.a.createElement(m.a,Object(o.default)({classes:a,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(s),element:s}}}}},e,{title:r.a.createElement(r.a.Fragment,null,e.title,r.a.createElement("span",{className:n,ref:p}))}))},{title:"Add"},r.a.createElement(c.a,null,"Arrow")),r.a.createElement(function(e){var t=g(),n=t.arrow,a=Object(i.a)(t,["arrow"]),l=r.a.useState(null),s=l[0],p=l[1];return r.a.createElement(m.a,Object(o.default)({classes:a,PopperProps:{popperOptions:{modifiers:{arrow:{enabled:Boolean(s),element:s}}}}},e,{title:r.a.createElement(r.a.Fragment,null,e.title,r.a.createElement("span",{className:n,ref:p}))}))},{title:"Add"},r.a.createElement(c.a,null,"Bootstrap")),r.a.createElement(T,{title:r.a.createElement(r.a.Fragment,null,r.a.createElement(d.a,{color:"inherit"},"Tooltip with HTML"),r.a.createElement("em",null,"And here's")," ",r.a.createElement("b",null,"some")," ",r.a.createElement("u",null,"amazing content"),"."," ","It's very engaging. Right?")},r.a.createElement(c.a,null,"HTML")));function w(){return b}},aQGT:function(e,t){e.exports="import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: theme.spacing(2),\n    },\n    absolute: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3),\n    },\n  }),\n);\n\nexport default function SimpleTooltips() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title=\"Delete\">\n        <IconButton aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"secondary\" className={classes.absolute}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n}\n"},ab2m:function(e,t){e.exports='---\ntitle: Tooltip React component\ncomponents: Tooltip\n---\n\n# Sugerencias\n\n<p class="description">Tooltips display informative text when users hover over, focus on, or tap an element.</p>\n\nWhen activated, [Tooltips](https://material.io/design/components/tooltips.html) display a text label identifying an element, such as a description of its function.\n\n## Simple Tooltips\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Positioned Tooltips\n\nThe `Tooltip` has 12 **placements** choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Customized tooltips\n\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Custom child element\n\nThe tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its properties to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // We spread the properties to the underlying DOM element.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Delete">\n  <MyComponent>\n</Tooltip>\n```\n\nYou can find a similar concept in the [wrapping components](/guides/composition/#wrapping-components) guide.\n\n## Triggers\n\nYou can define the types of events that cause a tooltip to show.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Controlled Tooltips\n\nYou can use the `open`, `onOpen` and `onClose` properties to control the behavior of the tooltip.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Variable Width\n\nThe `Tooltip` wraps long text by default to make it readable.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Explora\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Disabled Elements\n\nBy default disabled elements like `<button>` do not trigger user interactions so a `Tooltip` will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a `span`.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Transiciones\n\nUsar una transición diferente.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Showing and hiding\n\nThe tooltip is normally shown immediately when the user\'s mouse hovers over the element, and hides immediately when the user\'s mouse leaves. A delay in showing or hiding the tooltip can be added through the properties `enterDelay` and `leaveDelay`, as shown in the Controlled Tooltips demo above.\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},"b/kY":function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport Zoom from '@material-ui/core/Zoom';\n\nexport default function TransitionsTooltips() {\n  return (\n    <div>\n      <Tooltip title=\"Add\">\n        <Button>Grow</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\"Add\">\n        <Button>Fade</Button>\n      </Tooltip>\n      <Tooltip TransitionComponent={Zoom} title=\"Add\">\n        <Button>Zoom</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},bNou:function(e,t){e.exports='---\ntitle: Tooltip React component\ncomponents: Tooltip\n---\n\n# Tooltip\n\n<p class="description">ユーザーが要素上にマウスを移動したり、要素をフォーカスしたり、タップしたりすると、ツールチップにわかりやすいテキストが表示されます。</p>\n\n[Tooltips](https://material.io/design/components/tooltips.html)をアクティブにすると、機能の説明など、要素を識別するテキストラベルが表示されます。\n\n## Simple Tooltips\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Positioned Tooltips\n\n`ツールチップ` は、12 **配置** 選択肢があります。 矢印はありません。その代わりに、方向を伝達するためにソースから発生するモーションに依存します。\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Customized tooltips\n\nコンポーネントのカスタマイズの例を次に示します。 詳細については、 [overrides documentation page](/customization/components/)を参照してください。\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Custom child element\n\nツールチップは、DOMイベントリスナーをその子要素に適用する必要があります。 子がカスタムReact要素の場合は、そのプロパティを基になるDOM要素に確実に分散させる必要があります。\n\n```jsx\nfunction MyComponent(props) {\n  // We spread the properties to the underlying DOM element.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Delete">\n  <MyComponent>\n</Tooltip>\n```\n\n同様の概念は、[wrapping components](/guides/composition/#wrapping-components)ガイドにも記載されています。\n\n## Triggers\n\nツールチップを表示するイベントのタイプを定義できます。\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Controlled Tooltips\n\n`open`, `onOpen` and `onClose` の各プロパティを使用して、ツールチップの動作を制御できます。\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Variable Width\n\n既定では、`Tooltip`は長いテキストを折り返して読みやすくします。\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## インタラクティブ\n\nツールチップをインタラクティブにすることができます。 `leaveDelay` が期限切れになる前に、ユーザーがツールチップにカーソルを合わせても閉じません。\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## 無効な要素\n\nデフォルトでは無効になっている要素`<button>`はユーザーの操作をトリガーしないため、 `Tooltip`は、ホバーなどの通常のイベントでアクティブになりません。 無効な要素に対応するために、 `span`ような単純なラッパー要素を追加します。\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## トランジション\n\n別のトランジションを使用します。\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## 表示と非表示\n\nツールチップは通常、ユーザーのマウスが要素の上に移動するとすぐに表示され、ユーザーのマウスが離れるとすぐに非表示になります。 ツールチップの表示または非表示の遅延は、上記のControlled Tooltipsデモに示すように、プロパティ `enterDelay` および `leaveDelay`を使用して追加できます。\n\nモバイルでは、ユーザーが要素を長押しして1500msの遅延後に非表示になると、ツールチップが表示されます。 `disableTouchListener` プロパティでこの機能を無効にできます。\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},c8aK:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DelayTooltips() {\n  return (\n    <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n      <Button>[500ms, 200ms]</Button>\n    </Tooltip>\n  );\n}\n"},dLno:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return u});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("pQ8Y"),l=n("O8uh"),s=n("zRBL"),p=Object(a.a)({root:{width:500}}),c=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"top-start"},i.a.createElement(l.a,null,"top-start")),i.a.createElement(s.a,{title:"Add",placement:"top"},i.a.createElement(l.a,null,"top")),i.a.createElement(s.a,{title:"Add",placement:"top-end"},i.a.createElement(l.a,null,"top-end")))),m=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0,xs:6},i.a.createElement(s.a,{title:"Add",placement:"left-start"},i.a.createElement(l.a,null,"left-start")),i.a.createElement("br",null),i.a.createElement(s.a,{title:"Add",placement:"left"},i.a.createElement(l.a,null,"left")),i.a.createElement("br",null),i.a.createElement(s.a,{title:"Add",placement:"left-end"},i.a.createElement(l.a,null,"left-end"))),i.a.createElement(r.a,{item:!0,container:!0,xs:6,alignItems:"flex-end",direction:"column"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right-start"},i.a.createElement(l.a,null,"right-start"))),i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right"},i.a.createElement(l.a,null,"right"))),i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"right-end"},i.a.createElement(l.a,null,"right-end"))))),d=i.a.createElement(r.a,{container:!0,justify:"center"},i.a.createElement(r.a,{item:!0},i.a.createElement(s.a,{title:"Add",placement:"bottom-start"},i.a.createElement(l.a,null,"bottom-start")),i.a.createElement(s.a,{title:"Add",placement:"bottom"},i.a.createElement(l.a,null,"bottom")),i.a.createElement(s.a,{title:"Add",placement:"bottom-end"},i.a.createElement(l.a,null,"bottom-end"))));function u(){var e=p();return i.a.createElement("div",{className:e.root},c,m,d)}},fnHy:function(e,t,n){"use strict";var o=n("z3IF"),i=n("Rbzu"),a=n("2Fjn"),r=n("mXGw"),l=n.n(r),s=n("VKDF"),p=n("tqcJ"),c=n("LMpM"),m=n("xOSD"),d=n("c1Jj"),u={entering:{transform:"none"},entered:{transform:"none"}},h={enter:p.b.enteringScreen,exit:p.b.leavingScreen},f=l.a.forwardRef(function(e,t){var n=e.children,r=e.in,p=e.onEnter,f=e.onExit,g=e.style,T=e.timeout,b=void 0===T?h:T,w=Object(a.a)(e,["children","in","onEnter","onExit","style","timeout"]),v=Object(c.a)(),y=Object(d.c)(n.ref,t);return l.a.createElement(s.a,Object(o.default)({appear:!0,in:r,onEnter:function(e,t){Object(m.b)(e);var n=Object(m.a)({style:g,timeout:b},{mode:"enter"});e.style.webkitTransition=v.transitions.create("transform",n),e.style.transition=v.transitions.create("transform",n),p&&p(e,t)},onExit:function(e){var t=Object(m.a)({style:g,timeout:b},{mode:"exit"});e.style.webkitTransition=v.transitions.create("transform",t),e.style.transition=v.transitions.create("transform",t),f&&f(e)},timeout:b},w),function(e,t){return l.a.cloneElement(n,Object(i.a)({style:Object(i.a)({transform:"scale(0)",visibility:"exited"!==e||r?void 0:"hidden"},u[e],g,n.props.style),ref:y},t))})});t.a=f},gOq8:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(r.a,{title:"You don't have permission to do this"},i.a.createElement("span",null,i.a.createElement(a.a,{disabled:!0},"A Disabled Button")));function s(){return l}},kQbm:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DisabledTooltips() {\n  return (\n    <Tooltip title=\"You don't have permission to do this\">\n      <span>\n        <Button disabled>A Disabled Button</Button>\n      </span>\n    </Tooltip>\n  );\n}\n"},mT1t:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=i.a.createElement(a.a,null,"Controlled");function s(){var e=i.a.useState(!1),t=e[0],n=e[1];return i.a.createElement(r.a,{onClose:function(){n(!1)},onOpen:function(){n(!0)},open:t,title:"Add"},l)}},nb2l:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var o=n("mXGw"),i=n.n(o),a=n("pQ8Y"),r=n("O8uh"),l=n("zRBL"),s=n("L5GG"),p=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableFocusListener:!0,title:"Add"},i.a.createElement(r.a,null,"Hover or touch"))),c=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableHoverListener:!0,title:"Add"},i.a.createElement(r.a,null,"Focus or touch"))),m=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableFocusListener:!0,disableTouchListener:!0,title:"Add"},i.a.createElement(r.a,null,"Hover")));function d(){var e=i.a.useState(!1),t=e[0],n=e[1];function o(){n(!1)}return i.a.createElement("div",null,i.a.createElement(a.a,{container:!0,justify:"center"},p,c,m,i.a.createElement(a.a,{item:!0},i.a.createElement(s.a,{onClickAway:o},i.a.createElement("div",null,i.a.createElement(l.a,{PopperProps:{disablePortal:!0},onClose:o,open:t,disableFocusListener:!0,disableHoverListener:!0,disableTouchListener:!0,title:"Add"},i.a.createElement(r.a,{onClick:function(){n(!0)}},"Click")))))))}},nn4H:function(e,t){e.exports="import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    customWidth: {\n      maxWidth: 500,\n    },\n    noMaxWidth: {\n      maxWidth: 'none',\n    },\n  }),\n);\n\nconst longText = `\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\nPraesent non nunc mollis, fermentum neque at, semper arcu.\nNullam eget est sed sem iaculis gravida eget vitae justo.\n`;\n\nexport default function VariableWidth() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Tooltip title={longText}>\n        <Button className={classes.button}>Default Width [300px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.customWidth }}>\n        <Button className={classes.button}>Custom Width [500px]</Button>\n      </Tooltip>\n      <Tooltip title={longText} classes={{ tooltip: classes.noMaxWidth }}>\n        <Button className={classes.button}>No wrapping</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"},"pI9+":function(e,t){e.exports='---\ntitle: Componente React para Dicas\ncomponents: Tooltip\n---\n\n# Dicas\n\n<p class="description">Dicas exibem texto informativo quando os usuários passam o mouse, focalizam ou tocam em um elemento.</p>\n\nQuando ativada, [dicas](https://material.io/design/components/tooltips.html) exibem um rótulo de texto identificando o elemento, como uma descrição de sua função.\n\n## Dicas simples\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Posicionamento de dicas\n\nO `Tooltip` tem 12 **posicionamentos** para ser escolhido. Eles não têm setas direcionais; em vez disso, eles dependem do movimento que emana da fonte para transmitir direção.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Dicas customizadas\n\nAqui estão alguns exemplos de customização do componente. Você pode aprender mais sobre isso na [página de documentação de sobrescritas](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Elemento filho customizado\n\nA dica precisa aplicar ouvintes de evento DOM ao seu elemento filho. Se o filho for um elemento React personalizado, você precisará garantir que ele estenda suas propriedades para o elemento DOM subjacente.\n\n```jsx\nfunction MyComponent (props) {\n  // Distribuímos as propriedades para o elemento DOM subjacente.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Excluir">\n  <MyComponent>\n</Tooltip>\n```\n\nVocê pode encontrar um conceito similar no guia de [componentes de encapsulamento](/guides/composition/#wrapping-components).\n\n## Gatilhos\n\nVocê pode definir os tipos de eventos que fazem com que uma dica seja exibida.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Dicas Controladas\n\nVocê pode usas as propriedades `open`, `onOpen` e `onClose` para controlar o comportamento da dica.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Largura Variável\n\nA dica (`Tooltip`) quebra o texto longo por padrão para torná-lo legível.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Interativa\n\nUma dica pode ser interativa. Ela não será fechada quando o usuário passar por cima da dica antes que `leaveDelay` expire.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Elementos Desativados\n\nPor padrão os elementos desativados como `<button>` não disparam interações do usuário, então uma `Tooltip` não será ativada em eventos normais, omo passar o mouse. Para acomodar elementos desativados, adicione um elemento encapsulador simples como um `span`.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Transições\n\nUse uma transição diferente.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Mostrando e ocultando\n\nA dica normalmente é mostrada imediatamente quando o mouse do usuário passa sobre o elemento e se oculta imediatamente quando o mouse do usuário sai. Um atraso na exibição ou ocultação da dica pode ser adicionado por meio das propriedades `enterDelay` e `leaveDelay`, conforme mostrado na demonstração de dicas controladas acima.\n\nNo celular, a dica é exibida quando o usuário pressiona longamente o elemento e oculta após um atraso de 1500 ms. Você pode desativar esse recurso com a propriedade `disableTouchListener`.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},pQ8Y:function(e,t,n){"use strict";var o=n("2Fjn"),i=n("Rbzu"),a=n("yLsn"),r=n.n(a),l=n("z3IF"),s=n("mXGw"),p=n.n(s),c=n("PDtE"),m=n("XpU0"),d=[0,1,2,3,4,5,6,7,8,9,10],u=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function h(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=r()(e);return"".concat(n/t).concat(String(e).replace(String(n),"")||"px")}var f=p.a.forwardRef(function(e,t){var n=e.alignContent,i=void 0===n?"stretch":n,a=e.alignItems,r=void 0===a?"stretch":a,s=e.classes,m=e.className,d=e.component,u=void 0===d?"div":d,h=e.container,f=void 0!==h&&h,g=e.direction,T=void 0===g?"row":g,b=e.item,w=void 0!==b&&b,v=e.justify,y=void 0===v?"flex-start":v,x=e.lg,E=void 0!==x&&x,B=e.md,j=void 0!==B&&B,A=e.sm,C=void 0!==A&&A,S=e.spacing,O=void 0===S?0:S,z=e.wrap,k=void 0===z?"wrap":z,D=e.xl,L=void 0!==D&&D,R=e.xs,G=void 0!==R&&R,W=e.zeroMinWidth,I=void 0!==W&&W,P=Object(o.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),M=Object(c.a)(s.root,m,f&&[s.container,0!==O&&s["spacing-xs-".concat(String(O))]],w&&s.item,I&&s.zeroMinWidth,"row"!==T&&s["direction-xs-".concat(String(T))],"wrap"!==k&&s["wrap-xs-".concat(String(k))],"stretch"!==r&&s["align-items-xs-".concat(String(r))],"stretch"!==i&&s["align-content-xs-".concat(String(i))],"flex-start"!==y&&s["justify-xs-".concat(String(y))],!1!==G&&s["grid-xs-".concat(String(G))],!1!==C&&s["grid-sm-".concat(String(C))],!1!==j&&s["grid-md-".concat(String(j))],!1!==E&&s["grid-lg-".concat(String(E))],!1!==L&&s["grid-xl-".concat(String(L))]);return p.a.createElement(u,Object(l.default)({className:M,ref:t},P))});var g=Object(m.default)(function(e){return Object(i.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,t){var n={};return d.forEach(function(o){var i=e.spacing(o);0!==i&&(n["spacing-".concat(t,"-").concat(o)]={margin:"-".concat(h(i,2)),width:"calc(100% + ".concat(h(i),")"),"& > $item":{padding:h(i,2)}})}),n}(e,"xs"),e.breakpoints.keys.reduce(function(t,n){return function(e,t,n){var o={};u.forEach(function(e){var t="grid-".concat(n,"-").concat(e);if(!0!==e)if("auto"!==e){var i="".concat(Math.round(e/12*1e8)/1e6,"%");o[t]={flexBasis:i,flexGrow:0,maxWidth:i}}else o[t]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else o[t]={flexBasis:0,flexGrow:1,maxWidth:"100%"}}),"xs"===n?Object(l.default)(e,o):e[t.breakpoints.up(n)]=o}(t,e,n),t},{}))},{name:"MuiGrid"})(f);t.a=g},ptF0:function(e,t){e.exports='---\ntitle: crwdns92432:0crwdne92432:0\ncomponents: crwdns92434:0crwdne92434:0\n---\n\n# crwdns92436:0crwdne92436:0\n\n<p class="description">crwdns92438:0crwdne92438:0</p>\n\ncrwdns92440:0crwdne92440:0\n\n## crwdns92442:0crwdne92442:0\n\ncrwdns92444:0crwdne92444:0\n\n## crwdns92446:0crwdne92446:0\n\ncrwdns92448:0crwdne92448:0 crwdns92450:0crwdne92450:0\n\ncrwdns92452:0crwdne92452:0\n\n## crwdns92454:0crwdne92454:0\n\ncrwdns92456:0crwdne92456:0 crwdns92458:0crwdne92458:0\n\ncrwdns92460:0crwdne92460:0\n\n## crwdns92462:0crwdne92462:0\n\ncrwdns92464:0crwdne92464:0 crwdns92466:0crwdne92466:0\n\n```jsx\ncrwdns92468:0crwdne92468:0\n  crwdns92470:0{...props}crwdne92470:0\n\ncrwdns92472:0crwdne92472:0\n```\n\ncrwdns92474:0crwdne92474:0\n\n## crwdns92476:0crwdne92476:0\n\ncrwdns92478:0crwdne92478:0\n\ncrwdns92480:0crwdne92480:0\n\n## crwdns92482:0crwdne92482:0\n\ncrwdns92484:0crwdne92484:0\n\ncrwdns92486:0crwdne92486:0\n\n## crwdns92488:0crwdne92488:0\n\ncrwdns92490:0crwdne92490:0\n\ncrwdns92492:0crwdne92492:0\n\n## crwdns92494:0crwdne92494:0\n\ncrwdns92496:0crwdne92496:0 crwdns92498:0crwdne92498:0\n\ncrwdns92500:0crwdne92500:0\n\n## crwdns92502:0crwdne92502:0\n\ncrwdns92504:0crwdne92504:0 crwdns92506:0crwdne92506:0\n\ncrwdns92508:0crwdne92508:0\n\n## crwdns92510:0crwdne92510:0\n\ncrwdns92512:0crwdne92512:0\n\ncrwdns92514:0crwdne92514:0\n\n## crwdns92516:0crwdne92516:0\n\ncrwdns92518:0crwdne92518:0 crwdns92520:0crwdne92520:0\n\ncrwdns92522:0crwdne92522:0 crwdns92524:0crwdne92524:0\n\ncrwdns92526:0crwdne92526:0'},su3M:function(e,t){e.exports='---\ntitle: Tooltip React component\ncomponents: Tooltip\n---\n\n# Всплывающие подсказки\n\n<p class="description">Всплывающие подсказки отображают информативный текст когда пользователь наводит курсор на элемент, фокусируется на нем или нажимает на него.</p>\n\nПри активации, [Tooltips](https://material.io/design/components/tooltips.html) отображают текстовую метку, идентифицирующая элемент, например, описание его функции.\n\n## Простые подсказки\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Позиционированные подсказки\n\nThe `Tooltip` has 12 **placements** choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Настраиваемые подсказки\n\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Custom child element\n\nThe tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its properties to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // We spread the properties to the underlying DOM element.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Delete">\n  <MyComponent>\n</Tooltip>\n```\n\nYou can find a similar concept in the [wrapping components](/guides/composition/#wrapping-components) guide.\n\n## Триггеры\n\nYou can define the types of events that cause a tooltip to show.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Контролируемые подсказки\n\nВы можете использовать `open`, `onOpen` and `onClose` свойства, чтобы контролировать поведение всплывающей подсказки.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Вариативная ширина\n\nThe `Tooltip` wraps long text by default to make it readable.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Интерактивность\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Неактивные элементы\n\nBy default disabled elements like `<button>` do not trigger user interactions so a `Tooltip` will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a `span`.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Transições\n\nИспользуйте другой transition.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Showing and hiding\n\nВсплывающая подсказка обычно отображается сразу же, как пользователь наводит курсор на элемент, и сразу же скрывается, когда курсор уходит с элемента. Задержку в отображении или скрытии всплывающей подсказки можно добавить через свойства `enterDelay` и `leaveDelay`, как показано выше в демонстрационной версии «Контролируемые подсказки».\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},suDe:function(e,t){e.exports='---\ntitle: Composant React Info-bulle\ncomponents: Tooltip\n---\n\n# Tooltips (Info-bulle)\n\n<p class="description">Les info-bulles affichent un texte informatif lorsque les utilisateurs survolent, se concentrent ou tapent sur un élément.</p>\n\nLorsqu\'elles sont activées, [Info-bulles](https://material.io/design/components/tooltips.html) affiche une étiquette de texte identifiant un élément, telle qu\'une description de sa fonction.\n\n## Info-bulles simples\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Info-bulles positionnées\n\nThe `Tooltip` has 12 **placements** choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Customized tooltips\n\nHere are some examples of customizing the component. Vous pouvez en savoir plus dans la [page de documentation des overrides](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Élément enfant personnalisé\n\nThe tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its properties to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // We spread the properties to the underlying DOM element.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Delete">\n  <MyComponent>\n</Tooltip>\n```\n\nVous pouvez trouver un concept similaire dans le [composants d\'emballage](/guides/composition/#wrapping-components) guide.\n\n## Activation\n\nVous pouvez définir les types d\'événements qui entraînent l\'affichage d\'une info-bulle.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Info-bulles contrôlées\n\nVous pouvez utiliser les propriétés `open`, `onOpen` et `onClose` pour contrôler le comportement de l\'info-bulle.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Largeur Variable\n\nLe `Tooltip` enveloppements long texte par défaut pour le rendre lisible.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Interactive\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Éléments désactivés\n\nPar éléments désactivés par défaut comme `<button>` ne déclenchent pas les interactions utilisateur si un `infobulle` ne sera pas activée sur les événements normaux comme vol stationnaire. Pour recevoir des éléments handicapés, ajoutez un simple élément d\'emballage comme un `durée`.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Les transitions\n\nUtilisez une transition différente.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Montrer et se cacher\n\nL\'info-bulle est normalement affichée immédiatement lorsque la souris de l\'utilisateur survole l\'élément, et se cache immédiatement lorsque la souris de l\'utilisateur quitte la souris. Un retard dans l\'affichage ou le masquage de l\'info-bulle peut être ajouté via les propriétés suivantes `enterDelay` et `leaveDelay`, comme indiqué dans la démo Infobulles contrôlées ci-dessus.\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},t8dp:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return f});var o=n("mXGw"),i=n.n(o),a=n("yZEQ"),r=n("CgSL"),l=n("C+rX"),s=n("Ozru"),p=n("l/nz"),c=n("zRBL"),m=Object(a.a)(function(e){return{fab:{margin:e.spacing(2)},absolute:{position:"absolute",bottom:e.spacing(2),right:e.spacing(3)}}}),d=i.a.createElement(c.a,{title:"Delete"},i.a.createElement(p.a,{"aria-label":"delete"},i.a.createElement(s.a,null))),u=i.a.createElement(r.a,null),h=i.a.createElement(r.a,null);function f(){var e=m();return i.a.createElement("div",null,d,i.a.createElement(c.a,{title:"Add","aria-label":"add"},i.a.createElement(l.a,{color:"primary",className:e.fab},u)),i.a.createElement(c.a,{title:"Add","aria-label":"add"},i.a.createElement(l.a,{color:"secondary",className:e.absolute},h)))}},tEFB:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var o=n("mXGw"),i=n.n(o),a=n("O8uh"),r=n("zRBL"),l=n("LpUc"),s=n("fnHy"),p=i.a.createElement(r.a,{title:"Add"},i.a.createElement(a.a,null,"Grow")),c=i.a.createElement(a.a,null,"Fade"),m=i.a.createElement(r.a,{TransitionComponent:s.a,title:"Add"},i.a.createElement(a.a,null,"Zoom"));function d(){return i.a.createElement("div",null,p,i.a.createElement(r.a,{TransitionComponent:l.a,TransitionProps:{timeout:600},title:"Add"},c),m)}},v529:function(e,t){e.exports='---\ntitle: 文字提示 React 组件\ncomponents: Tooltip\n---\n\n# 文字提示\n\n<p class="description">当用户鼠标悬浮，聚焦或者轻触一个元素时，文字提示会显示有意义的文本。</p>\n\n当它触发时， [Tooltips](https://material.io/design/components/tooltips.html) 会显示一个标识一个元素的文本标签，比如对该功能的描述。\n\n## 简单的文字提示\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## 文字提示的定位\n\nThe `Tooltip` has 12 **placements** choice. They don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Customized tooltips\n\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## 自定义子元素\n\nThe tooltip needs to apply DOM event listeners to its child element. If the child is a custom React element, you need to make sure that it spreads its properties to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // 我们将属性扩展到底层DOM元素。\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="删除">\n  <MyComponent>\n</Tooltip>\n```\n\n您可以在 [包装组件](/guides/composition/#wrapping-components) 指南中找到类似的概念。\n\n## 触发器\n\n你可以定义各种类型的事件让一个文字提示显示。\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## 控制文字提示\n\n你可以使用 `open`， `onOpen` 和`onClose` 属性来控制工具提示的行为。\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## 可变的容器宽度\n\n`Tooltip` 为了保证较好的阅读性，会自动将较长的文字折行。\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## 交互式\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## 对于 disabled 的元素\n\n默认情况下，`<Button>`等disabled的元素不会触发用户交互，因此`Tooltip`不会在hover等正常事件上激活显示。 要允许已禁用的元素激活文字提示，请添加一个简单的包装元素，如`span`。\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## 过渡动画\n\n使用不同的过渡动画。\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## 显示和隐藏\n\n当用户的鼠标悬浮在该元素时工具提示会立即显示，并且当用户鼠标离开时立即隐藏。 可以通过` enterDelay `和` leaveDelay `属性来控制显示及隐藏文字提示的延迟，如上面的控制文字提示演示中所示。\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}'},"w+ES":function(e,t){e.exports='---\ntitle: Tooltip React component\ncomponents: Tooltip\n---\n\n# Tooltips\n\n<p class="description">Tooltips display informative text when users hover over, focus on, or tap an element.</p>\n\nWhen activated, [Tooltips](https://material.io/design/components/tooltips.html) display a text label identifying an element, such as a description of its function.\n\n## Simple Tooltips\n\n{{"demo": "pages/components/tooltips/SimpleTooltips.js"}}\n\n## Positioned Tooltips\n\nThe `Tooltip` has 12 **placements** choice.\nThey don’t have directional arrows; instead, they rely on motion emanating from the source to convey direction.\n\n{{"demo": "pages/components/tooltips/PositionedTooltips.js"}}\n\n## Customized tooltips\n\nHere are some examples of customizing the component. You can learn more about this in the\n[overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/tooltips/CustomizedTooltips.js"}}\n\n## Custom child element\n\nThe tooltip needs to apply DOM event listeners to its child element.\nIf the child is a custom React element, you need to make sure that it spreads its properties  to the underlying DOM element.\n\n```jsx\nfunction MyComponent(props) {\n  // We spread the properties to the underlying DOM element.\n  return <div {...props}>Bin</div>\n}\n\n// ...\n\n<Tooltip title="Delete">\n  <MyComponent>\n</Tooltip>\n```\n\nYou can find a similar concept in the [wrapping components](/guides/composition/#wrapping-components) guide.\n\n## Triggers\n\nYou can define the types of events that cause a tooltip to show.\n\n{{"demo": "pages/components/tooltips/TriggersTooltips.js"}}\n\n## Controlled Tooltips\n\nYou can use the `open`, `onOpen` and `onClose` properties to control the behavior of the tooltip.\n\n{{"demo": "pages/components/tooltips/ControlledTooltips.js"}}\n\n## Variable Width\n\nThe `Tooltip` wraps long text by default to make it readable.\n\n{{"demo": "pages/components/tooltips/VariableWidth.js"}}\n\n## Interactive\n\nA tooltip can be interactive. It won\'t close when the user hovers over the tooltip before the `leaveDelay` is expired.\n\n{{"demo": "pages/components/tooltips/InteractiveTooltips.js"}}\n\n## Disabled Elements\n\nBy default disabled elements like `<button>` do not trigger user interactions so a `Tooltip` will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element like a `span`.\n\n{{"demo": "pages/components/tooltips/DisabledTooltips.js"}}\n\n## Transitions\n\nUse a different transition.\n\n{{"demo": "pages/components/tooltips/TransitionsTooltips.js"}}\n\n## Showing and hiding\n\nThe tooltip is normally shown immediately when the user\'s mouse hovers over the element, and hides immediately when the user\'s mouse leaves. A delay in showing or hiding the tooltip can be added through the properties `enterDelay` and `leaveDelay`, as shown in the Controlled Tooltips demo above.\n\nOn mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the `disableTouchListener` property.\n\n{{"demo": "pages/components/tooltips/DelayTooltips.js"}}\n'},x6SS:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var o=n("mXGw"),i=n.n(o),a=n("pQ8Y"),r=n("O8uh"),l=n("zRBL"),s=n("L5GG"),p=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableFocusListener:!0,title:"Add"},i.a.createElement(r.a,null,"Hover or touch"))),c=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableHoverListener:!0,title:"Add"},i.a.createElement(r.a,null,"Focus or touch"))),m=i.a.createElement(a.a,{item:!0},i.a.createElement(l.a,{disableFocusListener:!0,disableTouchListener:!0,title:"Add"},i.a.createElement(r.a,null,"Hover")));function d(){var e=i.a.useState(!1),t=e[0],n=e[1];function o(){n(!1)}return i.a.createElement("div",null,i.a.createElement(a.a,{container:!0,justify:"center"},p,c,m,i.a.createElement(a.a,{item:!0},i.a.createElement(s.a,{onClickAway:o},i.a.createElement("div",null,i.a.createElement(l.a,{PopperProps:{disablePortal:!0},onClose:o,open:t,disableFocusListener:!0,disableHoverListener:!0,disableTouchListener:!0,title:"Add"},i.a.createElement(r.a,{onClick:function(){n(!0)}},"Click")))))))}},zIHi:function(e,t){e.exports="import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function DisabledTooltips() {\n  return (\n    <Tooltip title=\"You don't have permission to do this\">\n      <span>\n        <Button disabled>A Disabled Button</Button>\n      </span>\n    </Tooltip>\n  );\n}\n"}},[["ZSbK","5d41","9da1"]]]);