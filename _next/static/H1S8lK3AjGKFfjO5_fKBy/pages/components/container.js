(window.webpackJsonp=window.webpackJsonp||[]).push([["49f4"],{"+E4B":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var r=t("mXGw"),o=t.n(r),i=t("0L7K"),a=t("Oy88"),c=t("Uoj6"),s=o.a.createElement(i.a,null);function m(){return o.a.createElement(o.a.Fragment,null,s,o.a.createElement(c.a,{maxWidth:"sm"},o.a.createElement(a.a,{component:"div",style:{backgroundColor:"#cfe8fc",height:"100vh"}})))}},"0dow":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var r=t("mXGw"),o=t.n(r),i=t("e+1t"),a=t("7Fi5"),c=t("fhIK"),s=o.a.createElement(i.a,{req:a,reqSource:c,reqPrefix:"pages/components/container"});function m(){return s}},"2b7v":function(n,e){n.exports='---\ntitle: React Container（容器）组件\ncomponents: Container\n---\n\n# Container（容器）\n\n<p class="description">容器组件会让您页面的内容水平居中。 这是最基本的布局元素。</p>\n\n虽然容器可以嵌套，但大多数布局不需要嵌套的容器。\n\n## Fluid（流体布局）\n\n您可以通过 `maxWidth` 属性的值来设置一个 fluid 容器的最大宽度。\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## 固定大小\n\n通过设置`fixed` 属性，您可以设计固定的大小而不是尝试完全流体布局的视口。 max-width 和当前断点的 min-width 则相同。\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},"2ef6":function(n,e){n.exports='---\ntitle: Componente React para Container\ncomponents: Container\n---\n\n# Container\n\n<p class="description">O container centraliza seu conteúdo horizontalmente. É o elemento de leiaute mais básico.</p>\n\nEnquanto os containers podem ser aninhados, a maioria dos leiautes não necessitam de um container aninhado.\n\n## Fluído\n\nA largura de um container fluído é limitada pelo valor da propriedade `maxWidth`.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixo\n\nSe você preferir projetar um conjunto fixo de tamanhos em vez de tentar acomodar em uma visualização totalmente fluída, você pode definir a propriedade `fixed`. A largura máxima corresponde à largura mínima do ponto de interrupção atual.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},"33QC":function(n,e){n.exports='---\ntitle: Container React component\ncomponents: Container\n---\n\n# Container\n\n<p class="description">The container centers your content horizontally. It\'s the most basic layout element.</p>\n\nWhile containers can be nested, most layouts do not require a nested container.\n\n## Fluid\n\nA fluid container width is bounded by that `maxWidth` property value.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixed\n\nIf you prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport, you can set the `fixed` property. The max-width matches the min-width of the current breakpoint.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},"6o+5":function(n,e){n.exports='---\ntitle: Container Reactコンポーネント\ncomponents: Container\n---\n\n# Container(コンテナ)\n\n<p class="description">コンテナはコンテンツを水平方向に中央揃えにします。 それが最も基本的なレイアウト要素です。</p>\n\nコンテナは入れ子にすることができますが、ほとんどのレイアウトは入れ子になったコンテナを必要としません。\n\n## 可変\n\n可変コンテナの幅は、その `maxWidth` プロパティ値によって制限されます。\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/layout/container/SimpleContainer.js", "iframe": true}}\n\n## 固定\n\n完全に流動的なビューポートに対応するのではなく、固定サイズのセット用に設計したい場合は、 `fixed` プロパティを設定できます。 最大幅は、現在のブレークポイントの最小幅と一致します。\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/layout/container/SimpleContainer.js", "iframe": true}}'},"7Fi5":function(n,e,t){var r={"./FixedContainer.js":"hhnp","./FixedContainer.tsx":"nSnp","./SimpleContainer.js":"anM7","./SimpleContainer.tsx":"+E4B","./container-aa.md":"aIVB","./container-de.md":"EHmZ","./container-es.md":"R73c","./container-fr.md":"33QC","./container-ja.md":"6o+5","./container-pt.md":"2ef6","./container-ru.md":"Kqlz","./container-zh.md":"2b7v","./container.md":"x6m0"};function o(n){var e=i(n);return t(e)}function i(n){var e=r[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}o.keys=function(){return Object.keys(r)},o.resolve=i,n.exports=o,o.id="7Fi5"},EHmZ:function(n,e){n.exports='---\ntitle: Container React Komponente\ncomponents: Container\n---\n\n# Container\n\n<p class="description">Der Container zentriert Ihren Inhalt horizontal. Es ist das grundlegendste Layoutelement.</p>\n\nWährend Container geschachtelt werden können, benötigen die meisten Layouts keinen verschachtelten Container.\n\n## Flexibel\n\nEine Breite des Fluidcontainers wird durch den Wert `maxWidth` begrenzt.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixiert\n\nWenn Sie es vorziehen, für einen festen Satz von Größen zu entwerfen, anstatt zu versuchen, ein vollständig fließendes Ansichtsfenster unterzubringen, können Sie die Eigenschaft `fixed` festlegen. Die maximale Breite stimmt mit der minimalen Breite des aktuellen Haltepunkts überein.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},Kqlz:function(n,e){n.exports='---\ntitle: Container React component\ncomponents: Container\n---\n\n# Container\n\n<p class="description">Container центрирует содержимое по горизонтали. Это базовый элемент всех макетов.</p>\n\nНесмотря на то, что контейнеры могут быть вложенными, большинство макетов не требуют вложенного контейнера.\n\n## Fluid\n\nШирина Fluid Container ограничена значением его свойства `maxWidth`.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixed\n\nЕсли вы предпочитаете разрабатывать с использованием определенного набора размеров вместо адаптивного размещения элементов, вы можете добавить свойство `fixed` к контейнеру. Максимальная ширина соотвествует минимальной ширине текущей точки останова.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},R73c:function(n,e){n.exports='---\ntitle: Container React component\ncomponents: Container\n---\n\n# Container\n\n<p class="description">The container centers your content horizontally. It\'s the most basic layout element.</p>\n\nWhile containers can be nested, most layouts do not require a nested container.\n\n## Fluid\n\nA fluid container width is bounded by that `maxWidth` property value.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixed\n\nIf you prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport, you can set the `fixed` property. The max-width matches the min-width of the current breakpoint.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}'},WVqu:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/container",function(){var n=t("0dow");return{page:n.default||n}}])},Wkgn:function(n,e){n.exports="import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function SimpleContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n      </Container>\n    </React.Fragment>\n  );\n}\n"},aIVB:function(n,e){n.exports='---\ntitle: crwdns89866:0crwdne89866:0\ncomponents: crwdns89868:0crwdne89868:0\n---\n\n# crwdns89870:0crwdne89870:0\n\n<p class="description">crwdns89872:0crwdne89872:0 crwdns89874:0crwdne89874:0</p>\n\ncrwdns89876:0crwdne89876:0\n\n## crwdns89878:0crwdne89878:0\n\ncrwdns89880:0crwdne89880:0\n\n```jsx\ncrwdns89882:0crwdne89882:0\n```\n\ncrwdns89884:0crwdne89884:0\n\n## crwdns89886:0crwdne89886:0\n\ncrwdns89888:0crwdne89888:0 crwdns89890:0crwdne89890:0\n\n```jsx\ncrwdns89892:0crwdne89892:0\n```\n\ncrwdns89894:0crwdne89894:0'},anM7:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var r=t("mXGw"),o=t.n(r),i=t("0L7K"),a=t("Oy88"),c=t("Uoj6"),s=o.a.createElement(i.a,null);function m(){return o.a.createElement(o.a.Fragment,null,s,o.a.createElement(c.a,{maxWidth:"sm"},o.a.createElement(a.a,{component:"div",style:{backgroundColor:"#cfe8fc",height:"100vh"}})))}},cB3e:function(n,e){n.exports="import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function FixedContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container fixed>\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n      </Container>\n    </React.Fragment>\n  );\n}\n"},fhIK:function(n,e,t){var r={"./FixedContainer.js":"jrpz","./FixedContainer.tsx":"cB3e","./SimpleContainer.js":"Wkgn","./SimpleContainer.tsx":"jaGg"};function o(n){var e=i(n);return t(e)}function i(n){var e=r[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}o.keys=function(){return Object.keys(r)},o.resolve=i,n.exports=o,o.id="fhIK"},hhnp:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var r=t("mXGw"),o=t.n(r),i=t("0L7K"),a=t("Oy88"),c=t("Uoj6"),s=o.a.createElement(i.a,null);function m(){return o.a.createElement(o.a.Fragment,null,s,o.a.createElement(c.a,{fixed:!0},o.a.createElement(a.a,{component:"div",style:{backgroundColor:"#cfe8fc",height:"100vh"}})))}},jaGg:function(n,e){n.exports="import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function SimpleContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n      </Container>\n    </React.Fragment>\n  );\n}\n"},jrpz:function(n,e){n.exports="import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function FixedContainer() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container fixed>\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n      </Container>\n    </React.Fragment>\n  );\n}\n"},nSnp:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var r=t("mXGw"),o=t.n(r),i=t("0L7K"),a=t("Oy88"),c=t("Uoj6"),s=o.a.createElement(i.a,null);function m(){return o.a.createElement(o.a.Fragment,null,s,o.a.createElement(c.a,{fixed:!0},o.a.createElement(a.a,{component:"div",style:{backgroundColor:"#cfe8fc",height:"100vh"}})))}},x6m0:function(n,e){n.exports='---\ntitle: Container React component\ncomponents: Container\n---\n\n# Container\n\n<p class="description">The container centers your content horizontally. It\'s the most basic layout element.</p>\n\nWhile containers can be nested, most layouts do not require a nested container.\n\n## Fluid\n\nA fluid container width is bounded by that `maxWidth` property value.\n\n```jsx\n<Container maxWidth="sm">\n```\n\n{{"demo": "pages/components/container/SimpleContainer.js", "iframe": true}}\n\n## Fixed\n\nIf you prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport, you can set the `fixed` property.\nThe max-width matches the min-width of the current breakpoint.\n\n```jsx\n<Container fixed>\n```\n\n{{"demo": "pages/components/container/FixedContainer.js", "iframe": true}}\n'}},[["WVqu","5d41","9da1"]]]);