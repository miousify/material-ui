(window.webpackJsonp=window.webpackJsonp||[]).push([["54ee"],{"1W9G":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/grid",function(){var e=a("qN1k");return{page:e.default||e}}])},"2l3S":function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function ComplexGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  Standard license\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  Full resolution 1920x1080 • JPEG\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  ID: 1030114\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\n                  Remove\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">$19.00</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"},"2pU/":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("VPks"),l=a("pQ8Y"),c=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}})});function d(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,{container:!0,spacing:3},r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(o.a,{className:e.paper},"xs")),r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(o.a,{className:e.paper},"xs")),r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(o.a,{className:e.paper},"xs"))),r.a.createElement(l.a,{container:!0,spacing:3},r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(o.a,{className:e.paper},"xs")),r.a.createElement(l.a,{item:!0,xs:6},r.a.createElement(o.a,{className:e.paper},"xs=6")),r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(o.a,{className:e.paper},"xs"))))}},"5m1b":function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1),\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nexport default function CSSGrid() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Material-UI Grid:\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={8}>\n          <Paper className={classes.paper}>xs=8</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>xs=4</Paper>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Typography variant=\"subtitle1\" gutterBottom>\n        CSS Grid Layout:\n      </Typography>\n      <div className={classes.container}>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 8' }}>\n          <Paper className={classes.paper}>xs=8</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 4' }}>\n          <Paper className={classes.paper}>xs=4</Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n"},"6HMT":function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(12, 1fr)',\n      gridGap: theme.spacing(3),\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      whiteSpace: 'nowrap',\n      marginBottom: theme.spacing(1),\n    },\n    divider: {\n      margin: theme.spacing(2, 0),\n    },\n  }),\n);\n\nexport default function CSSGrid() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Material-UI Grid:\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={8}>\n          <Paper className={classes.paper}>xs=8</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>xs=4</Paper>\n        </Grid>\n      </Grid>\n      <Divider className={classes.divider} />\n      <Typography variant=\"subtitle1\" gutterBottom>\n        CSS Grid Layout:\n      </Typography>\n      <div className={classes.container}>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 3' }}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 8' }}>\n          <Paper className={classes.paper}>xs=8</Paper>\n        </div>\n        <div style={{ gridColumnEnd: 'span 4' }}>\n          <Paper className={classes.paper}>xs=4</Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n"},"7RiP":function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("Rbzu"),s=a("mXGw"),o=a.n(s),l=a("PDtE"),c=a("ADfD"),d=a("Hg0Q"),m=a("XpU0"),p=o.a.forwardRef(function(e,n){var a=e.children,i=e.classes,s=e.className,m=e.component,p=void 0===m?"label":m,u=(e.disabled,e.error,e.filled,e.focused,e.required,Object(r.a)(e,["children","classes","className","component","disabled","error","filled","focused","required"])),g=Object(d.a)(),f=Object(c.a)({props:e,muiFormControl:g,states:["required","focused","disabled","error","filled"]});return o.a.createElement(p,Object(t.default)({className:Object(l.a)(i.root,s,f.disabled&&i.disabled,f.error&&i.error,f.filled&&i.filled,f.focused&&i.focused,f.required&&i.required),ref:n},u),a,f.required&&o.a.createElement("span",{className:Object(l.a)(i.asterisk,f.error&&i.error)}," ","*"))});n.a=Object(m.default)(function(e){return{root:Object(i.a)({color:e.palette.text.secondary},e.typography.body1,{lineHeight:1,padding:0,"&$focused":{color:e.palette.primary["light"===e.palette.type?"dark":"light"]},"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),focused:{},disabled:{},error:{},filled:{},required:{},asterisk:{"&$error":{color:e.palette.error.main}}}},{name:"MuiFormLabel"})(p)},"8pUM":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return x});var t=a("mXGw"),r=a.n(t),i=a("VPks"),s=a("yZEQ"),o=a("WLtd"),l=a("pQ8Y"),c=a("oSsn"),d=a("Oy88"),m=Object(s.a)(function(e){return Object(o.a)({root:{flexGrow:1,overflow:"hidden",padding:e.spacing(0,3)},paper:{maxWidth:400,margin:"".concat(e.spacing(1),"px auto"),padding:e.spacing(2)}})}),p="Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. ",u=r.a.createElement(l.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(l.a,{item:!0},r.a.createElement(c.a,null,"W")),r.a.createElement(l.a,{item:!0,xs:!0,zeroMinWidth:!0},r.a.createElement(d.a,{noWrap:!0},p))),g=r.a.createElement(l.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(l.a,{item:!0},r.a.createElement(c.a,null,"W")),r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(d.a,{noWrap:!0},p))),f=r.a.createElement(l.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(l.a,{item:!0},r.a.createElement(c.a,null,"W")),r.a.createElement(l.a,{item:!0,xs:!0},r.a.createElement(d.a,null,p)));function x(){var e=m();return r.a.createElement("div",{className:e.root},r.a.createElement(i.a,{className:e.paper},u),r.a.createElement(i.a,{className:e.paper},g),r.a.createElement(i.a,{className:e.paper},f))}},AMAy:function(e,n,a){"use strict";function t(e){return e}a.d(n,"a",function(){return t})},AQ7e:function(e,n){e.exports='---\ntitle: Grid React component\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.</p>\n\nThe [grid](https://material.io/design/layout/responsive-layout-grid.html) creates visual consistency between layouts while allowing flexibility across a wide variety of designs.\nMaterial Design’s responsive UI is based on a 12-column grid layout.\n\n## How it works\n\nThe grid system is implemented with the `Grid` component:\n\n- It uses [CSS’s Flexible Box module](https://www.w3.org/TR/css-flexbox-1/) for high flexibility.\n- There are two types of layout: *containers* and *items*.\n- Item widths are set in percentages, so they’re always fluid and sized relative to their parent element.\n- Items have padding to create the spacing between individual items.\n- There are five grid breakpoints: xs, sm, md, lg, and xl.\n\nIf you are **new to or unfamiliar with flexbox**, we encourage you to read this [CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) guide.\n\n## Spacing\n\nThe responsive grid focuses on consistent spacing widths, rather than column width.\nMaterial Design margins and columns follow an **8px** square baseline grid.\nThe spacing property is an integer between 0 and 10 inclusive.\nBy default, the spacing between two grid items follows a linear function: `output(spacing) = spacing * 8px`, e.g. `spacing={2}` creates a 16px wide gap.\n\nThis output transformation function can be customized [using the theme](/customization/spacing/).\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Fluid grids\n\nFluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.\n\n### Basic grid\n\nThe column widths apply at all breakpoints (i.e. `xs` and up).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Grid with breakpoints\n\nSome columns have multiple widths defined, causing the layout to change at the defined breakpoint.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Interactive\n\nBelow is an interactive demo that lets you explore the visual results of the different settings:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Auto-layout\n\nThe Auto-layout makes the *items* equitably share the available space.\nThat also means you can set the width of one *item* and the others will automatically resize around it.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Complex Grid\n\nThe following demo doesn\'t follow the Material Design specification, but illustrates how the grid can be used to build complex layouts.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Nested Grid\n\nThe `container` and `item` properties are two independent booleans. They can be combined.\n\n> A flex **container** is the box generated by an element with a computed display of `flex` or `inline-flex`. In-flow children of a flex container are called flex **items** and are laid out using the flex layout model.\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Limitations\n\n### Negative margin\n\nThere is one limitation with the negative margin we use to implement the spacing between items.\nA horizontal scroll will appear if a negative margin goes beyond the `<body>`.\nThere are 3 available workarounds:\n1. Not using the spacing feature and implementing it in user space `spacing={0}` (default).\n2. Applying padding to the parent with at least half the spacing value applied to the child:\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n3. Adding `overflow-x: hidden;` to the parent.\n\n### white-space: nowrap;\n\nThe initial setting on flex items is `min-width: auto`.\nIt\'s causing a positioning conflict when the children is using `white-space: nowrap;`.\nYou can experience the issue with:\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nIn order for the item to stay within the container you need to set `min-width: 0`.\nIn practice, you can set the `zeroMinWidth` property:\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nThough the `Grid` component has a `direction` property that allows values of `row`, `row-reverse`, `column`, and `column-reverse`,\nthere are some features that are not supported within `column` and `column-reverse` containers.\nThe properties which define the number of grids the component will use for a given breakpoint\n(`xs`, `sm`, `md`, `lg`, and `xl`) are focused on controlling width\nand do **not** have similar effects on height within `column` and `column-reverse` containers.\nIf used within `column` or `column-reverse` containers, these properties may have undesirable effects on the width of the `Grid` elements.\n\n## CSS Grid Layout\n\nMaterial-UI doesn\'t provide any CSS Grid functionality itself, but as seen below you can easily use CSS Grid to layout your pages.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}\n'},"Ay+m":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("VPks"),o=a("pQ8Y"),l=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}}});function c(){var e=l();return r.a.createElement("div",{className:e.root},r.a.createElement(o.a,{container:!0,spacing:3},r.a.createElement(o.a,{item:!0,xs:12},r.a.createElement(s.a,{className:e.paper},"xs=12")),r.a.createElement(o.a,{item:!0,xs:12,sm:6},r.a.createElement(s.a,{className:e.paper},"xs=12 sm=6")),r.a.createElement(o.a,{item:!0,xs:12,sm:6},r.a.createElement(s.a,{className:e.paper},"xs=12 sm=6")),r.a.createElement(o.a,{item:!0,xs:6,sm:3},r.a.createElement(s.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(o.a,{item:!0,xs:6,sm:3},r.a.createElement(s.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(o.a,{item:!0,xs:6,sm:3},r.a.createElement(s.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(o.a,{item:!0,xs:6,sm:3},r.a.createElement(s.a,{className:e.paper},"xs=6 sm=3"))))}},BT9p:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=a("XpU0"),c=s.a.forwardRef(function(e,n){var a=e.classes,i=e.className,l=e.row,c=void 0!==l&&l,d=Object(r.a)(e,["classes","className","row"]);return s.a.createElement("div",Object(t.default)({className:Object(o.a)(a.root,i,c&&a.row),ref:n},d))});n.a=Object(l.default)({root:{display:"flex",flexDirection:"column",flexWrap:"wrap"},row:{flexDirection:"row"}},{name:"MuiFormGroup"})(c)},CEEh:function(e,n){e.exports='---\ntitle: Grid コンポーネント\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">Material Designのレスポンシブレイアウトグリッドは、画面サイズと向きに適応し、レイアウト間の一貫性を保証します。</p>\n\n[grid](https://material.io/design/layout/responsive-layout-grid.html) は、レイアウト間の視覚的な一貫性を実現しながら、さまざまなデザインでの柔軟性を可能にします。 Material DesignのレスポンシブUIは12列のグリッドレイアウトに基づいています。\n\n## 仕組み\n\nグリッドシステムは `Grid` コンポーネントで実装されています。\n\n- 高い柔軟性のために [CSSのFlexible Boxモジュール](https://www. w3. org/TR/css-flexbox-1/) を使用します。\n- レイアウトには* containers * と * items*の2種類あります 。\n- アイテムの幅はパーセンテージで設定されているので、それらは常に親要素に対して流動的でサイズが決まっています。\n- アイテムには、個々のアイテム間の間隔を空けるための余白があります。\n- Xs、sm、md、lg、およびxlの5つのグリッドブレークポイントがあります。\n\n**flexboxに不慣れ**な場合、 [CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) を読むことをおすすめします。\n\n## Spacing\n\nレスポンシブグリッドは、列幅ではなく、一貫した間隔幅に焦点を当てています。 材料設計の余白と列は **8px** の四角いベースライングリッドに従います。 Spacingプロパティは、0から10までの整数です。 デフォルトでは、2つの格子項目間の間隔が線形関数に従う： `output(spacing) = spacing * 8px`、例えば `spacing={2}`では16pxに広いギャップを作成します。\n\nこの出力変換関数は、[テーマを使う](/customization/spacing/)ことでカスタマイズできます。\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Fluid grids\n\nFluid gridsでは、コンテンツの尺度とサイズを変更する列を使用します。 流体グリッドのレイアウトでは、ブレークポイントを使用して、レイアウトを大幅に変更する必要があるかどうかを判断できます。\n\n### Basic grid\n\n列幅はすべてのブレークポイント（つまり `xs` ）に適用されます。\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### ブレークポイント付きGrid\n\n一部の列では複数の幅が定義されているため、定義されたブレークポイントでレイアウトが変更されます。\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## インタラクティブ\n\n以下は、さまざまな設定の視覚的な結果を調べることができるインタラクティブなデモです。\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## 自動レイアウト\n\n自動レイアウトにより、 *items* が使用可能なスペースを均等に共有します。 それはまた、あなたが1つの *item* 幅を設定することができ、他のものはそれの周りに自動的にサイズ変更されることを意味します。\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## 複雑なグリッド\n\n以下のデモは、Material Designには従っていませんが、グリッドを使用して複雑なレイアウトを構築する方法を示しています。\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Nested Grid\n\n`container`プロパティと`item`プロパティは、それぞれ独立したブール値です。 それらは組み合わせることができます。\n\n> Flex ** container ** は、 `flex` または `inline-flex`を持つ要素によって生成されたボックスです。 フレックスコンテナのインフローの子は、flex ** items ** と呼ばれ、flexレイアウトモデルを使用してレイアウトされます。\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## 制限事項\n\n### Negative margin\n\n項目間の間隔を実装するために使用する負のマージンには1つ制限があります。 負のマージンが `<body>`を超えると水平スクロールが表示されます。 回避策は3つあります。\n\n1. スペーシング機能を使用し、ユーザ空間でそれを実装していない ` spacing ={0}` （デフォルト）。\n2. 子に適用された間隔値の少なくとも半分を使用して、親にパディングを適用します。\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. `overflow-x: hidden;`を親に追加する\n\n### white-space: nowrap;\n\nフレックスアイテムの初期設定は `min-width：auto`です。 子要素が`white-space: nowrap;`を使っているときに、位置のコンフリクトが起きます。 この問題は、次の場合に発生します:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nアイテムがコンテナ内に収まるようにするには、 `min-width：0`を設定する必要があります。 実際には、 `zeroMinWidth` プロパティを設定できます。\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\n`Grid`コンポーネントは`row`, `row-reverse`, `column`, `column-reverse`のいずれかの値を持つ`direction`プロパティを持っています。 しかし、` column `および` column-reverse `コンテナではサポートされていない機能がいくつかあります。 コンポーネントは、所与のブレークポイントに使用するグリッドの数定義するプロパティ （`Xs`、 `、Sm`、 `Md`、 `Lg`、及び `Xl`）幅の制御に焦点を当てている と実行 しない ` column ` および ` column-reverse` コンテナ内の高さにも同様の影響があります。 ` column ` または `column-reverse` コンテナ内で使用された場合、これらのプロパティは `Grid` 要素の幅に望ましくない影響を与える可能性があります。\n\n## CSS Grid Layout\n\nMaterial-UI自体はCSSグリッド機能自体を提供しませんが、以下に示すように、CSSグリッドを使用してページをレイアウトすることは簡単にできます。\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},DHy7:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return g});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("pQ8Y"),l=a("VPks"),c=a("Oy88"),d=a("7QLS"),m=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{padding:e.spacing(2),margin:"auto",maxWidth:500},image:{width:128,height:128},img:{margin:"auto",display:"block",maxWidth:"100%",maxHeight:"100%"}})}),p=r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(c.a,{gutterBottom:!0,variant:"subtitle1"},"Standard license"),r.a.createElement(c.a,{variant:"body2",gutterBottom:!0},"Full resolution 1920x1080 • JPEG"),r.a.createElement(c.a,{variant:"body2",color:"textSecondary"},"ID: 1030114")),u=r.a.createElement(o.a,{item:!0},r.a.createElement(c.a,{variant:"subtitle1"},"$19.00"));function g(){var e=m();return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,{className:e.paper},r.a.createElement(o.a,{container:!0,spacing:2},r.a.createElement(o.a,{item:!0},r.a.createElement(d.a,{className:e.image},r.a.createElement("img",{className:e.img,alt:"complex",src:"/static/images/grid/complex.jpg"}))),r.a.createElement(o.a,{item:!0,xs:12,sm:!0,container:!0},r.a.createElement(o.a,{item:!0,xs:!0,container:!0,direction:"column",spacing:2},p,r.a.createElement(o.a,{item:!0},r.a.createElement(c.a,{variant:"body2",style:{cursor:"pointer"}},"Remove"))),u))))}},Dzyk:function(e,n){e.exports='---\ntitle: Composant React Grid\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">Le composant responsive Grid de Material Design s\'adapte à la taille et à l\'orientation de l\'écran, garantissant ainsi la cohérence entre les différents agencements.</p>\n\n[Grid](https://material.io/design/layout/responsive-layout-grid.html) créé une cohérence visuelle entre les agencements tout en permettant une certaine flexibilité à travers une grande variété de modèles. L’UI responsive de Material Design est basée sur une grille de 12 colonnes.\n\n## Comment ça marche\n\nLe système de grille est implémenté avec le composant `Grid`:\n\n- Il utilise le [module Flexible Box CSS](https://www.w3.org/TR/css-flexbox-1/) pour une grande flexibilité.\n- Il y a deux types de mise en page : *conteneurs* et *éléments*.\n- La largeur des éléments est définie en pourcentage, ils sont donc toujours fluides et dimensionnés par rapport à leur élément parent.\n- Les éléments ont un rembourrage (padding) pour créer l\'espacement entre les éléments individuels.\n- Il existe cinq points de rupture de grille: xs, sm, md, lg et xl.\n\nSi vous êtes **nouveau ou peu familiers avec FlexBox**, nous vous encourageons à lire ce guide [CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n\n## Ecartement\n\nLa grille responsive se concentre sur les largeurs d\'espacement cohérentes plutôt que sur la largeur des colonnes. Les marges du Material Design et les colonnes suivent un grille carrée de **8px**. La propriété spacing est un entier compris entre 0 et 10 inclus. Par défaut, l\'espacement entre deux éléments de la grille suit une fonction linéaire: `sortie (espacement) = espacement * 8px`, par exemple `espacement ={2}` crée un intervalle large de 16px.\n\nCette fonction de transformation de sortie peut être personnalisée [à l\'aide du thème](/customization/spacing/).\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Les grilles fluides\n\nFluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.\n\n### Grille de base\n\nLa largeur des colonnes s’applique à tous les points de rupture (c.-à-d. `xs` et plus).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Grille avec points d\'arrêt\n\nPlusieurs colonnes ont plusieurs largeurs définies, ce qui entraîne une modification de la présentation au point de rupture défini.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Interactif\n\nVous trouverez ci-dessous une démo interactive vous permettant d\'explorer les résultats visuels des différents paramètres:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Mise en page automatique\n\nThe Auto-layout makes the *items* equitably share the available space. That also means you can set the width of one *item* and the others will automatically resize around it.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Grille complexe\n\nLa démo suivante ne suit pas la spécification Material Design, mais illustre comment la grille peut être utilisée pour créer des mises en page complexes.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Grille imbriquée\n\nThe `container` and `item` properties are two independent booleans. They can be combined.\n\n> Un **container** flex est la boîte générée par un élément avec un affichage calculé de `flex` ou `inline-flex`. Les enfants entrants d\'un conteneur flex sont appelés éléments** flex **et sont disposés à l\'aide du modèle d\'agencement Flex.\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Limites\n\n### Marge négative\n\nIl existe une limitation à la marge négative utilisée pour mettre en œuvre l\'espacement entre les éléments. Un défilement horizontal apparaîtra si une marge négative dépasse le `<body>`. There are 3 available workarounds:\n\n1. Ne pas utiliser la fonctionnalité d\'espacement et l\'implémenter dans l\'espace utilisateur `spacing={0}` (par défaut).\n2. Appliquer un rembourrage (padding) au parent avec au moins la moitié de la valeur d\'espacement appliquée à l\'enfant:\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. Ajouter `overflow-x: hidden;` au parent.\n\n### white-space: nowrap;\n\nThe initial setting on flex items is `min-width: auto`. It\'s causing a positioning conflict when the children is using `white-space: nowrap;`. You can experience the issue with:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nIn order for the item to stay within the container you need to set `min-width: 0`. In practice, you can set the `zeroMinWidth` property:\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nBien que le composant `Grid` ait une propriété `direction` qui autorise les valeurs de `rows`, `row-reverse`, `column` et `column-reverse`, certaines fonctionnalités ne sont pas prises en charge dans les containers `rows` et `column-reverse`. Les propriétés qui définissent le nombre de grilles que le composant utilisera pour un point d\' arrêt donné (`xs`, `sm`, `md`, `lg`et `xl`) sont centrées sur le contrôle de la largeur et n\'ont **pas** d\'effets similaires sur la hauteur dans les conteneurs `column` et `column-reverse`. Si elle est utilisée à l\'intérieur des containers `column` ou `column-reverse` , ces propriétés peuvent avoir des effets indésirables sur la largeur des éléments `Grid` .\n\n## CSS Grid Layout\n\nMaterial-UI ne fournit aucune fonctionnalité de grille CSS, mais comme illustré ci-dessous, vous pouvez facilement utiliser CSS Grid pour mettre en page vos pages.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},FlBp:function(e,n){e.exports='---\ntitle: React Grid（栅格）组件\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">Material Design 响应式布局的栅格可适应屏幕大小和方向，确保布局之间的一致性。</p>\n\n[Grid](https://material.io/design/layout/responsive-layout-grid.html): 栅格(Grid)组件能确保不同布局间的视觉一致性，同时在众多不同设计中保持灵活性。 Material Design 的响应式 UI 是基于12列的栅格布局。\n\n## 它是如何工作的\n\n栅格系统使用 `Grid` 组件实现：\n\n- 为了达到高度的灵活性，它运用了用 [CSS 的 Flexible Box 模块](https://www.w3.org/TR/css-flexbox-1/) 。\n- 它有两种类型的布局： *containers* ， *items*。\n- 项目宽度以百分比设置，因此它们总是相对于其父元素是流动的和变换大小的。\n- 子项自带 padding 来和其他元素之间产生间距。\n- 有五个网格断点：xs，sm，md，lg 和 xl。\n\n如果你**对 flexbox 不熟悉**，我们建议你阅读：[CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) 手册。\n\n## Spacing（间距）\n\n响应式栅格侧重于一致的间距宽度，而不是列宽。 Material design 外边距和列遵循** 8px **的方块形基线栅格。 spacing 属性设置为一个在0和10之间的整数，且并包括0和10。 默认情况下，两个网格项之间的间距遵循这样的线性函数： `output(spacing) = spacing * 8px`，例如 `spacing={2}` 会创建一个 16px 的宽间距。\n\n通过[使用主题](/customization/spacing/)，该变换函数的输出是可定制的。\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Fluid grids（流式格网）\n\n流体网格使用的列可以缩放和调整内容的大小。 流体网格的布局可以通过使用断点来确定布局是否需要显式更新。\n\n### 基本栅格\n\n列宽适用于所有断点（即 `xs</code 及大于其的值）。</p>\n\n<p>{{"demo": "pages/components/grid/CenteredGrid.js"}}</p>\n\n<h3>有断点的栅格</h3>\n\n<p>一些列会定义多种宽度，这会导致布局会根据定义的端点来改变其宽度。</p>\n\n<p>{{"demo": "pages/components/grid/FullWidthGrid.js"}}</p>\n\n<h2>交互式</h2>\n\n<p>下面是一个交互式的演示，您可让探索不同设置下的视觉结果：</p>\n\n<p>{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}</p>\n\n<h2>自动布局</h2>\n\n<p>自适应布局使得 <em>项</em> 可以平摊使用空间。\n这也意味着你可以显式设置一个 <em>项</em> 的宽度，而使其他项的大小自动进行调整。</p>\n\n<p>{{"demo": "pages/components/grid/AutoGrid.js"}}</p>\n\n<h2>复杂的栅格</h2>\n\n<p>以下演示不遵循 Material Design 规范，但说明了如何使用栅格构建复杂的布局。</p>\n\n<p>{{"demo": "pages/components/grid/ComplexGrid.js"}}</p>\n\n<h2>嵌套栅格</h2>\n\n<p><code>container`和` item `属性分别是两个独立的布尔值，它们可以嵌套使用。 它们可以组合起来使用。\n\n> 一个 flex **容器** 是通过将 `flex` 或 `inline-flex`的计算显示赋予给一个元素而生成的。 Flex 容器的流入子容器称为 flex **items**， 它们使用 flex 布局模型进行布局。\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## 局限性\n\n### 负边距\n\n当我们使用负边距来实现项目之间的间距的时候，会有一个限制。 如果负边距超出`<body>`元素，则会出现水平滚动。 这里有3种可用的解决方案：\n\n1. 不使用 spacing 的特性并且设置成默认的`spacing={0}`\n2. 将填充应用于父级元素，并且将至少一半的间距值赋予子级元素：\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. 3。将父元素设置为 `overflow-x: hidden;`。\n\n### white-space: nowrap;\n\n弹性布局元素的默认属性值为 `min-width：auto`。 当子元素使用 `white-space: nowrap;`时会出现布局冲突。 您可以从以下内容看到这个问题：\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\n为了使项留在容器内，您需要设置 `min-width: 0`。 实际上，您也可以通过设置 `zeroMinWidth` 属性解决问题：\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\n虽然 `Grid` 组件有 `direction` 属性，所以组件能用这些的值：`row`，`row-reverse`，`column`，和`column-reverse`，但是有些功能是不被 `column` 和`column-reverse` 容器支持的。 一些定义了组件栅格数量的属性会用于一个特定的断点：（ `xs`，`sm`，`md`，`lg` 以及 `xl`) ， 而这这些属性主要来控制宽度，并且**不会**再 `column` 和 `column-reverse` 内产生对高度相同的效果。 如过在 `column` 或者 `column-reverse` 容器内使用这些属性,，将会对 `Grid` 元素产生意想不到的效果。\n\n## CSS 栅格布局\n\nMaterial-UI 本身不提供任何 CSS Grid 功能，但如下所示，您可以轻松使用 CSS Grid 来布局您的页面。\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},Hg0Q:function(e,n,a){"use strict";a.d(n,"a",function(){return s});var t=a("mXGw"),r=a.n(t),i=a("zpLS");function s(){return r.a.useContext(i.a)}},HiUD:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=(a("FIWN"),a("BT9p")),l=a("c1Jj"),c=a("o5em"),d=s.a.forwardRef(function(e,n){var a=e.actions,i=e.children,d=e.name,m=e.value,p=e.onChange,u=Object(r.a)(e,["actions","children","name","value","onChange"]),g=s.a.useRef(null),f=s.a.useRef(null!=m).current,x=s.a.useState(function(){return f?null:e.defaultValue}),h=x[0],v=x[1];s.a.useImperativeHandle(a,function(){return{focus:function(){var e=g.current.querySelector("input:not(:disabled):checked");e||(e=g.current.querySelector("input:not(:disabled)")),e&&e.focus()}}},[]),s.a.useEffect(function(){},[m,f]);var y={name:d,onChange:function(e){f||v(e.target.value),p&&p(e,e.target.value)},value:f?m:h},G=Object(l.c)(n,g);return s.a.createElement(o.a,Object(t.default)({role:"radiogroup",ref:G},u),s.a.createElement(c.a.Provider,{value:y},i))});n.a=d},Hm5f:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("pQ8Y"),o=a("7RiP"),l=a("Lqxv"),c=a("HiUD"),d=a("rkid"),m=a("VPks"),p=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{height:140,width:100},control:{padding:e.spacing(2)}}}),u=r.a.createElement(o.a,null,"spacing"),g=r.a.createElement(d.a,null);function f(){var e=r.a.useState(2),n=e[0],a=e[1],t=p();return r.a.createElement(s.a,{container:!0,className:t.root,spacing:2},r.a.createElement(s.a,{item:!0,xs:12},r.a.createElement(s.a,{container:!0,justify:"center",spacing:n},[0,1,2].map(function(e){return r.a.createElement(s.a,{key:e,item:!0},r.a.createElement(m.a,{className:t.paper}))}))),r.a.createElement(s.a,{item:!0,xs:12},r.a.createElement(m.a,{className:t.control},r.a.createElement(s.a,{container:!0},r.a.createElement(s.a,{item:!0},u,r.a.createElement(c.a,{name:"spacing","aria-label":"spacing",value:n.toString(),onChange:function(e,n){a(Number(n))},row:!0},[0,1,2,3,4,5,6,7,8,9,10].map(function(e){return r.a.createElement(l.a,{key:e,value:e.toString(),control:g,label:e.toString()})})))))))}},IZaK:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},Ir1E:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return g});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("Oy88"),l=a("VPks"),c=a("FAXT"),d=a("pQ8Y"),m=Object(i.a)(function(e){return Object(s.a)({container:{display:"grid",gridTemplateColumns:"repeat(12, 1fr)",gridGap:e.spacing(3)},paper:{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary,whiteSpace:"nowrap",marginBottom:e.spacing(1)},divider:{margin:e.spacing(2,0)}})}),p=r.a.createElement(o.a,{variant:"subtitle1",gutterBottom:!0},"Material-UI Grid:"),u=r.a.createElement(o.a,{variant:"subtitle1",gutterBottom:!0},"CSS Grid Layout:");function g(){var e=m();return r.a.createElement("div",null,p,r.a.createElement(d.a,{container:!0,spacing:3},r.a.createElement(d.a,{item:!0,xs:3},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement(d.a,{item:!0,xs:3},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement(d.a,{item:!0,xs:3},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement(d.a,{item:!0,xs:3},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement(d.a,{item:!0,xs:8},r.a.createElement(l.a,{className:e.paper},"xs=8")),r.a.createElement(d.a,{item:!0,xs:4},r.a.createElement(l.a,{className:e.paper},"xs=4"))),r.a.createElement(c.a,{className:e.divider}),u,r.a.createElement("div",{className:e.container},r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(l.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 8"}},r.a.createElement(l.a,{className:e.paper},"xs=8")),r.a.createElement("div",{style:{gridColumnEnd:"span 4"}},r.a.createElement(l.a,{className:e.paper},"xs=4"))))}},Jflp:function(e,n){e.exports='---\ntitle: React-компонент Сетка\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">Сетка адаптивного макета Material Design адаптируется к размеру экрана и ориентации, обеспечивая согласованность макетов.</p>\n\n[Сетка](https://material.io/design/layout/responsive-layout-grid.html) создает визуальную согласованность между макетами, позволяя гибко адаптироваться к разнообразным дизайнам. Адаптивный пользовательский интерфейс Material Design основан на сетке с 12 колонками.\n\n## Как это работает\n\nСистема сетки реализована с помощью компонента `Grid`:\n\n- Она использует [модуль Flexible Box CSS](https://www.w3.org/TR/css-flexbox-1/) для повышеной гибкости.\n- Существует два типа макетов: *контейнеры* и *элементы*.\n- Ширина элементов задается в процентах, поэтому они всегда гибко изменяют свой размер относительно родительского элемента.\n- Элементы имеют отступы для создания промежутков между отдельными элементами.\n- Существует пять контрольных точек прерывания сетки: xs, sm, md, lg и xl.\n\nIf you are **new to or unfamiliar with flexbox**, we encourage you to read this [CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) guide.\n\n## Интервал\n\nСмысл адаптивной сетки не в равной ширине столбцов, а в равной ширине интервалов между ними. В Material Design величина отступов и ширина столбцов привязаны к базовой сетке с шагом в **8px**. Свойство `spacing` может принимать целочисленные значения от 0 до 10 включительно. По умолчанию расстояние между соседними элементами (GridItem) задано линейной функцией: `output(spacing) = spacing * 8px`, т.е. `spacing={2}` устанавливает значение интервала 16px.\n\nПоведение функции `output` можно изменить, [отредактировав тему](/customization/spacing/).\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Адаптивные сетки\n\nFluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.\n\n### Базовая сетка\n\nШирина столбца меняется во всех точках прерывания (от `xs` и выше).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Сетка с точками прерывания\n\nНекоторые столбцы имеют несколько значений ширины, что приводит к изменению макета в определенной точке прерывания.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Интерактивность\n\nНиже приведен интерактивный пример, который демонстрирует результаты различных настроек сетки:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Авто-разметка\n\nThe Auto-layout makes the *items* equitably share the available space. That also means you can set the width of one *item* and the others will automatically resize around it.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Сложная сетка\n\nСледующая демонстрация не соответствует спецификации Material Design, но иллюстрирует, как сетка может использоваться для создания сложных макетов.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Вложенная сетка\n\nThe `container` and `item` properties are two independent booleans. They can be combined.\n\n> Flex **контейнер** представляет собой блок, созданный элементом с вычисляемым свойством display `flex` или `inline-flex`. Дочерние элементы flex контейнера называются flex **элементы** и размещаются используя flex-модель.\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Ограничения\n\n### Отрицательный margin\n\nЕсть одно ограничение с отрицательным margin, которое мы используем для добавления расстояния между элементами. Появится горизонтальная прокрутка, если отрицательный margin выходит за пределы `<body>`. There are 3 available workarounds:\n\n1. Не использовать отступы и не реализовывать их в пространстве пользователя. `spacing={0}` (по умолчанию).\n2. Применение внутренних отступов (padding) к родителю с использованием, как минимум, половины значения отступа, имеющегося у дочернего элемента:\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. Добавление `overflow-x: hidden;` к родителю.\n\n### white-space: nowrap;\n\nThe initial setting on flex items is `min-width: auto`. It\'s causing a positioning conflict when the children is using `white-space: nowrap;`. You can experience the issue with:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nIn order for the item to stay within the container you need to set `min-width: 0`. In practice, you can set the `zeroMinWidth` property:\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nThough the `Grid` component has a `direction` property that allows values of `row`, `row-reverse`, `column`, and `column-reverse`, there are some features that are not supported within `column` and `column-reverse` containers. The properties which define the number of grids the component will use for a given breakpoint (`xs`, `sm`, `md`, `lg`, and `xl`) are focused on controlling width and do **not** have similar effects on height within `column` and `column-reverse` containers. If used within `column` or `column-reverse` containers, these properties may have undesirable effects on the width of the `Grid` elements.\n\n## CSS макет сетки\n\nMaterial-UI doesn\'t provide any CSS Grid functionality itself, but as seen below you can easily use CSS Grid to layout your pages.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},Lqxv:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=a("Hg0Q"),c=a("XpU0"),d=a("Oy88"),m=a("GbnF"),p=s.a.forwardRef(function(e,n){e.checked;var a=e.classes,i=e.className,c=e.control,p=e.disabled,u=(e.inputRef,e.label),g=e.labelPlacement,f=void 0===g?"end":g,x=(e.name,e.onChange,e.value,Object(r.a)(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),h=Object(l.a)(),v=p;void 0===v&&void 0!==c.props.disabled&&(v=c.props.disabled),void 0===v&&h&&(v=h.disabled);var y={disabled:v};return["checked","name","onChange","value","inputRef"].forEach(function(n){void 0===c.props[n]&&void 0!==e[n]&&(y[n]=e[n])}),s.a.createElement("label",Object(t.default)({className:Object(o.a)(a.root,i,"end"!==f&&a["labelPlacement".concat(Object(m.a)(f))],v&&a.disabled),ref:n},x),s.a.cloneElement(c,y),s.a.createElement(d.a,{component:"span",className:Object(o.a)(a.label,v&&a.disabled)},u))});n.a=Object(c.default)(function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}},{name:"MuiFormControlLabel"})(p)},NDL8:function(e,n,a){var t={"./AutoGrid.js":"TdrH","./AutoGrid.tsx":"OOh+","./AutoGridNoWrap.js":"Ri0p","./AutoGridNoWrap.tsx":"v/TQ","./CSSGrid.js":"5m1b","./CSSGrid.tsx":"6HMT","./CenteredGrid.js":"IZaK","./CenteredGrid.tsx":"yFb9","./ComplexGrid.js":"2l3S","./ComplexGrid.tsx":"mUWf","./FullWidthGrid.js":"Q6gz","./FullWidthGrid.tsx":"YMKp","./InteractiveGrid.js":"hhTU","./InteractiveGrid.tsx":"lbM1","./NestedGrid.js":"uWWw","./NestedGrid.tsx":"yR+m","./SpacingGrid.js":"XXb4","./SpacingGrid.tsx":"fcL8"};function r(e){var n=i(e);return a(n)}function i(e){var n=t[e];if(!(n+1)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n}r.keys=function(){return Object.keys(t)},r.resolve=i,e.exports=r,r.id="NDL8"},Nulz:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=(a("FIWN"),a("imrm")),c=a("XpU0"),d=a("GbnF"),m=a("c1Jj"),p=a("zpLS"),u=s.a.forwardRef(function(e,n){var a=e.children,i=e.classes,c=e.className,u=e.component,g=void 0===u?"div":u,f=e.disabled,x=void 0!==f&&f,h=e.error,v=void 0!==h&&h,y=e.fullWidth,G=void 0!==y&&y,w=e.hiddenLabel,b=void 0!==w&&w,E=e.margin,S=void 0===E?"none":E,N=e.required,j=void 0!==N&&N,P=e.variant,C=void 0===P?"standard":P,k=Object(r.a)(e,["children","classes","className","component","disabled","error","fullWidth","hiddenLabel","margin","required","variant"]),F=s.a.useState(function(){var e=!1;return a&&s.a.Children.forEach(a,function(n){if(Object(m.a)(n,["Input","Select"])){var a=Object(m.a)(n,["Select"])?n.props.input:n;a&&Object(l.a)(a.props)&&(e=!0)}}),e})[0],T=s.a.useState(function(){var e=!1;return a&&s.a.Children.forEach(a,function(n){Object(m.a)(n,["Input","Select"])&&Object(l.b)(n.props,!0)&&(e=!0)}),e}),R=T[0],L=T[1],A=s.a.useState(!1),I=A[0],W=A[1];x&&I&&W(!1);var z={adornedStart:F,disabled:x,error:v,filled:R,focused:I,hiddenLabel:b,margin:S,onBlur:function(){W(!1)},onEmpty:function(){R&&L(!1)},onFilled:function(){R||L(!0)},onFocus:function(){W(!0)},registerEffect:void 0,required:j,variant:C};return s.a.createElement(p.a.Provider,{value:z},s.a.createElement(g,Object(t.default)({className:Object(o.a)(i.root,c,"none"!==S&&i["margin".concat(Object(d.a)(S))],G&&i.fullWidth),ref:n},k),a))});n.a=Object(c.default)({root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}},{name:"MuiFormControl"})(u)},ONLM:function(e,n){e.exports='---\ntitle: Grid React Komponente\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">Das responsive Layoutraster von Material Design passt sich der Bildschirmgröße und -ausrichtung an und sorgt für Konsistenz über alle Layouts hinweg.</p>\n\nDas [Grid](https://material.io/design/layout/responsive-layout-grid.html) sorgt für visuelle Konsistenz zwischen Layouts und ermöglicht Flexibilität bei einer Vielzahl von Designs. Die responsive UI von Material Design basiert auf einem 12-Spalten-Rasterlayout.\n\n## So funktioniert es\n\nDas Rastersystem wird mit der `Grid-` Komponente implementiert:\n\n- Es verwendet das [CSS Flexible Box - Modul](https://www.w3.org/TR/css-flexbox-1/) für hohe Flexibilität.\n- Es gibt zwei Arten von Layouts: *Container* und *Elemente*.\n- Die Elementbreiten werden in Prozent angegeben. Sie sind daher immer fließend und werden in Bezug auf das übergeordnete Element angepasst.\n- Elemente haben einen Abstand, um den Abstand zwischen den einzelnen Elementen zu erstellen.\n- Es gibt fünf Rasterpunkte: xs, sm, md, lg und xl.\n\nWenn Sie **neu sind oder Flexbox nicht gut kennen**, empfehlen wir Ihnen, dies zu lesen: [CSS-Tricks Flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n\n## Abstände\n\nDas responsive Raster konzentriert sich auf konsistente Abstandsbreiten und nicht auf die Spaltenbreite. Die Ränder und Spalten des Materialdesigns folgen einem Grundraster aus **8px** Quadraten. Die Abstandseigenschaft ist eine ganze Zahl zwischen 0 und einschließlich 10. Standardmäßig folgt der Abstand zwischen zwei Rasterelementen einer linearen Funktion: `output(spacing) = spacing * 8px`, z. B. `spacing={2}` erzeugt eine Lücke von 16px.\n\nDiese Ausgabetransformationsfunktion kann durch [Verwendung des Themes](/customization/spacing/) angepasst werden.\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Fluides Raster\n\nFluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.\n\n### Grundraster\n\nDie Spaltenbreiten gelten für alle Rasterpunkte (d.h. `xs` und höher).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Raster mit Rasterpunkten\n\nFür einige Spalten sind mehrere Breiten definiert, wodurch sich das Layout am definierten Rasterpunkten ändert.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Interaktive Liste\n\nNachfolgend finden Sie eine interaktive Demo, mit der Sie die visuellen Ergebnisse der verschiedenen Einstellungen untersuchen können:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Automatisches Layout\n\nThe Auto-layout makes the *items* equitably share the available space. That also means you can set the width of one *item* and the others will automatically resize around it.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Komplexes Raster\n\nDie folgende Demo folgt nicht der Material Design-Spezifikation, sondern zeigt, wie das Raster zum Erstellen komplexer Layouts verwendet werden kann.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Verschachteltes Raster\n\nThe `container` and `item` properties are two independent booleans. They can be combined.\n\n> Ein Flex **container** ist die Box, die von einem Element mit einer berechneten Anzeige von `flex` oder `Iinline-flex`. In-Flow-Kinder eines Flex-Containers heißen Flex **Elemente** und werden mit dem Flex-Layout-Modell angeordnet.\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Einschränkungen\n\n### Negative Abstände\n\nEs gibt eine Einschränkung beim negativen Rand, den wir verwenden, um den Abstand zwischen den Elementen zu implementieren. Ein horizontaler Bildlauf wird angezeigt, wenn ein negativer Rand weiter als `<body>` geht. There are 3 available workarounds:\n\n1. Nicht die Abstands-Funktion benutzen und den Abstand in Anzeigeraum `spacing={0}` (Standard) setzen.\n2. Anwenden von Paddings auf das übergeordnete Element, wobei mindestens der halbe Abstand auf das untergeordnete Element angewendet wird:\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. Hinzufügen von `overflow-x: hidden;` zum Elternteil.\n\n### white-space: nowrap;\n\nThe initial setting on flex items is `min-width: auto`. It\'s causing a positioning conflict when the children is using `white-space: nowrap;`. You can experience the issue with:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nIn order for the item to stay within the container you need to set `min-width: 0`. In practice, you can set the `zeroMinWidth` property:\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nObwohl die `Grid-` Komponente eine `direction-` Eigenschaft hat, die Werte von `row`, `row-reverse`, `column`und `column-reverse` zulässt, gibt es einige Funktionen, die in `column` und `column-reverse` Containern nicht unterstützt werden. Die Eigenschaften, die die Anzahl der Gitter definieren, die die Komponente für einen bestimmten Rasterpunkt (`xs`, `sm`, `md`, `lg` und `xl`) hat, konzentrieren sich auf die Steuerung der Breite und **nicht** auf die Höhe innerhalb der `column` und `column-reverse` Container. Wenn innerhalb `column` oder `column-reverse` - Container verwendete, können diese Eigenschaften unerwünschte Nebenwirkungen auf die Breite der `Grid` Elemente haben.\n\n## CSS-Raster Layout\n\nDie Material-UI bietet selbst keine CSS-Grid-Funktionalität. Wie Sie jedoch unten sehen, können Sie CSS-Grid einfach zum Layout Ihrer Seiten hinzufügen.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},"OOh+":function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function AutoGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},Q6gz:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function FullWidthGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},Ri0p:function(e,n){e.exports="import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"},TdrH:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function AutoGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper className={classes.paper}>xs</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},WH4S:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=a("Hg0Q"),c=a("XpU0"),d=a("l/nz"),m=s.a.forwardRef(function(e,n){var a=e.autoFocus,i=e.checked,c=e.checkedIcon,m=e.classes,p=e.className,u=e.defaultChecked,g=e.disabled,f=e.icon,x=e.id,h=e.inputProps,v=e.inputRef,y=e.name,G=e.onBlur,w=e.onChange,b=e.onFocus,E=e.readOnly,S=e.required,N=e.tabIndex,j=e.type,P=e.value,C=Object(r.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),k=s.a.useRef(null!=i).current,F=s.a.useState(Boolean(u)),T=F[0],R=F[1],L=Object(l.a)(),A=g;L&&void 0===A&&(A=L.disabled);var I=k?i:T,W="checkbox"===j||"radio"===j;return s.a.createElement(d.a,Object(t.default)({component:"span",className:Object(o.a)(m.root,p,I&&m.checked,A&&m.disabled),disabled:A,tabIndex:null,role:void 0,onFocus:function(e){b&&b(e),L&&L.onFocus&&L.onFocus(e)},onBlur:function(e){G&&G(e),L&&L.onBlur&&L.onBlur(e)},ref:n},C),I?c:f,s.a.createElement("input",Object(t.default)({autoFocus:a,checked:i,defaultChecked:u,className:m.input,disabled:A,id:W&&x,name:y,onChange:function(e){var n=e.target.checked;k||R(n),w&&w(e,n)},readOnly:E,ref:v,required:S,tabIndex:N,type:j,value:P},h)))});n.a=Object(c.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0}},{name:"PrivateSwitchBase"})(m)},WLtd:function(e,n,a){"use strict";a.d(n,"a",function(){return r});var t=a("AMAy");function r(e){return Object(t.a)(e)}},XXb4:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  function handleChange(event, value) {\n    setSpacing(Number(value));\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={spacing}>\n          {[0, 1, 2].map(value => (\n            <Grid key={value} item>\n              <Paper className={classes.paper} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.control}>\n          <Grid container>\n            <Grid item>\n              <FormLabel>spacing</FormLabel>\n              <RadioGroup\n                name=\"spacing\"\n                aria-label=\"spacing\"\n                value={spacing.toString()}\n                onChange={handleChange}\n                row\n              >\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\n                  <FormControlLabel\n                    key={value}\n                    value={value.toString()}\n                    control={<Radio />}\n                    label={value.toString()}\n                  />\n                ))}\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n"},YMKp:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function FullWidthGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},dGbL:function(e,n){e.exports='---\ntitle: Componente Grid React\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">El grid responsive de Material Design se adapta al tamaño y orientación de la pantalla, garantizando la consistencia en todos los diseños.</p>\n\nLa [cuadrícula](https://material.io/design/layout/responsive-layout-grid.html) crea consistencia visual en la distribución de elementos a la vez que permite flexibilidad en una amplia variedad de diseños. La IU responsive de Material Design se basa en una distribución de cuadrícula de 12 columnas.\n\n## Cómo funciona\n\nEl sistema de cuadrícula se implementa con el componente `Grid`:\n\n- Utiliza el [módulo Flexible Box de CSS](https://www.w3.org/TR/css-flexbox-1/) para una gran flexibilidad.\n- Hay dos tipos de layout:*contenedores (containers)* y *elementos (items)*.\n- Los anchos de los elementos se establecen en porcentajes, por lo que siempre son fluidos y tienen un tamaño relativo al elemento principal.\n- Los elementos tienen padding para crear el espacio entre los elementos individuales.\n- Hay cinco puntos de interrupción de la cuadrícula: xs, sm, md, lg y xl.\n\nIf you are **new to or unfamiliar with flexbox**, we encourage you to read this [CSS-Tricks flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/) guide.\n\n## Espaciado\n\nLa cuadrícula responsive se centra en anchos de espaciado coherentes, en lugar de en el ancho de columna. Los márgenes y columnas de Material Design siguen una cuadrícula con línea-base cuadrada de **8dp**. La propiedad de espaciado es un número entero entre 0 y 10 inclusive. Por defecto, el espaciado entre dos elementos de la cuadrícula sigue una función lineal: `output(spacing)= spacing * 8px`, por ejemplo, `spacing={2}` crea un espacio de 16px.\n\nEsta función de transformación de la salida se puede personalizar [usando el tema](/customization/spacing/).\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Grids fluidos\n\nFluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.\n\n### Grid básica\n\nLos anchos de columna se aplican en todos los breakepoints (ej. `xs` y superiores).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Grid con breakpoints\n\nAlgunas columnas tienen varios anchos definidos, causando que el layout cambie en el correspondiente breakpoint definido.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Explora\n\nDebajo de esta línea hay una demostración interactiva que permite explorar el resultado visual de las distintas configuraciones:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Auto-layout\n\nThe Auto-layout makes the *items* equitably share the available space. That also means you can set the width of one *item* and the others will automatically resize around it.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Grid Compleja\n\nEl siguiente ejemplo no sigue las directrices de Material Design, pero ilustra cómo el grid puede ser usado para dar forma a layouts complejas.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Grid Anidada\n\nThe `container` and `item` properties are two independent booleans. They can be combined.\n\n> Un **contenedor** de flex es la caja generada por un elemento con la propiedad computada display con el valor de `flex` o `inline-flex`. Los hijos en el flujo de un contenedor flex se denominan flex **items** y se establecen mediante el modelo de layout flex.\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Limitaciones\n\n### Margen negativo\n\nExiste una limitación con el margen negativo que utilizamos para implementar el espaciado entre los elementos. Un scroll horizontal aparecerá si un margen negativo va más allá del `<body>`. There are 3 available workarounds:\n\n1. No usar la función de espaciado e implementarla en el espacio de usuario `spacing={0}` (por defecto).\n2. Aplicar padding al padre con al menos la mitad del valor de espaciado aplicado al hijo:\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. Añadiendo `overflow-x: hidden;` al padre.\n\n### white-space: nowrap;\n\nThe initial setting on flex items is `min-width: auto`. It\'s causing a positioning conflict when the children is using `white-space: nowrap;`. You can experience the issue with:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nIn order for the item to stay within the container you need to set `min-width: 0`. In practice, you can set the `zeroMinWidth` property:\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nThough the `Grid` component has a `direction` property that allows values of `row`, `row-reverse`, `column`, and `column-reverse`, there are some features that are not supported within `column` and `column-reverse` containers. The properties which define the number of grids the component will use for a given breakpoint (`xs`, `sm`, `md`, `lg`, and `xl`) are focused on controlling width and do **not** have similar effects on height within `column` and `column-reverse` containers. If used within `column` or `column-reverse` containers, these properties may have undesirable effects on the width of the `Grid` elements.\n\n## CSS Grid Layout\n\nMaterial-UI doesn\'t provide any CSS Grid functionality itself, but as seen below you can easily use CSS Grid to layout your pages.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},eTrt:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return A});var t=a("mXGw"),r=a.n(t),i=a("pQ8Y"),s=a("Nulz"),o=a("7RiP"),l=a("Lqxv"),c=a("HiUD"),d=a("rkid"),m=a("VPks"),p=a("yZEQ"),u=a("WLtd"),g=a("juyJ"),f=Object(p.a)(function(e){return Object(u.a)({root:{flexGrow:1},demo:{height:240},paper:{padding:e.spacing(2),height:"100%",color:e.palette.text.secondary},control:{padding:e.spacing(2)}})}),x=r.a.createElement(o.a,null,"direction"),h=r.a.createElement(l.a,{value:"row",control:r.a.createElement(d.a,null),label:"row"}),v=r.a.createElement(l.a,{value:"row-reverse",control:r.a.createElement(d.a,null),label:"row-reverse"}),y=r.a.createElement(l.a,{value:"column",control:r.a.createElement(d.a,null),label:"column"}),G=r.a.createElement(l.a,{value:"column-reverse",control:r.a.createElement(d.a,null),label:"column-reverse"}),w=r.a.createElement(o.a,null,"justify"),b=r.a.createElement(l.a,{value:"flex-start",control:r.a.createElement(d.a,null),label:"flex-start"}),E=r.a.createElement(l.a,{value:"center",control:r.a.createElement(d.a,null),label:"center"}),S=r.a.createElement(l.a,{value:"flex-end",control:r.a.createElement(d.a,null),label:"flex-end"}),N=r.a.createElement(l.a,{value:"space-between",control:r.a.createElement(d.a,null),label:"space-between"}),j=r.a.createElement(l.a,{value:"space-around",control:r.a.createElement(d.a,null),label:"space-around"}),P=r.a.createElement(l.a,{value:"space-evenly",control:r.a.createElement(d.a,null),label:"space-evenly"}),C=r.a.createElement(o.a,null,"alignItems"),k=r.a.createElement(l.a,{value:"flex-start",control:r.a.createElement(d.a,null),label:"flex-start"}),F=r.a.createElement(l.a,{value:"center",control:r.a.createElement(d.a,null),label:"center"}),T=r.a.createElement(l.a,{value:"flex-end",control:r.a.createElement(d.a,null),label:"flex-end"}),R=r.a.createElement(l.a,{value:"stretch",control:r.a.createElement(d.a,null),label:"stretch"}),L=r.a.createElement(l.a,{value:"baseline",control:r.a.createElement(d.a,null),label:"baseline"});function A(){var e=f(),n=r.a.useState("row"),a=n[0],t=n[1],o=r.a.useState("center"),l=o[0],d=o[1],p=r.a.useState("center"),u=p[0],A=p[1],I='\n```jsx\n<Grid\n  container\n  direction="'.concat(a,'"\n  justify="').concat(l,'"\n  alignItems="').concat(u,'"\n>\n```\n');return r.a.createElement(i.a,{container:!0,className:e.root},r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(i.a,{container:!0,spacing:2,className:e.demo,alignItems:u,direction:a,justify:l},[0,1,2].map(function(n){return r.a.createElement(i.a,{key:n,item:!0},r.a.createElement(m.a,{className:e.paper,style:{paddingTop:10*(n+1),paddingBottom:10*(n+1)}},"Cell ".concat(n+1)))}))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(m.a,{className:e.control},r.a.createElement(i.a,{container:!0,spacing:3},r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},x,r.a.createElement(c.a,{row:!0,name:"direction","aria-label":"direction",value:a,onChange:function(e,n){return t(n)}},h,v,y,G))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},w,r.a.createElement(c.a,{row:!0,name:"justify","aria-label":"justify",value:l,onChange:function(e,n){return d(n)}},b,E,S,N,j,P))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},C,r.a.createElement(c.a,{row:!0,name:"alignItems","aria-label":"align items",value:u,onChange:function(e,n){return A(n)}},k,F,T,R,L)))))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(g.a,{text:I})))}},fcL8:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState<GridSpacing>(2);\n  const classes = useStyles();\n\n  function handleChange(event: any, value: string) {\n    setSpacing(Number(value) as GridSpacing);\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={spacing}>\n          {[0, 1, 2].map(value => (\n            <Grid key={value} item>\n              <Paper className={classes.paper} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.control}>\n          <Grid container>\n            <Grid item>\n              <FormLabel>spacing</FormLabel>\n              <RadioGroup\n                name=\"spacing\"\n                aria-label=\"spacing\"\n                value={spacing.toString()}\n                onChange={handleChange}\n                row\n              >\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\n                  <FormControlLabel\n                    key={value}\n                    value={value.toString()}\n                    control={<Radio />}\n                    label={value.toString()}\n                  />\n                ))}\n              </RadioGroup>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n"},hhTU:function(e,n){e.exports='import React from \'react\';\nimport Grid from \'@material-ui/core/Grid\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport Radio from \'@material-ui/core/Radio\';\nimport Paper from \'@material-ui/core/Paper\';\nimport { makeStyles } from \'@material-ui/core/styles\';\n// We don\'t have a typescript version of MarkdownElement\n// tslint:disable-next-line: ban-ts-ignore\n// @ts-ignore\nimport MarkdownElement from \'docs/src/modules/components/MarkdownElement\';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  demo: {\n    height: 240,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \'100%\',\n    color: theme.palette.text.secondary,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function InteractiveGrid() {\n  const classes = useStyles();\n  const [direction, setDirection] = React.useState(\'row\');\n  const [justify, setJustify] = React.useState(\'center\');\n  const [alignItems, setAlignItems] = React.useState(\'center\');\n\n  const code = `\n\\`\\`\\`jsx\n<Grid\n  container\n  direction="${direction}"\n  justify="${justify}"\n  alignItems="${alignItems}"\n>\n\\`\\`\\`\n`;\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Grid\n          container\n          spacing={2}\n          className={classes.demo}\n          alignItems={alignItems}\n          direction={direction}\n          justify={justify}\n        >\n          {[0, 1, 2].map(value => (\n            <Grid key={value} item>\n              <Paper\n                className={classes.paper}\n                style={{ paddingTop: (value + 1) * 10, paddingBottom: (value + 1) * 10 }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.control}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(e, value) => setDirection(value)}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel value="row-reverse" control={<Radio />} label="row-reverse" />\n                  <FormControlLabel value="column" control={<Radio />} label="column" />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>justify</FormLabel>\n                <RadioGroup\n                  row\n                  name="justify"\n                  aria-label="justify"\n                  value={justify}\n                  onChange={(e, value) => setJustify(value)}\n                >\n                  <FormControlLabel value="flex-start" control={<Radio />} label="flex-start" />\n                  <FormControlLabel value="center" control={<Radio />} label="center" />\n                  <FormControlLabel value="flex-end" control={<Radio />} label="flex-end" />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel value="space-around" control={<Radio />} label="space-around" />\n                  <FormControlLabel value="space-evenly" control={<Radio />} label="space-evenly" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(e, value) => setAlignItems(value)}\n                >\n                  <FormControlLabel value="flex-start" control={<Radio />} label="flex-start" />\n                  <FormControlLabel value="center" control={<Radio />} label="center" />\n                  <FormControlLabel value="flex-end" control={<Radio />} label="flex-end" />\n                  <FormControlLabel value="stretch" control={<Radio />} label="stretch" />\n                  <FormControlLabel value="baseline" control={<Radio />} label="baseline" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <MarkdownElement text={code} />\n      </Grid>\n    </Grid>\n  );\n}\n'},iZbi:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("VPks"),o=a("pQ8Y"),l=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}}});function c(){var e=l();return r.a.createElement("div",{className:e.root},r.a.createElement(o.a,{container:!0,spacing:3},r.a.createElement(o.a,{item:!0,xs:12},r.a.createElement(s.a,{className:e.paper},"xs=12")),r.a.createElement(o.a,{item:!0,xs:6},r.a.createElement(s.a,{className:e.paper},"xs=6")),r.a.createElement(o.a,{item:!0,xs:6},r.a.createElement(s.a,{className:e.paper},"xs=6")),r.a.createElement(o.a,{item:!0,xs:3},r.a.createElement(s.a,{className:e.paper},"xs=3")),r.a.createElement(o.a,{item:!0,xs:3},r.a.createElement(s.a,{className:e.paper},"xs=3")),r.a.createElement(o.a,{item:!0,xs:3},r.a.createElement(s.a,{className:e.paper},"xs=3")),r.a.createElement(o.a,{item:!0,xs:3},r.a.createElement(s.a,{className:e.paper},"xs=3"))))}},"kS5+":function(e,n,a){var t={"./AutoGrid.js":"uEQj","./AutoGrid.tsx":"2pU/","./AutoGridNoWrap.js":"rJyl","./AutoGridNoWrap.tsx":"8pUM","./CSSGrid.js":"zAz9","./CSSGrid.tsx":"Ir1E","./CenteredGrid.js":"iZbi","./CenteredGrid.tsx":"rFGl","./ComplexGrid.js":"uNOA","./ComplexGrid.tsx":"DHy7","./FullWidthGrid.js":"Ay+m","./FullWidthGrid.tsx":"kqkv","./InteractiveGrid.js":"pXoo","./InteractiveGrid.tsx":"eTrt","./NestedGrid.js":"yavi","./NestedGrid.tsx":"zkTH","./SpacingGrid.js":"Hm5f","./SpacingGrid.tsx":"rf6M","./grid-aa.md":"rZFX","./grid-de.md":"ONLM","./grid-es.md":"dGbL","./grid-fr.md":"Dzyk","./grid-ja.md":"CEEh","./grid-pt.md":"rtZ7","./grid-ru.md":"Jflp","./grid-zh.md":"FlBp","./grid.md":"AQ7e"};function r(e){var n=i(e);return a(n)}function i(e){var n=t[e];if(!(n+1)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n}r.keys=function(){return Object.keys(t)},r.resolve=i,e.exports=r,r.id="kS5+"},kqkv:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("VPks"),l=a("pQ8Y"),c=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}})});function d(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,{container:!0,spacing:3},r.a.createElement(l.a,{item:!0,xs:12},r.a.createElement(o.a,{className:e.paper},"xs=12")),r.a.createElement(l.a,{item:!0,xs:12,sm:6},r.a.createElement(o.a,{className:e.paper},"xs=12 sm=6")),r.a.createElement(l.a,{item:!0,xs:12,sm:6},r.a.createElement(o.a,{className:e.paper},"xs=12 sm=6")),r.a.createElement(l.a,{item:!0,xs:6,sm:3},r.a.createElement(o.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(l.a,{item:!0,xs:6,sm:3},r.a.createElement(o.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(l.a,{item:!0,xs:6,sm:3},r.a.createElement(o.a,{className:e.paper},"xs=6 sm=3")),r.a.createElement(l.a,{item:!0,xs:6,sm:3},r.a.createElement(o.a,{className:e.paper},"xs=6 sm=3"))))}},lbM1:function(e,n){e.exports='import React from \'react\';\nimport Grid, { GridItemsAlignment, GridJustification, GridDirection } from \'@material-ui/core/Grid\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport Radio from \'@material-ui/core/Radio\';\nimport Paper from \'@material-ui/core/Paper\';\nimport { makeStyles, createStyles, Theme } from \'@material-ui/core/styles\';\n// We don\'t have a typescript version of MarkdownElement\n// tslint:disable-next-line: ban-ts-ignore\n// @ts-ignore\nimport MarkdownElement from \'docs/src/modules/components/MarkdownElement\';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    demo: {\n      height: 240,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      height: \'100%\',\n      color: theme.palette.text.secondary,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nexport default function InteractiveGrid() {\n  const classes = useStyles();\n  const [direction, setDirection] = React.useState<GridDirection>(\'row\');\n  const [justify, setJustify] = React.useState<GridJustification>(\'center\');\n  const [alignItems, setAlignItems] = React.useState<GridItemsAlignment>(\'center\');\n\n  const code = `\n\\`\\`\\`jsx\n<Grid\n  container\n  direction="${direction}"\n  justify="${justify}"\n  alignItems="${alignItems}"\n>\n\\`\\`\\`\n`;\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Grid\n          container\n          spacing={2}\n          className={classes.demo}\n          alignItems={alignItems}\n          direction={direction}\n          justify={justify}\n        >\n          {[0, 1, 2].map(value => (\n            <Grid key={value} item>\n              <Paper\n                className={classes.paper}\n                style={{ paddingTop: (value + 1) * 10, paddingBottom: (value + 1) * 10 }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper className={classes.control}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(e, value) => setDirection(value as GridDirection)}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel value="row-reverse" control={<Radio />} label="row-reverse" />\n                  <FormControlLabel value="column" control={<Radio />} label="column" />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>justify</FormLabel>\n                <RadioGroup\n                  row\n                  name="justify"\n                  aria-label="justify"\n                  value={justify}\n                  onChange={(e, value) => setJustify(value as GridJustification)}\n                >\n                  <FormControlLabel value="flex-start" control={<Radio />} label="flex-start" />\n                  <FormControlLabel value="center" control={<Radio />} label="center" />\n                  <FormControlLabel value="flex-end" control={<Radio />} label="flex-end" />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel value="space-around" control={<Radio />} label="space-around" />\n                  <FormControlLabel value="space-evenly" control={<Radio />} label="space-evenly" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel>alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(e, value) => setAlignItems(value as GridItemsAlignment)}\n                >\n                  <FormControlLabel value="flex-start" control={<Radio />} label="flex-start" />\n                  <FormControlLabel value="center" control={<Radio />} label="center" />\n                  <FormControlLabel value="flex-end" control={<Radio />} label="flex-end" />\n                  <FormControlLabel value="stretch" control={<Radio />} label="stretch" />\n                  <FormControlLabel value="baseline" control={<Radio />} label="baseline" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <MarkdownElement text={code} />\n      </Grid>\n    </Grid>\n  );\n}\n'},mUWf:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: 'auto',\n      maxWidth: 500,\n    },\n    image: {\n      width: 128,\n      height: 128,\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n  }),\n);\n\nexport default function ComplexGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  Standard license\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  Full resolution 1920x1080 • JPEG\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  ID: 1030114\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\n                  Remove\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">$19.00</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"},o5em:function(e,n,a){"use strict";var t=a("mXGw"),r=a.n(t).a.createContext();n.a=r},oSsn:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=a("XpU0"),c=s.a.forwardRef(function(e,n){var a=e.alt,i=e.children,l=e.childrenClassName,c=e.classes,d=e.className,m=e.component,p=void 0===m?"div":m,u=e.imgProps,g=e.sizes,f=e.src,x=e.srcSet,h=Object(r.a)(e,["alt","children","childrenClassName","classes","className","component","imgProps","sizes","src","srcSet"]),v=null,y=f||x;return v=y?s.a.createElement("img",Object(t.default)({alt:a,src:f,srcSet:x,sizes:g,className:c.img},u)):l&&s.a.isValidElement(i)?s.a.cloneElement(i,{className:Object(o.a)(l,i.props.className)}):i,s.a.createElement(p,Object(t.default)({className:Object(o.a)(c.root,c.system,d,!y&&c.colorDefault),ref:n},h),v)});n.a=Object(l.default)(function(e){return{root:{position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),borderRadius:"50%",overflow:"hidden",userSelect:"none"},colorDefault:{color:e.palette.background.default,backgroundColor:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[600]},img:{width:"100%",height:"100%",textAlign:"center",objectFit:"cover"}}},{name:"MuiAvatar"})(c)},pQ8Y:function(e,n,a){"use strict";var t=a("2Fjn"),r=a("Rbzu"),i=a("yLsn"),s=a.n(i),o=a("z3IF"),l=a("mXGw"),c=a.n(l),d=a("PDtE"),m=a("XpU0"),p=[0,1,2,3,4,5,6,7,8,9,10],u=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function g(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=s()(e);return"".concat(a/n).concat(String(e).replace(String(a),"")||"px")}var f=c.a.forwardRef(function(e,n){var a=e.alignContent,r=void 0===a?"stretch":a,i=e.alignItems,s=void 0===i?"stretch":i,l=e.classes,m=e.className,p=e.component,u=void 0===p?"div":p,g=e.container,f=void 0!==g&&g,x=e.direction,h=void 0===x?"row":x,v=e.item,y=void 0!==v&&v,G=e.justify,w=void 0===G?"flex-start":G,b=e.lg,E=void 0!==b&&b,S=e.md,N=void 0!==S&&S,j=e.sm,P=void 0!==j&&j,C=e.spacing,k=void 0===C?0:C,F=e.wrap,T=void 0===F?"wrap":F,R=e.xl,L=void 0!==R&&R,A=e.xs,I=void 0!==A&&A,W=e.zeroMinWidth,z=void 0!==W&&W,O=Object(t.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),M=Object(d.a)(l.root,m,f&&[l.container,0!==k&&l["spacing-xs-".concat(String(k))]],y&&l.item,z&&l.zeroMinWidth,"row"!==h&&l["direction-xs-".concat(String(h))],"wrap"!==T&&l["wrap-xs-".concat(String(T))],"stretch"!==s&&l["align-items-xs-".concat(String(s))],"stretch"!==r&&l["align-content-xs-".concat(String(r))],"flex-start"!==w&&l["justify-xs-".concat(String(w))],!1!==I&&l["grid-xs-".concat(String(I))],!1!==P&&l["grid-sm-".concat(String(P))],!1!==N&&l["grid-md-".concat(String(N))],!1!==E&&l["grid-lg-".concat(String(E))],!1!==L&&l["grid-xl-".concat(String(L))]);return c.a.createElement(u,Object(o.default)({className:M,ref:n},O))});var x=Object(m.default)(function(e){return Object(r.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,n){var a={};return p.forEach(function(t){var r=e.spacing(t);0!==r&&(a["spacing-".concat(n,"-").concat(t)]={margin:"-".concat(g(r,2)),width:"calc(100% + ".concat(g(r),")"),"& > $item":{padding:g(r,2)}})}),a}(e,"xs"),e.breakpoints.keys.reduce(function(n,a){return function(e,n,a){var t={};u.forEach(function(e){var n="grid-".concat(a,"-").concat(e);if(!0!==e)if("auto"!==e){var r="".concat(Math.round(e/12*1e8)/1e6,"%");t[n]={flexBasis:r,flexGrow:0,maxWidth:r}}else t[n]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else t[n]={flexBasis:0,flexGrow:1,maxWidth:"100%"}}),"xs"===a?Object(o.default)(e,t):e[n.breakpoints.up(a)]=t}(n,e,a),n},{}))},{name:"MuiGrid"})(f);n.a=x},pXoo:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return L});var t=a("mXGw"),r=a.n(t),i=a("pQ8Y"),s=a("Nulz"),o=a("7RiP"),l=a("Lqxv"),c=a("HiUD"),d=a("rkid"),m=a("VPks"),p=a("yZEQ"),u=a("juyJ"),g=Object(p.a)(function(e){return{root:{flexGrow:1},demo:{height:240},paper:{padding:e.spacing(2),height:"100%",color:e.palette.text.secondary},control:{padding:e.spacing(2)}}}),f=r.a.createElement(o.a,null,"direction"),x=r.a.createElement(l.a,{value:"row",control:r.a.createElement(d.a,null),label:"row"}),h=r.a.createElement(l.a,{value:"row-reverse",control:r.a.createElement(d.a,null),label:"row-reverse"}),v=r.a.createElement(l.a,{value:"column",control:r.a.createElement(d.a,null),label:"column"}),y=r.a.createElement(l.a,{value:"column-reverse",control:r.a.createElement(d.a,null),label:"column-reverse"}),G=r.a.createElement(o.a,null,"justify"),w=r.a.createElement(l.a,{value:"flex-start",control:r.a.createElement(d.a,null),label:"flex-start"}),b=r.a.createElement(l.a,{value:"center",control:r.a.createElement(d.a,null),label:"center"}),E=r.a.createElement(l.a,{value:"flex-end",control:r.a.createElement(d.a,null),label:"flex-end"}),S=r.a.createElement(l.a,{value:"space-between",control:r.a.createElement(d.a,null),label:"space-between"}),N=r.a.createElement(l.a,{value:"space-around",control:r.a.createElement(d.a,null),label:"space-around"}),j=r.a.createElement(l.a,{value:"space-evenly",control:r.a.createElement(d.a,null),label:"space-evenly"}),P=r.a.createElement(o.a,null,"alignItems"),C=r.a.createElement(l.a,{value:"flex-start",control:r.a.createElement(d.a,null),label:"flex-start"}),k=r.a.createElement(l.a,{value:"center",control:r.a.createElement(d.a,null),label:"center"}),F=r.a.createElement(l.a,{value:"flex-end",control:r.a.createElement(d.a,null),label:"flex-end"}),T=r.a.createElement(l.a,{value:"stretch",control:r.a.createElement(d.a,null),label:"stretch"}),R=r.a.createElement(l.a,{value:"baseline",control:r.a.createElement(d.a,null),label:"baseline"});function L(){var e=g(),n=r.a.useState("row"),a=n[0],t=n[1],o=r.a.useState("center"),l=o[0],d=o[1],p=r.a.useState("center"),L=p[0],A=p[1],I='\n```jsx\n<Grid\n  container\n  direction="'.concat(a,'"\n  justify="').concat(l,'"\n  alignItems="').concat(L,'"\n>\n```\n');return r.a.createElement(i.a,{container:!0,className:e.root},r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(i.a,{container:!0,spacing:2,className:e.demo,alignItems:L,direction:a,justify:l},[0,1,2].map(function(n){return r.a.createElement(i.a,{key:n,item:!0},r.a.createElement(m.a,{className:e.paper,style:{paddingTop:10*(n+1),paddingBottom:10*(n+1)}},"Cell ".concat(n+1)))}))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(m.a,{className:e.control},r.a.createElement(i.a,{container:!0,spacing:3},r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},f,r.a.createElement(c.a,{row:!0,name:"direction","aria-label":"direction",value:a,onChange:function(e,n){return t(n)}},x,h,v,y))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},G,r.a.createElement(c.a,{row:!0,name:"justify","aria-label":"justify",value:l,onChange:function(e,n){return d(n)}},w,b,E,S,N,j))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(s.a,{component:"fieldset"},P,r.a.createElement(c.a,{row:!0,name:"alignItems","aria-label":"align items",value:L,onChange:function(e,n){return A(n)}},C,k,F,T,R)))))),r.a.createElement(i.a,{item:!0,xs:12},r.a.createElement(u.a,{text:I})))}},qN1k:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),r=a.n(t),i=a("e+1t"),s=a("kS5+"),o=a("NDL8"),l=r.a.createElement(i.a,{req:s,reqSource:o,reqPrefix:"pages/components/grid"});function c(){return l}},qoly:function(e,n,a){"use strict";a.d(n,"a",function(){return o});var t=a("z3IF"),r=a("mXGw"),i=a.n(r),s=a("6dYU");function o(e,n){var a=i.a.memo(i.a.forwardRef(function(n,a){return i.a.createElement(s.a,Object(t.default)({},n,{ref:a}),e)}));return a.muiName=s.a.muiName,a}},rFGl:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("VPks"),l=a("pQ8Y"),c=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}})});function d(){var e=c();return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,{container:!0,spacing:3},r.a.createElement(l.a,{item:!0,xs:12},r.a.createElement(o.a,{className:e.paper},"xs=12")),r.a.createElement(l.a,{item:!0,xs:6},r.a.createElement(o.a,{className:e.paper},"xs=6")),r.a.createElement(l.a,{item:!0,xs:6},r.a.createElement(o.a,{className:e.paper},"xs=6")),r.a.createElement(l.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(l.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(l.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(l.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3"))))}},rJyl:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var t=a("mXGw"),r=a.n(t),i=a("VPks"),s=a("yZEQ"),o=a("pQ8Y"),l=a("oSsn"),c=a("Oy88"),d=Object(s.a)(function(e){return{root:{flexGrow:1,overflow:"hidden",padding:e.spacing(0,3)},paper:{maxWidth:400,margin:"".concat(e.spacing(1),"px auto"),padding:e.spacing(2)}}}),m="Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. ",p=r.a.createElement(o.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(o.a,{item:!0},r.a.createElement(l.a,null,"W")),r.a.createElement(o.a,{item:!0,xs:!0,zeroMinWidth:!0},r.a.createElement(c.a,{noWrap:!0},m))),u=r.a.createElement(o.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(o.a,{item:!0},r.a.createElement(l.a,null,"W")),r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(c.a,{noWrap:!0},m))),g=r.a.createElement(o.a,{container:!0,wrap:"nowrap",spacing:2},r.a.createElement(o.a,{item:!0},r.a.createElement(l.a,null,"W")),r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(c.a,null,m)));function f(){var e=d();return r.a.createElement("div",{className:e.root},r.a.createElement(i.a,{className:e.paper},p),r.a.createElement(i.a,{className:e.paper},u),r.a.createElement(i.a,{className:e.paper},g))}},rZFX:function(e,n){e.exports='---\ntitle: crwdns90326:0crwdne90326:0\ncomponents: crwdns90328:0crwdne90328:0\n---\n\n# crwdns90330:0crwdne90330:0\n\n<p class="description">crwdns90332:0crwdne90332:0</p>\n\ncrwdns90334:0crwdne90334:0 crwdns90336:0crwdne90336:0\n\n## crwdns90338:0crwdne90338:0\n\ncrwdns90340:0crwdne90340:0\n\n- crwdns90342:0crwdne90342:0\n- crwdns90344:0crwdne90344:0\n- crwdns90346:0crwdne90346:0\n- crwdns90348:0crwdne90348:0\n- crwdns90350:0crwdne90350:0\n\ncrwdns90352:0crwdne90352:0\n\n## crwdns90354:0crwdne90354:0\n\ncrwdns90356:0crwdne90356:0 crwdns90358:0crwdne90358:0 crwdns90360:0crwdne90360:0 crwdns90362:0{2}crwdne90362:0\n\ncrwdns90364:0crwdne90364:0\n\ncrwdns90366:0crwdne90366:0\n\n## crwdns90368:0crwdne90368:0\n\ncrwdns90370:0crwdne90370:0 crwdns90372:0crwdne90372:0\n\n### crwdns90374:0crwdne90374:0\n\ncrwdns90376:0crwdne90376:0\n\ncrwdns90378:0crwdne90378:0\n\n### crwdns90380:0crwdne90380:0\n\ncrwdns90382:0crwdne90382:0\n\ncrwdns90384:0crwdne90384:0\n\n## crwdns90386:0crwdne90386:0\n\ncrwdns90388:0crwdne90388:0\n\ncrwdns90390:0crwdne90390:0\n\n## crwdns90392:0crwdne90392:0\n\ncrwdns90394:0crwdne90394:0 crwdns90396:0crwdne90396:0\n\ncrwdns90398:0crwdne90398:0\n\n## crwdns90400:0crwdne90400:0\n\ncrwdns90402:0crwdne90402:0\n\ncrwdns90404:0crwdne90404:0\n\n## crwdns90406:0crwdne90406:0\n\ncrwdns90408:0crwdne90408:0 crwdns90410:0crwdne90410:0\n\n> crwdns90412:0crwdne90412:0 crwdns90414:0crwdne90414:0\n\ncrwdns90416:0crwdne90416:0\n\ncrwdns90418:0crwdne90418:0\n\n## crwdns90420:0crwdne90420:0\n\n### crwdns90422:0crwdne90422:0\n\ncrwdns90424:0crwdne90424:0 crwdns90426:0crwdne90426:0 crwdns90428:0crwdne90428:0\n\n1. crwdns90430:0{0}crwdne90430:0\n2. crwdns90432:0crwdne90432:0\n\n```jsx\n  crwdns90434:0{{ padding: 20 }}crwdnd90434:0{5}crwdne90434:0\n      crwdns90436:0crwdne90436:0\n```\n\n3. crwdns90438:0crwdne90438:0\n\n### crwdns90440:0crwdne90440:0\n\ncrwdns90442:0crwdne90442:0 crwdns90444:0crwdne90444:0 crwdns90446:0crwdne90446:0\n\n```jsx\ncrwdns90448:0crwdne90448:0\n```\n\ncrwdns90450:0crwdne90450:0 crwdns90452:0crwdne90452:0\n\n```jsx\ncrwdns90454:0crwdne90454:0\n```\n\ncrwdns90456:0crwdne90456:0\n\n### crwdns90458:0crwdne90458:0\n\ncrwdns90460:0crwdne90460:0 crwdns90462:0crwdne90462:0 crwdns90464:0crwdne90464:0\n\n## crwdns90466:0crwdne90466:0\n\ncrwdns90468:0crwdne90468:0\n\ncrwdns90470:0crwdne90470:0'},rf6M:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return x});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("pQ8Y"),l=a("7RiP"),c=a("Lqxv"),d=a("HiUD"),m=a("rkid"),p=a("VPks"),u=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{height:140,width:100},control:{padding:e.spacing(2)}})}),g=r.a.createElement(l.a,null,"spacing"),f=r.a.createElement(m.a,null);function x(){var e=r.a.useState(2),n=e[0],a=e[1],t=u();return r.a.createElement(o.a,{container:!0,className:t.root,spacing:2},r.a.createElement(o.a,{item:!0,xs:12},r.a.createElement(o.a,{container:!0,justify:"center",spacing:n},[0,1,2].map(function(e){return r.a.createElement(o.a,{key:e,item:!0},r.a.createElement(p.a,{className:t.paper}))}))),r.a.createElement(o.a,{item:!0,xs:12},r.a.createElement(p.a,{className:t.control},r.a.createElement(o.a,{container:!0},r.a.createElement(o.a,{item:!0},g,r.a.createElement(d.a,{name:"spacing","aria-label":"spacing",value:n.toString(),onChange:function(e,n){a(Number(n))},row:!0},[0,1,2,3,4,5,6,7,8,9,10].map(function(e){return r.a.createElement(c.a,{key:e,value:e.toString(),control:f,label:e.toString()})})))))))}},rkid:function(e,n,a){"use strict";var t=a("z3IF"),r=a("2Fjn"),i=a("mXGw"),s=a.n(i),o=a("PDtE"),l=a("WH4S"),c=a("qoly"),d=Object(c.a)(s.a.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),m=Object(c.a)(s.a.createElement("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked"),p=a("XpU0"),u=s.a.createElement(d,null);var g=Object(p.default)(function(e){return{root:{position:"relative",display:"flex","&$checked $layer":{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})}},layer:{left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest})},checked:{}}},{name:"PrivateRadioButtonIcon"})(function(e){var n=e.checked,a=e.classes,i=e.className,l=Object(r.a)(e,["checked","classes","className"]);return s.a.createElement("div",Object(t.default)({className:Object(o.a)(a.root,i,n&&a.checked)},l),u,s.a.createElement(m,{className:a.layer}))}),f=a("cYeA"),x=a("GbnF"),h=a("o5em"),v=s.a.createElement(g,{checked:!0}),y=s.a.createElement(g,null),G=s.a.forwardRef(function(e,n){var a=e.checked,i=e.classes,c=e.color,d=void 0===c?"secondary":c,m=e.name,p=e.onChange,u=Object(r.a)(e,["checked","classes","color","name","onChange"]),g=s.a.useContext(h.a),f=a,G=Object(x.b)(p,g&&g.onChange),w=m;return g&&(void 0===f&&(f=g.value===e.value),void 0===w&&(w=g.name)),s.a.createElement(l.a,Object(t.default)({color:d,type:"radio",icon:y,checkedIcon:v,classes:{root:Object(o.a)(i.root,i["color".concat(Object(x.a)(d))]),checked:i.checked,disabled:i.disabled},name:w,checked:f,onChange:G,ref:n},u))});n.a=Object(p.default)(function(e){return{root:{color:e.palette.text.secondary},checked:{},disabled:{},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(f.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(f.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}}}},{name:"MuiRadio"})(G)},rtZ7:function(e,n){e.exports='---\ntitle: Componente React para Grade\ncomponents: Grid\n---\n\n# Grid\n\n<p class="description">O layout responsivo da grade do Material Design se adapta ao tamanho e orientação da tela, garantindo a consistência entre layouts.</p>\n\nUma [grade](https://material.io/design/layout/responsive-layout-grid.html) cria consistência visual entre layouts enquanto permite flexibilidade através de uma grande variedade de projetos. A UI responsiva do Material Design é baseada em um layout de grid com 12 colunas.\n\n## Como funciona\n\nO sistema de grid é implementado com o componente `Grid`:\n\n- Ele usa [CSS’s Flexible Box](https://www.w3.org/TR/css-flexbox-1/) para alta flexibilidade.\n- Existem dois tipos de leiautes: *contêineres* e *itens*.\n- Larguras de itens são definidas em porcentagens, então elas são sempre fluidas e dimensionadas em relação ao elemento pai.\n- Itens têm preenchimento para criar o espaçamento entre itens individuais.\n- Existem cinco pontos de quebra (breakpoints) na grade: xs, sm, md, lg e xl.\n\nSe você é **novo ou não está familiarizado com o flexbox**, nós recomendamos você a ler este [guia do Flexbox CSS-Tricks](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n\n## Espaçamento\n\nA grade responsiva se concentra em larguras de espaçamento consistentes, em vez de largura de coluna. As margens e colunas do Material Design seguem uma grade de linha de base quadrada de **8px**. A propriedade de espaçamento é um inteiro entre 0 e 10. Por padrão, o espaçamento entre dois itens de grade segue uma função linear: `output (espaçamento) = espaçamento * 8px`, por exemplo, `espaçamento ={2}` criando um intervalo de 16px.\n\nEsta função de transformação de saída pode ser customizada [usando o tema](/customization/spacing/).\n\n{{"demo": "pages/components/grid/SpacingGrid.js"}}\n\n## Grades Fluídas\n\nAs grades fluídas usam colunas que dimensionam e redimensionam o conteúdo. O leiaute de uma grade fluída pode usar pontos de quebra para determinar se o leiaute precisa mudar drasticamente.\n\n### Grade básica\n\nAs larguras de coluna se aplicam-se a todos os pontos de quebra (breakpoints) (i.e. `xs` e acima).\n\n{{"demo": "pages/components/grid/CenteredGrid.js"}}\n\n### Grade com pontos de interrupção (breakpoints)\n\nAlgumas colunas têm várias larguras definidas, fazendo com que o leiaute seja alterado no ponto de interrupção definido.\n\n{{"demo": "pages/components/grid/FullWidthGrid.js"}}\n\n## Interativo\n\nAbaixo está uma demonstração interativa que permite explorar os resultados visuais das diferentes configurações:\n\n{{"demo": "pages/components/grid/InteractiveGrid.js", "hideHeader": true}}\n\n## Leiaute Automático\n\nO leiaute automático faz com que os *items* compartilhem equitativamente o espaço disponível. Isso também significa que você pode definir a largura de um *item* e os outros automaticamente se redimensionarão em torno dele.\n\n{{"demo": "pages/components/grid/AutoGrid.js"}}\n\n## Grade Complexa\n\nA demonstração a seguir não segue a especificação do Material Design, mas ilustra como a grade pode ser usada para criar leiautes complexos.\n\n{{"demo": "pages/components/grid/ComplexGrid.js"}}\n\n## Grade Aninhada\n\nAs propriedades `container` e `item` são boleanas e independentes. Elas podem ser combinados.\n\n> Um **container** flex é a caixa gerada por um elemento com uma exibição definida por `flex` ou `inline-flex`. Os filhos em um fluxo de um container flex são chamados de flex **items** e são dispostos usando o modelo de leiaute flex (flex layout).\n\nhttps://www.w3.org/TR/css-flexbox-1/#box-model\n\n{{"demo": "pages/components/grid/NestedGrid.js"}}\n\n## Limitações\n\n### Margem negativa\n\nHá uma limitação com a margem negativa que usamos para implementar o espaçamento entre itens. Uma barra de rolagem horizontal irá aparecer se uma margem negativa vai além do `<body>`. Existem 3 soluções disponíveis:\n\n1. Não usar o recurso de espaçamento e implementá-lo no espaço do usuário `spacing={0}` (Padrão).\n2. Aplicando padding ao pai com pelo menos metade do valor de espaçamento aplicado ao filho:\n\n```jsx\n  <body>\n    <div style={{ padding: 20 }}>\n      <Grid container spacing={5}>\n        //...\n      </Grid>\n    </div>\n  </body>\n```\n\n3. Adicionando `overflow-x: hidden;` para o pai.\n\n### white-space: nowrap;\n\nA configuração inicial em itens flexíveis é `min-width: auto`. Isto causa um conflito de posicionamento quando os elementos filhos estão usando `white-space: nowrap`. Você pode enfrentar o problema com:\n\n```jsx\n<Grid item xs>\n  <Typography noWrap>\n```\n\nPara que o item permaneça dentro do contêiner, você precisa definir `min-width: 0`. Na prática, você pode definir a propriedade `zeroMinWidth`:\n\n```jsx\n<Grid item xs zeroMinWidth>\n  <Typography noWrap>\n```\n\n{{"demo": "pages/components/grid/AutoGridNoWrap.js"}}\n\n### direction: column | column-reverse\n\nEmbora o componente `Grid` tenha uma propriedade `direction` que permite valores de `row`, `row-reverse`, `column`, e `column-reverse`, existem algumas funcionalidades que não são suportadas dentro de containers `column` e `column-reverse`. As propriedades que definem o número de grades que o componente usará para um determinado ponto de interrupção (`xs`, `sm`, `md`, `lg`, and `xl`) são focadas no controle da largura e **não** tem efeitos similares na altura dentro de containers `column` e `column-reverse`. Se usados dentro de containers `column` e `column-reverse`, estas propriedades apresentam efeitos indesejáveis na largura dos elementos do `Grid`.\n\n## Leiaute de Grade CSS\n\nMaterial-UI não fornece nenhuma funcionalidade CSS de Grade, mas como pode ser visto abaixo, você pode facilmente usar leiaute de Grade CSS em suas páginas.\n\n{{"demo": "pages/components/grid/CSSGrid.js"}}'},uEQj:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("VPks"),o=a("pQ8Y"),l=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary}}});function c(){var e=l();return r.a.createElement("div",{className:e.root},r.a.createElement(o.a,{container:!0,spacing:3},r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(s.a,{className:e.paper},"xs")),r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(s.a,{className:e.paper},"xs")),r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(s.a,{className:e.paper},"xs"))),r.a.createElement(o.a,{container:!0,spacing:3},r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(s.a,{className:e.paper},"xs")),r.a.createElement(o.a,{item:!0,xs:6},r.a.createElement(s.a,{className:e.paper},"xs=6")),r.a.createElement(o.a,{item:!0,xs:!0},r.a.createElement(s.a,{className:e.paper},"xs"))))}},uNOA:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return u});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("pQ8Y"),o=a("VPks"),l=a("Oy88"),c=a("7QLS"),d=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(2),margin:"auto",maxWidth:500},image:{width:128,height:128},img:{margin:"auto",display:"block",maxWidth:"100%",maxHeight:"100%"}}}),m=r.a.createElement(s.a,{item:!0,xs:!0},r.a.createElement(l.a,{gutterBottom:!0,variant:"subtitle1"},"Standard license"),r.a.createElement(l.a,{variant:"body2",gutterBottom:!0},"Full resolution 1920x1080 • JPEG"),r.a.createElement(l.a,{variant:"body2",color:"textSecondary"},"ID: 1030114")),p=r.a.createElement(s.a,{item:!0},r.a.createElement(l.a,{variant:"subtitle1"},"$19.00"));function u(){var e=d();return r.a.createElement("div",{className:e.root},r.a.createElement(o.a,{className:e.paper},r.a.createElement(s.a,{container:!0,spacing:2},r.a.createElement(s.a,{item:!0},r.a.createElement(c.a,{className:e.image},r.a.createElement("img",{className:e.img,alt:"complex",src:"/static/images/grid/complex.jpg"}))),r.a.createElement(s.a,{item:!0,xs:12,sm:!0,container:!0},r.a.createElement(s.a,{item:!0,xs:!0,container:!0,direction:"column",spacing:2},m,r.a.createElement(s.a,{item:!0},r.a.createElement(l.a,{variant:"body2",style:{cursor:"pointer"}},"Remove"))),p))))}},uWWw:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function NestedGrid() {\n  const classes = useStyles();\n\n  function FormRow() {\n    return (\n      <React.Fragment>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},"v/TQ":function(e,n){e.exports="import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      overflow: 'hidden',\n      padding: theme.spacing(0, 3),\n    },\n    paper: {\n      maxWidth: 400,\n      margin: `${theme.spacing(1)}px auto`,\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"},yFb9:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},"yR+m":function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport default function NestedGrid() {\n  const classes = useStyles();\n\n  function FormRow() {\n    return (\n      <React.Fragment>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>item</Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"},yavi:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return c});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("VPks"),o=a("pQ8Y"),l=Object(i.a)(function(e){return{root:{flexGrow:1},paper:{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary}}});function c(){var e=l();function n(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.a,{item:!0,xs:4},r.a.createElement(s.a,{className:e.paper},"item")),r.a.createElement(o.a,{item:!0,xs:4},r.a.createElement(s.a,{className:e.paper},"item")),r.a.createElement(o.a,{item:!0,xs:4},r.a.createElement(s.a,{className:e.paper},"item")))}return r.a.createElement("div",{className:e.root},r.a.createElement(o.a,{container:!0,spacing:1},r.a.createElement(o.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null)),r.a.createElement(o.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null)),r.a.createElement(o.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null))))}},zAz9:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return u});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("Oy88"),o=a("VPks"),l=a("FAXT"),c=a("pQ8Y"),d=Object(i.a)(function(e){return{container:{display:"grid",gridTemplateColumns:"repeat(12, 1fr)",gridGap:e.spacing(3)},paper:{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary,whiteSpace:"nowrap",marginBottom:e.spacing(1)},divider:{margin:e.spacing(2,0)}}}),m=r.a.createElement(s.a,{variant:"subtitle1",gutterBottom:!0},"Material-UI Grid:"),p=r.a.createElement(s.a,{variant:"subtitle1",gutterBottom:!0},"CSS Grid Layout:");function u(){var e=d();return r.a.createElement("div",null,m,r.a.createElement(c.a,{container:!0,spacing:3},r.a.createElement(c.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(c.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(c.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(c.a,{item:!0,xs:3},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement(c.a,{item:!0,xs:8},r.a.createElement(o.a,{className:e.paper},"xs=8")),r.a.createElement(c.a,{item:!0,xs:4},r.a.createElement(o.a,{className:e.paper},"xs=4"))),r.a.createElement(l.a,{className:e.divider}),p,r.a.createElement("div",{className:e.container},r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 3"}},r.a.createElement(o.a,{className:e.paper},"xs=3")),r.a.createElement("div",{style:{gridColumnEnd:"span 8"}},r.a.createElement(o.a,{className:e.paper},"xs=8")),r.a.createElement("div",{style:{gridColumnEnd:"span 4"}},r.a.createElement(o.a,{className:e.paper},"xs=4"))))}},zkTH:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("mXGw"),r=a.n(t),i=a("yZEQ"),s=a("WLtd"),o=a("VPks"),l=a("pQ8Y"),c=Object(i.a)(function(e){return Object(s.a)({root:{flexGrow:1},paper:{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary}})});function d(){var e=c();function n(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.a,{item:!0,xs:4},r.a.createElement(o.a,{className:e.paper},"item")),r.a.createElement(l.a,{item:!0,xs:4},r.a.createElement(o.a,{className:e.paper},"item")),r.a.createElement(l.a,{item:!0,xs:4},r.a.createElement(o.a,{className:e.paper},"item")))}return r.a.createElement("div",{className:e.root},r.a.createElement(l.a,{container:!0,spacing:1},r.a.createElement(l.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null)),r.a.createElement(l.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null)),r.a.createElement(l.a,{container:!0,item:!0,xs:12,spacing:3},r.a.createElement(n,null))))}}},[["1W9G","5d41","9da1"]]]);