(window.webpackJsonp=window.webpackJsonp||[]).push([["507f"],{AQV7:function(e,n){e.exports='---\ntitle: No SSR React component\ncomponents: NoSsr\n---\n\n# Pas de SSR\n\n<p class="description">NoSsr supprime intentionnellement des composants du rendu côté serveur (SSR).</p>\n\nCe composant peut être utile dans diverses situations:\n\n- Trappe d\'évacuation pour les dépendances qui ne supportent pas le SSR.\n- Améliorer le temps nécessaire pour peindre le client en rendant uniquement le rendu visible à l\'écran.\n- Réduire le temps de rendu sur le serveur.\n- Si la charge du serveur est trop importante, vous pouvez activer une dégradation du service.\n- Améliorez le temps d\'interactivité en ne rendant que ce qui est important (avec la propriété `defer`).\n\n## Report du côté client\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Report d\'une frame\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**. As it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nBut you can also use it to defer the rendering within the client itself. You can **wait a screen frame** with the `defer` property to render the children. React does [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) instead of 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},AzpF:function(e,n){e.exports='---\ntitle: NoSSR React-Komponente\ncomponents: NoSsr\n---\n\n# NoSSR\n\n<p class="description">NoSSR entfernt absichtlich Komponenten aus dem Server Side Rendering (SSR) Theme.</p>\n\nDiese Komponente kann in verschiedenen Situationen nützlich sein:\n\n- Notluke für gebrochene Abhängigkeiten, die SSR nicht unterstützen.\n- Verbessern Sie die Zeit bis zum ersten Rednern beim Client, indem Sie nur über der Klappe rendern.\n- Reduzieren Sie die Renderzeit auf dem Server.\n- Bei zu starker Serverlast können Sie die Dienstverschlechterung aktivieren.\n- Verbessern Sie die Zeit bis zur Interaktion, indem Sie nur das ausgeben, was wichtig ist (mit der `defer` Eigenschaft).\n\n## Aufschiebung der Client-Seite\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Rahmen Verzögerung\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**. As it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nSie können es aber auch verwenden, um das Rendern im Client selbst zu verschieben. Sie können **einen Frame** mit der `defer` Eigenschaft warten, um die Kinder zu erzeugen. React macht [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) anstatt 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},"G/pX":function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    margin: theme.spacing(2),\n  },\n});\n\nfunction SimpleNoSsr(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\n        Server & Client\n      </Button>\n      <NoSsr>\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\n          Client only\n        </Button>\n      </NoSsr>\n    </div>\n  );\n}\n\nSimpleNoSsr.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleNoSsr);\n"},LbkO:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 300,\n    wordBreak: 'break-all',\n  },\n});\n\nfunction LargeTree() {\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\n}\n\nfunction FrameDeferring() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({ open: false, defer: false });\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: false,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"false\"'}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() =>\n          setState({\n            open: !state.open,\n            defer: true,\n          })\n        }\n      >\n        {'Render NoSsr defer=\"true\"'}\n      </button>\n      {state.open ? (\n        <div className={classes.container}>\n          <span>Outside NoSsr</span>\n          <NoSsr defer={state.defer}>\n            ....Inside NoSsr\n            <LargeTree />\n          </NoSsr>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default FrameDeferring;\n"},"M/4d":function(e,n){e.exports='---\ntitle: No SSR React component\ncomponents: NoSsr\n---\n\n# No SSR\n\n<p class="description">NoSsr преднамеренно удаляет компоненты из предмета рендеринга на стороне сервера (SSR).</p>\n\nЭтот компонент может быть полезен в различных ситуациях:\n\n- Escape hatch for broken dependencies not supporting SSR.\n- Improve the time-to-first paint on the client by only rendering above the fold.\n- Сократить время рендеринга на сервере.\n- Under too heavy server load, you can turn on service degradation.\n- Improve the time-to-interactive by only rendering what\'s important (with the `defer` property).\n\n## Отсрочка на стороне клиента\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Frame deferring\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**. As it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nBut you can also use it to defer the rendering within the client itself. You can **wait a screen frame** with the `defer` property to render the children. React does [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) instead of 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},M0cP:function(e,n,t){var r={"./FrameDeferring.js":"LbkO","./SimpleNoSsr.js":"G/pX"};function o(e){var n=s(e);return t(n)}function s(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(r)},o.resolve=s,e.exports=o,o.id="M0cP"},MFdQ:function(e,n){e.exports='---\ntitle: No SSR React component\ncomponents: NoSsr\n---\n\n# No SSR\n\n<p class="description">NoSsr purposely removes components from the subject of Server Side Rendering (SSR).</p>\n\nThis component can be useful in a variety of situations:\n\n- Escape hatch for broken dependencies not supporting SSR.\n- Improve the time-to-first paint on the client by only rendering above the fold.\n- Reduce the rendering time on the server.\n- Under too heavy server load, you can turn on service degradation.\n- Improve the time-to-interactive by only rendering what\'s important (with the `defer` property).\n\n## Client side deferring\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Frame deferring\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**.\nAs it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nBut you can also use it to defer the rendering within the client itself.\nYou can **wait a screen frame** with the `defer` property to render the children.\nReact does [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) instead of 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}\n'},QiLq:function(e,n,t){"use strict";t.r(n);var r=t("mXGw"),o=t.n(r),s=t("XpU0"),i=t("WKBU"),a=t("O8uh");n.default=Object(s.default)(function(e){return{button:{display:"block",margin:e.spacing(2)}}})(function(e){var n=e.classes;return o.a.createElement("div",null,o.a.createElement(a.a,{className:n.button,variant:"contained",color:"primary"},"Server & Client"),o.a.createElement(i.a,null,o.a.createElement(a.a,{className:n.button,variant:"contained",color:"secondary"},"Client only")))})},RrSV:function(e,n){e.exports='---\ntitle: No SSR React component\ncomponents: NoSsr\n---\n\n# No SSR\n\n<p class="description">NoSsrは、サーバーサイドレンダリング（SSR）の対象から意図的にコンポーネントを削除します。</p>\n\nこのコンポーネントは、次のようなさまざまな状況で役立ちます。\n\n- SSRをサポートしていない壊れた依存関係のハッチングをエスケープします。\n- スクロールせずに見える範囲にレンダリングするだけで、クライアントでの最初のペイントまでの時間を改善します。\n- サーバーでのレンダリング時間を短縮します。\n- サーバーの負荷が高すぎる場合、サービスの低下を有効にできます。\n- 重要なものだけをレンダリングすることにより、対話までの時間を改善します（ `defer` プロパティを使用）。\n\n## クライアント側の遅延\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## フレーム延期\n\n中核となるNoSsrコンポーネントの目的は、レンダリングを **遅延することです**。 前のデモで示したように、これを使用して、サーバーからクライアントへのレンダリングを延期できます。\n\nただし、これを使用して、クライアント自体内のレンダリングを延期することもできます。 子をレンダリングするには、 `defer` プロパティでスクリーンフレーム</strong> を **待つことができます。 Reactは1ではなく [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) を行う。</p> \n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},Xbsu:function(e,n){e.exports='---\ntitle: 没有SSR React组件\ncomponents: NoSsr\n---\n\n# 没有SSR\n\n<p class="description">NoSsr故意从服务器端渲染（SSR）主题中删除组件。</p>\n\n该组件可用于各种情况：\n\n- 逃避破坏依赖性的孵化不支持SSR。\n- 通过仅在首屏上呈现来改善客户端上的首次绘制时间。\n- 减少服务器上的渲染时间。\n- 在过重的服务器负载下，您可以打开服务降级。\n- 仅通过渲染重要内容（使用 `defer` 属性）来改善交互时间。\n\n## 客户方推迟\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## 帧推迟\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**. As it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nBut you can also use it to defer the rendering within the client itself. You can **wait a screen frame** with the `defer` property to render the children. React does [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) instead of 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},a7ym:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var r=t("mXGw"),o=t.n(r),s=t("e+1t"),i=t("eP0K"),a=t("M0cP"),d=o.a.createElement(s.a,{req:i,reqSource:a,reqPrefix:"pages/components/no-ssr"});function c(){return d}},"cj/p":function(e,n){e.exports='---\ntitle: crwdns91068:0crwdne91068:0\ncomponents: crwdns91070:0crwdne91070:0\n---\n\n# crwdns91072:0crwdne91072:0\n\n<p class="description">crwdns91074:0crwdne91074:0</p>\n\ncrwdns91076:0crwdne91076:0\n\n- crwdns91078:0crwdne91078:0\n- crwdns91080:0crwdne91080:0\n- crwdns91082:0crwdne91082:0\n- crwdns91084:0crwdne91084:0\n- crwdns91086:0crwdne91086:0\n\n## crwdns91088:0crwdne91088:0\n\ncrwdns91090:0crwdne91090:0\n\n## crwdns91092:0crwdne91092:0\n\ncrwdns91094:0crwdne91094:0 crwdns91096:0crwdne91096:0\n\ncrwdns91098:0crwdne91098:0 crwdns91100:0crwdne91100:0 crwdns91102:0crwdne91102:0\n\ncrwdns91104:0crwdne91104:0'},eP0K:function(e,n,t){var r={"./FrameDeferring.js":"u+Ml","./SimpleNoSsr.js":"QiLq","./no-ssr-aa.md":"cj/p","./no-ssr-de.md":"AzpF","./no-ssr-es.md":"pq/5","./no-ssr-fr.md":"AQV7","./no-ssr-ja.md":"RrSV","./no-ssr-pt.md":"ttDW","./no-ssr-ru.md":"M/4d","./no-ssr-zh.md":"Xbsu","./no-ssr.md":"MFdQ"};function o(e){var n=s(e);return t(n)}function s(e){var n=r[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(r)},o.resolve=s,e.exports=o,o.id="eP0K"},egiY:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/no-ssr",function(){var e=t("a7ym");return{page:e.default||e}}])},"pq/5":function(e,n){e.exports='---\ntitle: No SSR React component\ncomponents: NoSsr\n---\n\n# No SSR\n\n<p class="description">NoSsr purposely removes components from the subject of Server Side Rendering (SSR).</p>\n\nThis component can be useful in a variety of situations:\n\n- Escape hatch for broken dependencies not supporting SSR.\n- Improve the time-to-first paint on the client by only rendering above the fold.\n- Reduce the rendering time on the server.\n- Under too heavy server load, you can turn on service degradation.\n- Improve the time-to-interactive by only rendering what\'s important (with the `defer` property).\n\n## Client side deferring\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Frame deferring\n\nIn it\'s core, the NoSsr component purpose is to **defer rendering**. As it\'s illustrated in the previous demo, you can use it to defer the rendering from the server to the client.\n\nBut you can also use it to defer the rendering within the client itself. You can **wait a screen frame** with the `defer` property to render the children. React does [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) instead of 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},ttDW:function(e,n){e.exports='---\ntitle: Componente React Sem SSR\ncomponents: NoSsr\n---\n\n# Sem SSR\n\n<p class="description">O NoSsr remove intencionalmente componentes do contexto de Server Side Rendering (SSR).</p>\n\nEsse componente pode ser útil em várias situações:\n\n- Válvula de escape para dependências quebradas que não suportam SSR.\n- Melhorar o tempo para a primeira pintura no cliente renderizando somente a primeira parte da página (above the fold).\n- Reduzir o tempo de renderização no servidor.\n- Sob carga de servidor muito pesada, você pode ativar a degradação do serviço.\n- Melhorar o tempo de interação apenas renderizando o que é importante (com a propriedade `defer`).\n\n## Adiamento do lado do cliente\n\n{{"demo": "pages/components/no-ssr/SimpleNoSsr.js"}}\n\n## Adiamento de quadros\n\nEm sua essência, o objetivo do componente NoSsr é **adiar a renderização**. Como está ilustrado na demonstração anterior, você pode usá-lo para adiar a renderização do servidor para o cliente.\n\nMas você também pode usá-lo para adiar a renderização dentro do próprio cliente. Você pode **aguardar um quadro de tela** com a propriedade `defer` para renderizar o children. React faz [2 commits](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects) em vez de 1.\n\n{{"demo": "pages/components/no-ssr/FrameDeferring.js"}}'},"u+Ml":function(e,n,t){"use strict";t.r(n);var r=t("8ET1"),o=t.n(r),s=t("mXGw"),i=t.n(s),a=t("yZEQ"),d=t("WKBU"),c=Object(a.a)({container:{maxWidth:300,wordBreak:"break-all"}});var p=i.a.createElement("span",null,"Outside NoSsr"),m=i.a.createElement(function(){return o()(new Array(3e3)).map(function(e,n){return i.a.createElement("span",{key:n},".")})},null);n.default=function(){var e=c(),n=i.a.useState({open:!1,defer:!1}),t=n[0],r=n[1];return i.a.createElement("div",null,i.a.createElement("button",{type:"button",onClick:function(){return r({open:!t.open,defer:!1})}},'Render NoSsr defer="false"'),i.a.createElement("button",{type:"button",onClick:function(){return r({open:!t.open,defer:!0})}},'Render NoSsr defer="true"'),t.open?i.a.createElement("div",{className:e.container},p,i.a.createElement(d.a,{defer:t.defer},"....Inside NoSsr",m)):null)}}},[["egiY","5d41","9da1"]]]);