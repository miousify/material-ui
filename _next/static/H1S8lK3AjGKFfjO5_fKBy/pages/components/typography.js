(window.webpackJsonp=window.webpackJsonp||[]).push([["e69e"],{"/kLJ":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return v});var o=t("mXGw"),a=t.n(o),i=t("Oy88"),r=t("yZEQ"),s=Object(r.a)({root:{width:"100%",maxWidth:500}}),p=a.a.createElement(i.a,{variant:"h1",component:"h2",gutterBottom:!0},"h1. Heading"),h=a.a.createElement(i.a,{variant:"h2",gutterBottom:!0},"h2. Heading"),l=a.a.createElement(i.a,{variant:"h3",gutterBottom:!0},"h3. Heading"),c=a.a.createElement(i.a,{variant:"h4",gutterBottom:!0},"h4. Heading"),y=a.a.createElement(i.a,{variant:"h5",gutterBottom:!0},"h5. Heading"),u=a.a.createElement(i.a,{variant:"h6",gutterBottom:!0},"h6. Heading"),m=a.a.createElement(i.a,{variant:"subtitle1",gutterBottom:!0},"subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur"),d=a.a.createElement(i.a,{variant:"subtitle2",gutterBottom:!0},"subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur"),g=a.a.createElement(i.a,{variant:"body1",gutterBottom:!0},"body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam."),f=a.a.createElement(i.a,{variant:"body2",gutterBottom:!0},"body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam."),b=a.a.createElement(i.a,{variant:"button",display:"block",gutterBottom:!0},"button text"),w=a.a.createElement(i.a,{variant:"caption",display:"block",gutterBottom:!0},"caption text"),T=a.a.createElement(i.a,{variant:"overline",display:"block",gutterBottom:!0},"overline text");function v(){var n=s();return a.a.createElement("div",{className:n.root},p,h,l,c,y,u,m,d,g,f,b,w,T)}},"0DRA":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return h});var o=t("Rbzu"),a=t("mXGw"),i=t.n(a),r=t("yZEQ"),s=t("WLtd"),p=Object(r.a)(function(n){return Object(s.a)({root:Object(o.a)({},n.typography.button,{backgroundColor:n.palette.background.paper,padding:n.spacing(1)})})});function h(){var n=p();return i.a.createElement("div",{className:n.root},"This div's text looks like that of a button.")}},"11oz":function(n,e,t){var o={"./Types.js":"1CEv","./Types.tsx":"pjzy","./TypographyTheme.js":"SgyF","./TypographyTheme.tsx":"39AR"};function a(n){var e=i(n);return t(e)}function i(n){var e=o[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}a.keys=function(){return Object.keys(o)},a.resolve=i,n.exports=a,a.id="11oz"},"1CEv":function(n,e){n.exports='import React from \'react\';\nimport Typography from \'@material-ui/core/Typography\';\nimport { makeStyles } from \'@material-ui/core/styles\';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \'100%\',\n    maxWidth: 500,\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant="h1" component="h2" gutterBottom>\n        h1. Heading\n      </Typography>\n      <Typography variant="h2" gutterBottom>\n        h2. Heading\n      </Typography>\n      <Typography variant="h3" gutterBottom>\n        h3. Heading\n      </Typography>\n      <Typography variant="h4" gutterBottom>\n        h4. Heading\n      </Typography>\n      <Typography variant="h5" gutterBottom>\n        h5. Heading\n      </Typography>\n      <Typography variant="h6" gutterBottom>\n        h6. Heading\n      </Typography>\n      <Typography variant="subtitle1" gutterBottom>\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant="subtitle2" gutterBottom>\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant="body1" gutterBottom>\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant="body2" gutterBottom>\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant="button" display="block" gutterBottom>\n        button text\n      </Typography>\n      <Typography variant="caption" display="block" gutterBottom>\n        caption text\n      </Typography>\n      <Typography variant="overline" display="block" gutterBottom>\n        overline text\n      </Typography>\n    </div>\n  );\n}\n'},"39AR":function(n,e){n.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\nexport default function TypographyTheme() {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{\"This div's text looks like that of a button.\"}</div>;\n}\n"},"8gq2":function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Use typography to present your design and content as clearly and efficiently as possible.</p>\n\nToo many type sizes and styles at once can spoil any layout. A [typographic scale](https://material.io/design/typography/#type-scale) has a limited set of type sizes that work well together along with the layout grid.\n\n## General\n\nThe *Roboto* font will **not** be automatically loaded by Material-UI. The developer is responsible for loading all fonts used in their application. Roboto Font has a few easy ways to get started. For more advanced configuration, check out [the theme customization section](/customization/typography/).\n\n## Roboto Font CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Install with npm\n\nYou can [install it](https://www.npmjs.com/package/typeface-roboto) by typing the below command in your terminal:\n\n`npm install typeface-roboto --save`\n\nThen, you can import it in your entry-point.\n\n```js\nimport 'typeface-roboto';\n```\n\nFor more info check out the [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) project.\n\n⚠️ Be careful when using this approach. Make sure your bundler doesn't eager load all the font variations (100/300/400/500/700/900, italic/regular, SVG/woff). Inlining all the font files can significantly increase the size of your bundle. Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Component\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Tema\n\nIn some situations you might not be able to use the `Typography` component. Hopefully, you might be able to take advantage of the [`typography`](/customization/default-theme/?expend-path=$.typography) keys of the theme.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Changing the semantic element\n\nThe Typography component uses the `variantMapping` property to associate a UI variant with a semantic element. It’s important to realize that the style of a typography is independent from the semantic underlying element.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- You can change the mapping [globally using the theme](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},"9LC9":function(n,e,t){var o={"./Types.js":"vw/5","./Types.tsx":"/kLJ","./TypographyTheme.js":"JcVV","./TypographyTheme.tsx":"0DRA","./typography-aa.md":"dtGT","./typography-de.md":"rJcV","./typography-es.md":"8gq2","./typography-fr.md":"maPS","./typography-ja.md":"e21w","./typography-pt.md":"jc6r","./typography-ru.md":"KJNJ","./typography-zh.md":"bM7d","./typography.md":"QHNK"};function a(n){var e=i(n);return t(e)}function i(n){var e=o[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}a.keys=function(){return Object.keys(o)},a.resolve=i,n.exports=a,a.id="9LC9"},AAim:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return h});var o=t("mXGw"),a=t.n(o),i=t("e+1t"),r=t("9LC9"),s=t("11oz"),p=a.a.createElement(i.a,{req:r,reqSource:s,reqPrefix:"pages/components/typography"});function h(){return p}},AMAy:function(n,e,t){"use strict";function o(n){return n}t.d(e,"a",function(){return o})},JcVV:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return p});var o=t("Rbzu"),a=t("mXGw"),i=t.n(a),r=t("yZEQ"),s=Object(r.a)(function(n){return{root:Object(o.a)({},n.typography.button,{backgroundColor:n.palette.background.paper,padding:n.spacing(1)})}});function p(){var n=s();return i.a.createElement("div",{className:n.root},"This div's text looks like that of a button.")}},KJNJ:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Use typography to present your design and content as clearly and efficiently as possible.</p>\n\nToo many type sizes and styles at once can spoil any layout. A [typographic scale](https://material.io/design/typography/#type-scale) has a limited set of type sizes that work well together along with the layout grid.\n\n## General\n\nThe *Roboto* font will **not** be automatically loaded by Material-UI. The developer is responsible for loading all fonts used in their application. Roboto Font has a few easy ways to get started. For more advanced configuration, check out [the theme customization section](/customization/typography/).\n\n## Roboto Font CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Install with npm\n\nYou can [install it](https://www.npmjs.com/package/typeface-roboto) by typing the below command in your terminal:\n\n`npm install typeface-roboto --save`\n\nThen, you can import it in your entry-point.\n\n```js\nimport 'typeface-roboto';\n```\n\nFor more info check out the [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) project.\n\n⚠️ Be careful when using this approach. Make sure your bundler doesn't eager load all the font variations (100/300/400/500/700/900, italic/regular, SVG/woff). Inlining all the font files can significantly increase the size of your bundle. Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Component\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Theme\n\nВ некоторых ситуациях вы не сможете использовать компонент `Typography`. Hopefully, you might be able to take advantage of the [`typography`](/customization/default-theme/?expend-path=$.typography) keys of the theme.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Изменение семантического элемента\n\nThe Typography component uses the `variantMapping` property to associate a UI variant with a semantic element. It’s important to realize that the style of a typography is independent from the semantic underlying element.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- You can change the mapping [globally using the theme](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},QHNK:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Use typography to present your design and content as clearly and efficiently as possible.</p>\n\nToo many type sizes and styles at once can spoil any layout.\nA [typographic scale](https://material.io/design/typography/#type-scale) has a limited set of type sizes that work well together along with the layout grid.\n\n## General\n\nThe *Roboto* font will **not** be automatically loaded by Material-UI.\nThe developer is responsible for loading all fonts used in their application.\nRoboto Font has a few easy ways to get started. For more advanced configuration, check out\n[the theme customization section](/customization/typography/).\n\n## Roboto Font CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Install with npm\n\nYou can [install it](https://www.npmjs.com/package/typeface-roboto) by typing the below command in your terminal:\n\n`npm install typeface-roboto --save`\n\nThen, you can import it in your entry-point.\n\n```js\nimport 'typeface-roboto';\n```\n\nFor more info check out the [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) project.\n\n⚠️ Be careful when using this approach.\nMake sure your bundler doesn't eager load all the font variations (100/300/400/500/700/900, italic/regular, SVG/woff).\nInlining all the font files can significantly increase the size of your bundle.\nMaterial-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Component\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Theme\n\nIn some situations you might not be able to use the `Typography` component.\nHopefully, you might be able to take advantage of the [`typography`](/customization/default-theme/?expend-path=$.typography) keys of the theme.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Changing the semantic element\n\nThe Typography component uses the `variantMapping` property to associate a UI variant with a semantic element.\nIt’s important to realize that the style of a typography is independent from the semantic underlying element.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- You can change the mapping [globally using the theme](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```\n"},SgyF:function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function TypographyTheme() {\n  const classes = useStyles();\n\n  return <div className={classes.root}>{\"This div's text looks like that of a button.\"}</div>;\n}\n"},WLtd:function(n,e,t){"use strict";t.d(e,"a",function(){return a});var o=t("AMAy");function a(n){return Object(o.a)(n)}},bM7d:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">使用活版印刷可以尽可能清晰、高效地呈现您的设计和内容。</p>\n\n一次太多的类型大小和样式会破坏任何布局。 [版式比例](https://material.io/design/typography/#type-scale)是一组有限的类型大小, 与布局网格一起工作很好。\n\n## 常规\n\n*Roboto*字体将**不** 由Material-UI 自动加载。 开发人员负责加载应用程序中使用的所有字体。 Roboto字体有几个简单的方法来开始。 For more advanced configuration, check out [the theme customization section](/customization/typography/).\n\n## Roboto 字体 CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## 通过 npm 安装\n\n通过在终端中键入以下命令, 可以 [安装](https://www.npmjs.com/package/typeface-roboto):\n\n`npm install typeface-roboto --save`\n\n然后, 您可以将其导入到您的入口点。\n\n```js\nimport 'typeface-roboto';\n```\n\n有关详细信息, 请查看 [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) 项目。\n\n⚠️使用这种方法时要小心。 确保您的包不急于加载所有字体变体 (100/300/400/500/700/900, 斜体/常规, SVG/woff)。 内联所有字体文件可以显着增加捆绑包的大小。 Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## 组件\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## 主题\n\n在某些情况下，您可能无法使用 `Typography` 组件。 希望您可以利用主题的 [`排版`](/customization/default-theme/?expend-path=$.typography) 键。\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## 改变语义元素\n\nTypography组件使用 `variantMapping` 属性将某一种UI变体与某一种语义元素标签相关联。 有一点需要意识到： 一个Typography的style是独立于其底层语义化标签的\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- 你也可以通过theme[全局改变](/customization/globals/#default-props)对应关联:\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},cB7h:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/typography",function(){var n=t("AAim");return{page:n.default||n}}])},dtGT:function(n,e){n.exports='---\ncomponents: crwdns92628:0crwdne92628:0\n---\n\n# crwdns92630:0crwdne92630:0\n\n<p class="description">crwdns92632:0crwdne92632:0</p>\n\ncrwdns92634:0crwdne92634:0 crwdns92636:0crwdne92636:0\n\n## crwdns92638:0crwdne92638:0\n\ncrwdns92640:0crwdne92640:0 crwdns92642:0crwdne92642:0 crwdns92644:0crwdne92644:0 crwdns92646:0crwdne92646:0\n\n## crwdns92648:0crwdne92648:0\n\ncrwdns92650:0crwdne92650:0\n\n```html\ncrwdns92652:0crwdne92652:0\n```\n\n## crwdns92654:0crwdne92654:0\n\ncrwdns92656:0crwdne92656:0\n\n`crwdns92658:0crwdne92658:0`\n\ncrwdns92660:0crwdne92660:0\n\n```js\ncrwdns92662:0crwdne92662:0\n```\n\ncrwdns92664:0crwdne92664:0\n\ncrwdns92666:0crwdne92666:0 crwdns92668:0crwdne92668:0 crwdns92670:0crwdne92670:0 crwdns92672:0crwdne92672:0\n\n## crwdns92674:0crwdne92674:0\n\ncrwdns92676:0crwdne92676:0\n\n## crwdns92678:0crwdne92678:0\n\ncrwdns92680:0crwdne92680:0 crwdns92682:0crwdne92682:0\n\ncrwdns92684:0crwdne92684:0\n\n## crwdns92686:0crwdne92686:0\n\ncrwdns92688:0crwdne92688:0 crwdns92690:0crwdne92690:0\n\n- crwdns92692:0crwdne92692:0\n\n```jsx\ncrwdns92694:0crwdne92694:0 crwdns92696:0crwdne92696:0 crwdns92698:0crwdne92698:0\n```\n\n- crwdns92700:0crwdne92700:0\n\n```js\ncrwdns92702:0crwdne92702:0\n```'},e21w:function(n,e){n.exports="---\ncomponents: タイポグラフィ\n---\n\n# タイポグラフィ\n\n<p class=\"description\">Use typography to present your design and content as clearly and efficiently as possible.</p>\n\nToo many type sizes and styles at once can spoil any layout. A [typographic scale](https://material.io/design/typography/#type-scale) has a limited set of type sizes that work well together along with the layout grid.\n\n## General\n\nThe *Roboto* font will **not** be automatically loaded by Material-UI. The developer is responsible for loading all fonts used in their application. Roboto Font has a few easy ways to get started. For more advanced configuration, check out [the theme customization section](/customization/typography/).\n\n## Roboto Font CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Install with npm\n\nYou can [install it](https://www.npmjs.com/package/typeface-roboto) by typing the below command in your terminal:\n\n`npm install typeface-roboto --save`\n\nThen, you can import it in your entry-point.\n\n```js\nimport 'typeface-roboto';\n```\n\nFor more info check out the [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) project.\n\n⚠️ Be careful when using this approach. Make sure your bundler doesn't eager load all the font variations (100/300/400/500/700/900, italic/regular, SVG/woff). Inlining all the font files can significantly increase the size of your bundle. Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Component\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## テーマ\n\nIn some situations you might not be able to use the `Typography` component. Hopefully, you might be able to take advantage of the [`typography`](/customization/default-theme/?expend-path=$.typography) keys of the theme.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Changing the semantic element\n\nThe Typography component uses the `variantMapping` property to associate a UI variant with a semantic element. It’s important to realize that the style of a typography is independent from the semantic underlying element.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- You can change the mapping [globally using the theme](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},jc6r:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Use a tipografia para apresentar seu design e conteúdo da forma mais clara e eficiente possível.</p>\n\nO uso de diferentes tamanhos e estilos de uma só vez pode estragar qualquer layout. Uma [escala tipográfica](https://material.io/design/typography/#type-scale) tem um conjunto limitado de tamanhos de tipo que funcionam bem em conjunto com a grade de layout.\n\n## Geral\n\nA fonte *Roboto* **não** será carregada automaticamente pelo Material-UI. O desenvolvedor é responsável por carregar todas as fontes usadas em sua aplicação. A fonte Roboto possui algumas maneiras fáceis de começar. Para configuração mais avançadas, dê uma olhada na [seção de personalização de temas](/customization/typography/).\n\n## CDN da fonte Roboto\n\nTemos abaixo um exemplo de markup de link usado para carregar a fonte Roboto de um CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Instalar via npm\n\nVocê pode [instalá-la](https://www.npmjs.com/package/typeface-roboto) digitando o comando a seguir em um terminal:\n\n`npm install typeface-roboto --save`\n\nEntão, você pode importá-la no seu ponto de entrada (entry-point).\n\n```js\nimport 'typeface-roboto';\n```\n\nPara mais informações confira o projeto [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto).\n\n⚠️ Tome cuidado ao usar essa abordagem. Certifique-se de que seu bundler não carregue ansiosamente todas as variações da fonte (100/300/400/500/700/900, itálico/regular, SVG/woff). Colocar todos os arquivos de fonte em linha pode aumentar o tamanho do seu pacote significativamente. A configuração de tipografia padrão do Material-UI depende apenas dos pesos de fonte de 300, 400, 500 e 700.\n\n## Componente\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Tema\n\nEm algumas situações, talvez você não consiga usar o componente `Tipografia`. Com sorte, você possa talvez tirar proveito das chaves de [`typography`](/customization/default-theme/?expend-path=$.typography) do tema.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Alterando o elemento semântico\n\nO componente de Tipografia (Typography) usa a propriedade `variantMapping` para associar a variação da UI com um elemento semântico. É importante ressaltar que o estilo de uma tipografia é independente do elemento semântico por baixo dela.\n\n- Você pode alterar o elemento subjacente para uma ocasião única com a propriedade `component`:\n\n```jsx\n{/ * Já temos um h1 na página, não vamos duplicá-lo. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Título\n</Typography>\n```\n\n- Você pode alterar o mapeamento [globalmente usando o tema](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},maPS:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Use typography to present your design and content as clearly and efficiently as possible.</p>\n\nToo many type sizes and styles at once can spoil any layout. A [typographic scale](https://material.io/design/typography/#type-scale) has a limited set of type sizes that work well together along with the layout grid.\n\n## General\n\nThe *Roboto* font will **not** be automatically loaded by Material-UI. The developer is responsible for loading all fonts used in their application. Roboto Font has a few easy ways to get started. For more advanced configuration, check out [the theme customization section](/customization/typography/).\n\n## Roboto Font CDN\n\nShown below is a sample link markup used to load the Roboto font from a CDN:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Install with npm\n\nYou can [install it](https://www.npmjs.com/package/typeface-roboto) by typing the below command in your terminal:\n\n`npm install typeface-roboto --save`\n\nThen, you can import it in your entry-point.\n\n```js\nimport 'typeface-roboto';\n```\n\nFor more info check out the [typeface](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto) project.\n\n⚠️ Be careful when using this approach. Make sure your bundler doesn't eager load all the font variations (100/300/400/500/700/900, italic/regular, SVG/woff). Inlining all the font files can significantly increase the size of your bundle. Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Component\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Thème\n\nIn some situations you might not be able to use the `Typography` component. Hopefully, you might be able to take advantage of the [`typography`](/customization/default-theme/?expend-path=$.typography) keys of the theme.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Changing the semantic element\n\nThe Typography component uses the `variantMapping` property to associate a UI variant with a semantic element. It’s important to realize that the style of a typography is independent from the semantic underlying element.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- You can change the mapping [globally using the theme](/customization/globals/#default-props):\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},pjzy:function(n,e){n.exports='import React from \'react\';\nimport Typography from \'@material-ui/core/Typography\';\nimport { makeStyles } from \'@material-ui/core/styles\';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \'100%\',\n    maxWidth: 500,\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant="h1" component="h2" gutterBottom>\n        h1. Heading\n      </Typography>\n      <Typography variant="h2" gutterBottom>\n        h2. Heading\n      </Typography>\n      <Typography variant="h3" gutterBottom>\n        h3. Heading\n      </Typography>\n      <Typography variant="h4" gutterBottom>\n        h4. Heading\n      </Typography>\n      <Typography variant="h5" gutterBottom>\n        h5. Heading\n      </Typography>\n      <Typography variant="h6" gutterBottom>\n        h6. Heading\n      </Typography>\n      <Typography variant="subtitle1" gutterBottom>\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant="subtitle2" gutterBottom>\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant="body1" gutterBottom>\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant="body2" gutterBottom>\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant="button" display="block" gutterBottom>\n        button text\n      </Typography>\n      <Typography variant="caption" display="block" gutterBottom>\n        caption text\n      </Typography>\n      <Typography variant="overline" display="block" gutterBottom>\n        overline text\n      </Typography>\n    </div>\n  );\n}\n'},rJcV:function(n,e){n.exports="---\ncomponents: Typography\n---\n\n# Typography\n\n<p class=\"description\">Verwenden Sie die Typografie, um Ihr Design und Ihren Inhalt so klar und effizient wie möglich darzustellen.</p>\n\nZu viele Schriftgrößen und -stile gleichzeitig können jedes Layout beeinträchtigen. Eine [typografische Skala](https://material.io/design/typography/#type-scale) hat einen begrenzten Satz von Schriftgrößen, die gut mit dem Layoutraster zusammenarbeiten.\n\n## Allgemein\n\nDie *Roboto* Schriftart wird **nicht** automatisch durch Material UI geladen werden. Der Entwickler ist dafür verantwortlich, alle, in seiner Anwendung verwendeten, Schriftarten zu laden. Roboto Font bietet einige einfache Einstiegsmöglichkeiten. Für anspruchsvollere Konfiguration, besuche [den Theme Anpassung Abschnitt](/customization/typography/).\n\n## Die Roboto Schrift\n\nUnten ist ein Beispiel für ein Link-Markup zum Laden der Roboto-Schriftart von einem CDN dargestellt:\n\n```html\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n```\n\n## Mit npm installieren\n\nSie können [diese installieren](https://www.npmjs.com/package/typeface-roboto) durch den folgenden Befehl im Terminal:\n\n`npm install typeface-roboto --save`\n\nDann können Sie es in Ihren Einstiegspunkt importieren.\n\n```js\nimport 'typeface-roboto';\n```\n\nWeitere Informationen finden Sie im [Schriftprojekt](https://github.com/KyleAMathews/typefaces/tree/master/packages/roboto).\n\n⚠️ Seien Sie vorsichtig, wenn Sie diesen Ansatz verwenden. Stellen Sie sicher, dass Ihr Bundler nicht alle Schriftvarianten läd (100/300/400/500/700/900, kursiv / normal, SVG / woff). Durch das Einbetten aller Schriftdateien kann die Größe Ihres Bundles erheblich erhöht werden. Material-UI default typography configuration only relies on 300, 400, 500, and 700 font weights.\n\n## Komponente\n\n{{\"demo\": \"pages/components/typography/Types.js\"}}\n\n## Theme\n\nIn einigen Situationen können Sie möglicherweise die Komponente `Typography` nicht benutzen. Hoffentlich können Sie die Hauptfunktionalitäten der [`Typografie`](/customization/default-theme/?expend-path=$.typography) des Themas nutzen.\n\n{{\"demo\": \"pages/components/typography/TypographyTheme.js\"}}\n\n## Ändern des semantischen Elements\n\nDie Komponente Typografie verwendet die Eigenschaft `variantMapping` um eine UI-Variante einem semantischen Element zuzuordnen. Es ist wichtig zu wissen, dass der Stil einer Typografie unabhängig von dem zugrunde liegenden semantischen Element ist.\n\n- You can change the underlying element for a one time occasion with the `component` property:\n\n```jsx\n{/* We already have an h1 in the page, let's not duplicate it. */}\n<Typography variant=\"h1\" component=\"h2\">\n  h1. Heading\n</Typography>\n```\n\n- Sie können das Mapping [global mit dem Theme](/customization/globals/#default-props) ändern:\n\n```js\nconst theme = createMuiTheme({\n  props: {\n    MuiTypography: {\n      variantMapping: {\n        h1: 'h2',\n        h2: 'h2',\n        h3: 'h2',\n        h4: 'h2',\n        h5: 'h2',\n        h6: 'h2',\n        subtitle1: 'h2',\n        subtitle2: 'h2',\n        body1: 'span',\n        body2: 'span',\n      },\n    },\n  },\n});\n```"},"vw/5":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return v});var o=t("mXGw"),a=t.n(o),i=t("Oy88"),r=t("yZEQ"),s=Object(r.a)({root:{width:"100%",maxWidth:500}}),p=a.a.createElement(i.a,{variant:"h1",component:"h2",gutterBottom:!0},"h1. Heading"),h=a.a.createElement(i.a,{variant:"h2",gutterBottom:!0},"h2. Heading"),l=a.a.createElement(i.a,{variant:"h3",gutterBottom:!0},"h3. Heading"),c=a.a.createElement(i.a,{variant:"h4",gutterBottom:!0},"h4. Heading"),y=a.a.createElement(i.a,{variant:"h5",gutterBottom:!0},"h5. Heading"),u=a.a.createElement(i.a,{variant:"h6",gutterBottom:!0},"h6. Heading"),m=a.a.createElement(i.a,{variant:"subtitle1",gutterBottom:!0},"subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur"),d=a.a.createElement(i.a,{variant:"subtitle2",gutterBottom:!0},"subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur"),g=a.a.createElement(i.a,{variant:"body1",gutterBottom:!0},"body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam."),f=a.a.createElement(i.a,{variant:"body2",gutterBottom:!0},"body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam."),b=a.a.createElement(i.a,{variant:"button",display:"block",gutterBottom:!0},"button text"),w=a.a.createElement(i.a,{variant:"caption",display:"block",gutterBottom:!0},"caption text"),T=a.a.createElement(i.a,{variant:"overline",display:"block",gutterBottom:!0},"overline text");function v(){var n=s();return a.a.createElement("div",{className:n.root},p,h,l,c,y,u,m,d,g,f,b,w,T)}}},[["cB7h","5d41","9da1"]]]);