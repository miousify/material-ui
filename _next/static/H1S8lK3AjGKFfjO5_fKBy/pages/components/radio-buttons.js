(window.webpackJsonp=window.webpackJsonp||[]).push([["2a64"],{"+j9t":function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("Rbzu"),l=a("mXGw"),i=a.n(l),c=a("PDtE"),s=a("ADfD"),d=a("Hg0Q"),u=a("XpU0"),m=i.a.forwardRef(function(e,n){var a=e.classes,r=e.className,l=e.component,u=void 0===l?"p":l,m=(e.disabled,e.error,e.filled,e.focused,e.margin,e.required,e.variant,Object(t.a)(e,["classes","className","component","disabled","error","filled","focused","margin","required","variant"])),p=Object(d.a)(),b=Object(s.a)({props:e,muiFormControl:p,states:["variant","margin","disabled","error","filled","focused","required"]});return i.a.createElement(u,Object(o.default)({className:Object(c.a)(a.root,("filled"===b.variant||"outlined"===b.variant)&&a.contained,r,b.disabled&&a.disabled,b.error&&a.error,b.filled&&a.filled,b.focused&&a.focused,b.required&&a.required,{dense:a.marginDense}[b.margin]),ref:n},m))});n.a=Object(u.default)(function(e){return{root:Object(r.a)({color:e.palette.text.secondary},e.typography.caption,{textAlign:"left",marginTop:8,lineHeight:"1em",minHeight:"1em",margin:0,"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),error:{},disabled:{},marginDense:{marginTop:4},contained:{margin:"8px 12px 0"},focused:{},filled:{},required:{}}},{name:"MuiFormHelperText"})(m)},"/WYC":function(e,n){e.exports='---\ntitle: Radio buttons React component\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Radio buttons\n\n<p class="description">Radio buttons allow the user to select one option from a set.</p>\n\nUse [radio buttons](https://material.io/design/components/selection-controls.html#radio-buttons) when the user needs to see all available options. Если доступные параметры можно свернуть, возможно лучше использовать раскрывающееся меню, так как оно занимает меньше места.\n\nДля радиокнопок наиболее часто используемый параметр должен быть выбран по умолчанию.\n\n`RadioGroup` - это полезная обертка, используемая для группировки `компонентов Radio`, она обеспечивает более простой API и управление с клавиатуры.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Автономные радиокнопки\n\n`Радио` также можно использовать отдельно, без обертки.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Расположение метки\n\nРасположение метки можно изменить:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Доступность\n\nВсе элементы формы должны иметь метки, в том числе радиокнопки, переключатели и чекбоксы. В большинстве случаев это делается с помощью элемента `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nКогда метка не может быть использована, необходимо добавить атрибут непосредственно на поле ввода. В этом случае можно применить дополнительный атрибут (например, `aria-label`, `aria-labelledby`, `title`) через свойство `inputProps`.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Guidance\n\n- [Checkboxes vs. Radio Buttons (радиокнопки)](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},"08yW":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return P});var o=a("mXGw"),t=a.n(o),r=a("yZEQ"),l=a("WLtd"),i=a("rkid"),c=a("HiUD"),s=a("+j9t"),d=a("Lqxv"),u=a("Nulz"),m=a("7RiP"),p=Object(r.a)(function(e){return Object(l.a)({root:{display:"flex"},formControl:{margin:e.spacing(3)},group:{margin:e.spacing(1,0)}})}),b=t.a.createElement(m.a,{component:"legend"},"Gender"),f=t.a.createElement(d.a,{value:"female",control:t.a.createElement(i.a,null),label:"Female"}),h=t.a.createElement(d.a,{value:"male",control:t.a.createElement(i.a,null),label:"Male"}),v=t.a.createElement(d.a,{value:"other",control:t.a.createElement(i.a,null),label:"Other"}),g=t.a.createElement(d.a,{value:"disabled",disabled:!0,control:t.a.createElement(i.a,null),label:"(Disabled option)"}),R=t.a.createElement(m.a,{component:"legend"},"Gender"),C=t.a.createElement(d.a,{value:"female",control:t.a.createElement(i.a,{color:"primary"}),label:"Female",labelPlacement:"start"}),F=t.a.createElement(d.a,{value:"male",control:t.a.createElement(i.a,{color:"primary"}),label:"Male",labelPlacement:"start"}),w=t.a.createElement(d.a,{value:"other",control:t.a.createElement(i.a,{color:"primary"}),label:"Other",labelPlacement:"start"}),E=t.a.createElement(d.a,{value:"disabled",disabled:!0,control:t.a.createElement(i.a,null),label:"(Disabled option)",labelPlacement:"start"}),k=t.a.createElement(s.a,null,"labelPlacement start");function P(){var e=p(),n=t.a.useState("female"),a=n[0],o=n[1];function r(e){o(e.target.value)}return t.a.createElement("div",{className:e.root},t.a.createElement(u.a,{component:"fieldset",className:e.formControl},b,t.a.createElement(c.a,{"aria-label":"gender",name:"gender1",className:e.group,value:a,onChange:r},f,h,v,g)),t.a.createElement(u.a,{component:"fieldset",className:e.formControl},R,t.a.createElement(c.a,{"aria-label":"gender",name:"gender2",className:e.group,value:a,onChange:r},C,F,w,E),k))}},"30TH":function(e,n,a){var o={"./FormControlLabelPosition.js":"HlHk","./FormControlLabelPosition.tsx":"R6cH","./RadioButtons.js":"Z42R","./RadioButtons.tsx":"moDo","./RadioButtonsGroup.js":"7O4Z","./RadioButtonsGroup.tsx":"NPKC"};function t(e){var n=r(e);return a(n)}function r(e){var n=o[e];if(!(n+1)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n}t.keys=function(){return Object.keys(o)},t.resolve=r,e.exports=t,t.id="30TH"},"7O4Z":function(e,n){e.exports='import React from \'react\';\nimport { makeStyles } from \'@material-ui/core/styles\';\nimport Radio from \'@material-ui/core/Radio\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \'flex\',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  group: {\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nexport default function RadioButtonsGroup() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\'female\');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Gender</FormLabel>\n        <RadioGroup\n          aria-label="gender"\n          name="gender1"\n          className={classes.group}\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel value="female" control={<Radio />} label="Female" />\n          <FormControlLabel value="male" control={<Radio />} label="Male" />\n          <FormControlLabel value="other" control={<Radio />} label="Other" />\n          <FormControlLabel\n            value="disabled"\n            disabled\n            control={<Radio />}\n            label="(Disabled option)"\n          />\n        </RadioGroup>\n      </FormControl>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Gender</FormLabel>\n        <RadioGroup\n          aria-label="gender"\n          name="gender2"\n          className={classes.group}\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value="female"\n            control={<Radio color="primary" />}\n            label="Female"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="male"\n            control={<Radio color="primary" />}\n            label="Male"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="other"\n            control={<Radio color="primary" />}\n            label="Other"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="disabled"\n            disabled\n            control={<Radio />}\n            label="(Disabled option)"\n            labelPlacement="start"\n          />\n        </RadioGroup>\n        <FormHelperText>labelPlacement start</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n'},"7RiP":function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("Rbzu"),l=a("mXGw"),i=a.n(l),c=a("PDtE"),s=a("ADfD"),d=a("Hg0Q"),u=a("XpU0"),m=i.a.forwardRef(function(e,n){var a=e.children,r=e.classes,l=e.className,u=e.component,m=void 0===u?"label":u,p=(e.disabled,e.error,e.filled,e.focused,e.required,Object(t.a)(e,["children","classes","className","component","disabled","error","filled","focused","required"])),b=Object(d.a)(),f=Object(s.a)({props:e,muiFormControl:b,states:["required","focused","disabled","error","filled"]});return i.a.createElement(m,Object(o.default)({className:Object(c.a)(r.root,l,f.disabled&&r.disabled,f.error&&r.error,f.filled&&r.filled,f.focused&&r.focused,f.required&&r.required),ref:n},p),a,f.required&&i.a.createElement("span",{className:Object(c.a)(r.asterisk,f.error&&r.error)}," ","*"))});n.a=Object(u.default)(function(e){return{root:Object(r.a)({color:e.palette.text.secondary},e.typography.body1,{lineHeight:1,padding:0,"&$focused":{color:e.palette.primary["light"===e.palette.type?"dark":"light"]},"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),focused:{},disabled:{},error:{},filled:{},required:{},asterisk:{"&$error":{color:e.palette.error.main}}}},{name:"MuiFormLabel"})(m)},"9fQU":function(e,n,a){"use strict";var o=a("mXGw"),t=a.n(o),r=a("0Zz2");n.a=Object(r.a)(t.a.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked")},AMAy:function(e,n,a){"use strict";function o(e){return e}a.d(n,"a",function(){return o})},BT9p:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=a("PDtE"),c=a("XpU0"),s=l.a.forwardRef(function(e,n){var a=e.classes,r=e.className,c=e.row,s=void 0!==c&&c,d=Object(t.a)(e,["classes","className","row"]);return l.a.createElement("div",Object(o.default)({className:Object(i.a)(a.root,r,s&&a.row),ref:n},d))});n.a=Object(c.default)({root:{display:"flex",flexDirection:"column",flexWrap:"wrap"},row:{flexDirection:"row"}},{name:"MuiFormGroup"})(s)},"D/jw":function(e,n){e.exports='---\ntitle: Radio buttons React component\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Radio buttons\n\n<p class="description">Radio buttons allow the user to select one option from a set.</p>\n\nUse [radio buttons](https://material.io/design/components/selection-controls.html#radio-buttons) when the user needs to see all available options.\nIf available options can be collapsed, consider using a dropdown menu because it uses less space.\n\nRadio buttons should have the most commonly used option selected by default.\n\n`RadioGroup` is a helpful wrapper used to group `Radio` components that provides an easier API, and proper keyboard accessibility to the group.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Standalone Radio Buttons\n\n`Radio` can also be used standalone, without the wrapper.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Label placement\n\nYou can change the placement of the label:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Accessibility\n\nAll form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the `<label>` element ([FormControlLabel](/api/form-control-label/)).\n\nWhen a label can\'t be used, it\'s necessary to add an attribute directly to the input component.\nIn this case, you can apply the additional attribute (e.g. `aria-label`, `aria-labelledby`, `title`) via the `inputProps` property.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Guidance\n\n- [Checkboxes vs. Radio Buttons](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)\n'},DEXo:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return b});var o=a("z3IF"),t=a("mXGw"),r=a.n(t),l=a("XpU0"),i=a("FJkE"),c=a("rkid"),s=a("9fQU"),d=a("xbPQ"),u=Object(l.default)({root:{color:i.default[400],"&$checked":{color:i.default[600]}},checked:{}})(function(e){return r.a.createElement(c.a,Object(o.default)({color:"default"},e))}),m=r.a.createElement(s.a,{fontSize:"small"}),p=r.a.createElement(d.a,{fontSize:"small"});function b(){var e=r.a.useState("a"),n=e[0],a=e[1];function o(e){a(e.target.value)}return r.a.createElement("div",null,r.a.createElement(c.a,{checked:"a"===n,onChange:o,value:"a",name:"radio-button-demo",inputProps:{"aria-label":"A"}}),r.a.createElement(c.a,{checked:"b"===n,onChange:o,value:"b",name:"radio-button-demo",inputProps:{"aria-label":"B"}}),r.a.createElement(u,{checked:"c"===n,onChange:o,value:"c",name:"radio-button-demo",inputProps:{"aria-label":"C"}}),r.a.createElement(c.a,{checked:"d"===n,onChange:o,value:"d",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"D"}}),r.a.createElement(c.a,{checked:"e"===n,onChange:o,value:"e",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"E"},icon:m,checkedIcon:p}))}},EBfL:function(e,n){e.exports='---\ntitle: Radio buttons React component\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Boutons radio\n\n<p class="description">Les radios buttons permettent a l\'utilisateur de sélectionner un choix parmi un ensemble de choix.</p>\n\nIci [buttons radio](https://material.io/design/components/selection-controls.html#radio-buttons) toutes les options. Si les options disponibles peuvent être réduites, envisagez d\'utiliser un menu déroulant, car il utilise moins d\'espace disponibles.\n\nGénéralement, les cases d\'option doivent avoir l\'option la plus utilisée sélectionnée par défaut.\n\n`RadioGroup` est un gestionnaire utile pour regrouper des composants `Radio` qui fournit une API plus facile et une accessibilité adéquate au clavier.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Standalone Radio Buttons\n\n`Radio` can also be used standalone, without the wrapper.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Emplacement du label\n\nVous pouvez changer l\'emplacement du label:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Accessibilité\n\nTous les contrôles de formulaire doivent avoir des labels, cela vaut également pour les boutons radio, les cases à cocher et les interrupteurs. Dans la plupart des cas, cela se fait en utilisant l\'élément `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nLorsqu\'un label ne peut pas être utilisé, il est nécessaire d\'ajouter un attribut directement au composant input. Dans ce cas, vous pouvez appliquer l\'attribut supplémentaire (ex: `aria-label`, `aria-labelledby`, `title`) via la propriété `inputProps`.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Conseils\n\n- [Checkboxes vs. Cases d’option](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},FJkE:function(e,n,a){"use strict";a.r(n);n.default={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"}},Hg0Q:function(e,n,a){"use strict";a.d(n,"a",function(){return l});var o=a("mXGw"),t=a.n(o),r=a("zpLS");function l(){return t.a.useContext(r.a)}},HiUD:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=(a("FIWN"),a("BT9p")),c=a("c1Jj"),s=a("o5em"),d=l.a.forwardRef(function(e,n){var a=e.actions,r=e.children,d=e.name,u=e.value,m=e.onChange,p=Object(t.a)(e,["actions","children","name","value","onChange"]),b=l.a.useRef(null),f=l.a.useRef(null!=u).current,h=l.a.useState(function(){return f?null:e.defaultValue}),v=h[0],g=h[1];l.a.useImperativeHandle(a,function(){return{focus:function(){var e=b.current.querySelector("input:not(:disabled):checked");e||(e=b.current.querySelector("input:not(:disabled)")),e&&e.focus()}}},[]),l.a.useEffect(function(){},[u,f]);var R={name:d,onChange:function(e){f||g(e.target.value),m&&m(e,e.target.value)},value:f?u:v},C=Object(c.c)(n,b);return l.a.createElement(i.a,Object(o.default)({role:"radiogroup",ref:C},p),l.a.createElement(s.a.Provider,{value:R},r))});n.a=d},HlHk:function(e,n){e.exports='import React from \'react\';\nimport Radio from \'@material-ui/core/Radio\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\n\nexport default function FormControlLabelPosition() {\n  const [value, setValue] = React.useState(\'female\');\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">labelPlacement</FormLabel>\n      <RadioGroup aria-label="position" name="position" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value="top"\n          control={<Radio color="primary" />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Radio color="primary" />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Radio color="primary" />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel\n          value="end"\n          control={<Radio color="primary" />}\n          label="End"\n          labelPlacement="end"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},Lqxv:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=a("PDtE"),c=a("Hg0Q"),s=a("XpU0"),d=a("Oy88"),u=a("GbnF"),m=l.a.forwardRef(function(e,n){e.checked;var a=e.classes,r=e.className,s=e.control,m=e.disabled,p=(e.inputRef,e.label),b=e.labelPlacement,f=void 0===b?"end":b,h=(e.name,e.onChange,e.value,Object(t.a)(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),v=Object(c.a)(),g=m;void 0===g&&void 0!==s.props.disabled&&(g=s.props.disabled),void 0===g&&v&&(g=v.disabled);var R={disabled:g};return["checked","name","onChange","value","inputRef"].forEach(function(n){void 0===s.props[n]&&void 0!==e[n]&&(R[n]=e[n])}),l.a.createElement("label",Object(o.default)({className:Object(i.a)(a.root,r,"end"!==f&&a["labelPlacement".concat(Object(u.a)(f))],g&&a.disabled),ref:n},h),l.a.cloneElement(s,R),l.a.createElement(d.a,{component:"span",className:Object(i.a)(a.label,g&&a.disabled)},p))});n.a=Object(s.default)(function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}},{name:"MuiFormControlLabel"})(m)},NPKC:function(e,n){e.exports='import React from \'react\';\nimport { makeStyles, Theme, createStyles } from \'@material-ui/core/styles\';\nimport Radio from \'@material-ui/core/Radio\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \'flex\',\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    group: {\n      margin: theme.spacing(1, 0),\n    },\n  }),\n);\n\nexport default function RadioButtonsGroup() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\'female\');\n\n  function handleChange(event: React.ChangeEvent<unknown>) {\n    setValue((event.target as HTMLInputElement).value);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Gender</FormLabel>\n        <RadioGroup\n          aria-label="gender"\n          name="gender1"\n          className={classes.group}\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel value="female" control={<Radio />} label="Female" />\n          <FormControlLabel value="male" control={<Radio />} label="Male" />\n          <FormControlLabel value="other" control={<Radio />} label="Other" />\n          <FormControlLabel\n            value="disabled"\n            disabled\n            control={<Radio />}\n            label="(Disabled option)"\n          />\n        </RadioGroup>\n      </FormControl>\n      <FormControl component="fieldset" className={classes.formControl}>\n        <FormLabel component="legend">Gender</FormLabel>\n        <RadioGroup\n          aria-label="gender"\n          name="gender2"\n          className={classes.group}\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value="female"\n            control={<Radio color="primary" />}\n            label="Female"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="male"\n            control={<Radio color="primary" />}\n            label="Male"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="other"\n            control={<Radio color="primary" />}\n            label="Other"\n            labelPlacement="start"\n          />\n          <FormControlLabel\n            value="disabled"\n            disabled\n            control={<Radio />}\n            label="(Disabled option)"\n            labelPlacement="start"\n          />\n        </RadioGroup>\n        <FormHelperText>labelPlacement start</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n'},Nulz:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=a("PDtE"),c=(a("FIWN"),a("imrm")),s=a("XpU0"),d=a("GbnF"),u=a("c1Jj"),m=a("zpLS"),p=l.a.forwardRef(function(e,n){var a=e.children,r=e.classes,s=e.className,p=e.component,b=void 0===p?"div":p,f=e.disabled,h=void 0!==f&&f,v=e.error,g=void 0!==v&&v,R=e.fullWidth,C=void 0!==R&&R,F=e.hiddenLabel,w=void 0!==F&&F,E=e.margin,k=void 0===E?"none":E,P=e.required,j=void 0!==P&&P,y=e.variant,L=void 0===y?"standard":y,x=Object(t.a)(e,["children","classes","className","component","disabled","error","fullWidth","hiddenLabel","margin","required","variant"]),O=l.a.useState(function(){var e=!1;return a&&l.a.Children.forEach(a,function(n){if(Object(u.a)(n,["Input","Select"])){var a=Object(u.a)(n,["Select"])?n.props.input:n;a&&Object(c.a)(a.props)&&(e=!0)}}),e})[0],B=l.a.useState(function(){var e=!1;return a&&l.a.Children.forEach(a,function(n){Object(u.a)(n,["Input","Select"])&&Object(c.b)(n.props,!0)&&(e=!0)}),e}),G=B[0],S=B[1],N=l.a.useState(!1),z=N[0],A=N[1];h&&z&&A(!1);var I={adornedStart:O,disabled:h,error:g,filled:G,focused:z,hiddenLabel:w,margin:k,onBlur:function(){A(!1)},onEmpty:function(){G&&S(!1)},onFilled:function(){G||S(!0)},onFocus:function(){A(!0)},registerEffect:void 0,required:j,variant:L};return l.a.createElement(m.a.Provider,{value:I},l.a.createElement(b,Object(o.default)({className:Object(i.a)(r.root,s,"none"!==k&&r["margin".concat(Object(d.a)(k))],C&&r.fullWidth),ref:n},x),a))});n.a=Object(s.default)({root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}},{name:"MuiFormControl"})(p)},R0aZ:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return k});var o=a("mXGw"),t=a.n(o),r=a("yZEQ"),l=a("rkid"),i=a("HiUD"),c=a("+j9t"),s=a("Lqxv"),d=a("Nulz"),u=a("7RiP"),m=Object(r.a)(function(e){return{root:{display:"flex"},formControl:{margin:e.spacing(3)},group:{margin:e.spacing(1,0)}}}),p=t.a.createElement(u.a,{component:"legend"},"Gender"),b=t.a.createElement(s.a,{value:"female",control:t.a.createElement(l.a,null),label:"Female"}),f=t.a.createElement(s.a,{value:"male",control:t.a.createElement(l.a,null),label:"Male"}),h=t.a.createElement(s.a,{value:"other",control:t.a.createElement(l.a,null),label:"Other"}),v=t.a.createElement(s.a,{value:"disabled",disabled:!0,control:t.a.createElement(l.a,null),label:"(Disabled option)"}),g=t.a.createElement(u.a,{component:"legend"},"Gender"),R=t.a.createElement(s.a,{value:"female",control:t.a.createElement(l.a,{color:"primary"}),label:"Female",labelPlacement:"start"}),C=t.a.createElement(s.a,{value:"male",control:t.a.createElement(l.a,{color:"primary"}),label:"Male",labelPlacement:"start"}),F=t.a.createElement(s.a,{value:"other",control:t.a.createElement(l.a,{color:"primary"}),label:"Other",labelPlacement:"start"}),w=t.a.createElement(s.a,{value:"disabled",disabled:!0,control:t.a.createElement(l.a,null),label:"(Disabled option)",labelPlacement:"start"}),E=t.a.createElement(c.a,null,"labelPlacement start");function k(){var e=m(),n=t.a.useState("female"),a=n[0],o=n[1];function r(e){o(e.target.value)}return t.a.createElement("div",{className:e.root},t.a.createElement(d.a,{component:"fieldset",className:e.formControl},p,t.a.createElement(i.a,{"aria-label":"gender",name:"gender1",className:e.group,value:a,onChange:r},b,f,h,v)),t.a.createElement(d.a,{component:"fieldset",className:e.formControl},g,t.a.createElement(i.a,{"aria-label":"gender",name:"gender2",className:e.group,value:a,onChange:r},R,C,F,w),E))}},R6cH:function(e,n){e.exports='import React from \'react\';\nimport Radio from \'@material-ui/core/Radio\';\nimport RadioGroup from \'@material-ui/core/RadioGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormLabel from \'@material-ui/core/FormLabel\';\n\nexport default function FormControlLabelPosition() {\n  const [value, setValue] = React.useState(\'female\');\n\n  function handleChange(event: React.ChangeEvent<unknown>) {\n    setValue((event.target as HTMLInputElement).value);\n  }\n\n  return (\n    <FormControl component="fieldset">\n      <FormLabel component="legend">labelPlacement</FormLabel>\n      <RadioGroup aria-label="position" name="position" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value="top"\n          control={<Radio color="primary" />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Radio color="primary" />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Radio color="primary" />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel\n          value="end"\n          control={<Radio color="primary" />}\n          label="End"\n          labelPlacement="end"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n'},Tj77:function(e,n,a){var o={"./FormControlLabelPosition.js":"ZDAc","./FormControlLabelPosition.tsx":"h1ct","./RadioButtons.js":"tQEG","./RadioButtons.tsx":"DEXo","./RadioButtonsGroup.js":"R0aZ","./RadioButtonsGroup.tsx":"08yW","./radio-buttons-aa.md":"neuC","./radio-buttons-de.md":"gmF9","./radio-buttons-es.md":"x7GD","./radio-buttons-fr.md":"EBfL","./radio-buttons-ja.md":"Uw2A","./radio-buttons-pt.md":"azFo","./radio-buttons-ru.md":"/WYC","./radio-buttons-zh.md":"ntCS","./radio-buttons.md":"D/jw"};function t(e){var n=r(e);return a(n)}function r(e){var n=o[e];if(!(n+1)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return n}t.keys=function(){return Object.keys(o)},t.resolve=r,e.exports=t,t.id="Tj77"},Uw2A:function(e,n){e.exports='---\ntitle: Radio buttons コンポーネント\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# ラジオボタン\n\n<p class="description">ラジオボタンを使用すると、ユーザーはセットから1つのオプションを選択できます。</p>\n\nユーザーが利用可能なすべてのオプションを確認する必要がある場合は、 [ラジオボタン](https://material.io/design/components/selection-controls.html#radio-buttons) 使用します。 使用可能なオプションを折りたたむことができる場合は、使用するスペースが少なくて済むため、ドロップダウンメニューを使用することを検討してください。\n\nラジオボタンは、デフォルトで最も一般的に使用されるオプションで設定されています。\n\n`RadioGroup` は、 `Radio` コンポーネントをグループ化するのに使用される便利なラッパーで、より簡単なAPIと、グループへの適切なキーボードアクセシビリティを提供します。\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## スタンドアロンラジオボタン\n\n`Radio` は、ラッパーなしでスタンドアロンでも使用できます。\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## ラベルの配置\n\nラベルの配置は自由に変更できます。\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## アクセシビリティ\n\nラジオボタン、チェックボックス、スイッチなどのすべてのフォームコントロールにラベルを付ける必要があります。 ほとんどの場合、 `<label>` 要素（[FormControlLabel](/api/form-control-label/)）を使用して行われます。\n\nラベルを使用できない場合は、入力コンポーネントに直接属性を追加する必要があります。 この場合、追加の属性（例： `aria-label`, `aria-labelledby`, `title`)を経由して `inputProps` プロパティを追加します。\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## ガイド\n\n- [Checkboxと Radio Buttons](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},WH4S:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=a("PDtE"),c=a("Hg0Q"),s=a("XpU0"),d=a("l/nz"),u=l.a.forwardRef(function(e,n){var a=e.autoFocus,r=e.checked,s=e.checkedIcon,u=e.classes,m=e.className,p=e.defaultChecked,b=e.disabled,f=e.icon,h=e.id,v=e.inputProps,g=e.inputRef,R=e.name,C=e.onBlur,F=e.onChange,w=e.onFocus,E=e.readOnly,k=e.required,P=e.tabIndex,j=e.type,y=e.value,L=Object(t.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),x=l.a.useRef(null!=r).current,O=l.a.useState(Boolean(p)),B=O[0],G=O[1],S=Object(c.a)(),N=b;S&&void 0===N&&(N=S.disabled);var z=x?r:B,A="checkbox"===j||"radio"===j;return l.a.createElement(d.a,Object(o.default)({component:"span",className:Object(i.a)(u.root,m,z&&u.checked,N&&u.disabled),disabled:N,tabIndex:null,role:void 0,onFocus:function(e){w&&w(e),S&&S.onFocus&&S.onFocus(e)},onBlur:function(e){C&&C(e),S&&S.onBlur&&S.onBlur(e)},ref:n},L),z?s:f,l.a.createElement("input",Object(o.default)({autoFocus:a,checked:r,defaultChecked:p,className:u.input,disabled:N,id:A&&h,name:R,onChange:function(e){var n=e.target.checked;x||G(n),F&&F(e,n)},readOnly:E,ref:g,required:k,tabIndex:P,type:j,value:y},v)))});n.a=Object(s.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0}},{name:"PrivateSwitchBase"})(u)},WLtd:function(e,n,a){"use strict";a.d(n,"a",function(){return t});var o=a("AMAy");function t(e){return Object(o.a)(e)}},Z42R:function(e,n){e.exports="import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Radio color=\"default\" {...props} />);\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  function handleChange(event) {\n    setSelectedValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value=\"a\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'A' }}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value=\"b\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'B' }}\n      />\n      <GreenRadio\n        checked={selectedValue === 'c'}\n        onChange={handleChange}\n        value=\"c\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'C' }}\n      />\n      <Radio\n        checked={selectedValue === 'd'}\n        onChange={handleChange}\n        value=\"d\"\n        color=\"default\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'D' }}\n      />\n      <Radio\n        checked={selectedValue === 'e'}\n        onChange={handleChange}\n        value=\"e\"\n        color=\"default\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'E' }}\n        icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n        checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n      />\n    </div>\n  );\n}\n"},ZDAc:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var o=a("mXGw"),t=a.n(o),r=a("rkid"),l=a("HiUD"),i=a("Lqxv"),c=a("Nulz"),s=a("7RiP"),d=t.a.createElement(s.a,{component:"legend"},"labelPlacement"),u=t.a.createElement(i.a,{value:"top",control:t.a.createElement(r.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),m=t.a.createElement(i.a,{value:"start",control:t.a.createElement(r.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),p=t.a.createElement(i.a,{value:"bottom",control:t.a.createElement(r.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),b=t.a.createElement(i.a,{value:"end",control:t.a.createElement(r.a,{color:"primary"}),label:"End",labelPlacement:"end"});function f(){var e=t.a.useState("female"),n=e[0],a=e[1];return t.a.createElement(c.a,{component:"fieldset"},d,t.a.createElement(l.a,{"aria-label":"position",name:"position",value:n,onChange:function(e){a(e.target.value)},row:!0},u,m,p,b))}},azFo:function(e,n){e.exports='---\ntitle: Componente React para Botões de Opção\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Botões de opção\n\n<p class="description">Botões de opção permitem o usuário selecionar uma das opções de um conjunto.</p>\n\nUse [botões de opção](https://material.io/design/components/selection-controls.html#radio-buttons) quando um usuário precisar ver todas as opções disponíveis. Se várias opções podem ser suprimidas da visualização, considere usar um menu suspenso (dropdown), pois ele utiliza menos espaço.\n\nOs botões de opção devem ter a opção mais comumente usada selecionada por padrão.\n\n`RadioGroup` é um wrapper útil usado para agrupar componentes `Radio` fornecendo uma API mais fácil, e adequá a acessibilidade pelo teclado para o grupo.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Botões de Opção Independentes\n\n`Radio` também pode ser usado de forma independente, sem a necessidade de um wrapper.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Posicionamento do Rótulo\n\nVocê pode alterar o posicionamento do rótulo:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Acessibilidade\n\nTodos os controles de formulário devem ter rótulos, e isso inclui os botões de opção, caixas de seleção e seletores. Na maioria dos casos, isso é feito usando `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nQuando uma label não pode ser usada, é necessário adicionar um atributo diretamente no componente de input. Nesse caso você pode aplicar um atributo adicional (e.g.`aria-label`,`aria-labelledby`, `title`) através do `inputProps`.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Orientação\n\n- [Caixas de Seleção vs. Botões de Opção](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},gmF9:function(e,n){e.exports='---\ntitle: Radio Button React-Komponente\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Optionsfelder (Radio Buttons)\n\n<p class="description">Optionsfelder ermöglichen die Auswahl einer einzelnen Option aus einem Set.</p>\n\nVerwenden Sie die [Optionsfelder](https://material.io/design/components/selection-controls.html#radio-buttons) wenn dem Benutzer alle verfügbaren Optionen anzeigt werden müssen. Wenn verfügbare Optionen reduziert werden können, sollten Sie ein Dropdown-Menü in Betracht ziehen, da so weniger Platz benötigt wird.\n\nBei Optionsschaltflächen sollte die am häufigsten verwendete Option standardmäßig ausgewählt sein.\n\n`RadioGroup` ist ein hilfreicher Wrapper zur Gruppierung von `Optionsfelder` Komponenten, der eine einfachere API und den richtigen Zugriff der Tastatur auf die Gruppe bietet.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Alleinstehende Schaltflächen\n\nEin `Optionsfeld` kann auch ohne Wrapper einzeln verwendet werden.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Etikettenplatzierung\n\nSie können die Platzierung des Etiketts ändern:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Barrierefreiheit\n\nAlle Formularsteuerelemente sollten Beschriftungen haben. Dazu gehören Optionsfelder, Kontrollkästchen und Schalter. In den meisten Fällen wird dazu das Element `<label>` ([FormControlLabel](/api/form-control-label/)) verwendet.\n\nWenn ein Label nicht verwendet werden kann, muss der Eingabekomponente ein Attribut direkt hinzugefügt werden. In diesem Fall können Sie das zusätzliche Attribut (z. B. `aria-label`, `aria-labelby`, `title`) über die Eigenschaft `inputProps` anwenden.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Anleitung\n\n- [Kontrollkästchen vs. Optionsfeld (Radio Buttons)](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},h1ct:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return f});var o=a("mXGw"),t=a.n(o),r=a("rkid"),l=a("HiUD"),i=a("Lqxv"),c=a("Nulz"),s=a("7RiP"),d=t.a.createElement(s.a,{component:"legend"},"labelPlacement"),u=t.a.createElement(i.a,{value:"top",control:t.a.createElement(r.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),m=t.a.createElement(i.a,{value:"start",control:t.a.createElement(r.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),p=t.a.createElement(i.a,{value:"bottom",control:t.a.createElement(r.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),b=t.a.createElement(i.a,{value:"end",control:t.a.createElement(r.a,{color:"primary"}),label:"End",labelPlacement:"end"});function f(){var e=t.a.useState("female"),n=e[0],a=e[1];return t.a.createElement(c.a,{component:"fieldset"},d,t.a.createElement(l.a,{"aria-label":"position",name:"position",value:n,onChange:function(e){a(e.target.value)},row:!0},u,m,p,b))}},"i/pa":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/radio-buttons",function(){var e=a("x+f9");return{page:e.default||e}}])},moDo:function(e,n){e.exports="import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Radio, { RadioProps } from '@material-ui/core/Radio';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\n\nexport default function RadioButtons() {\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSelectedValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <Radio\n        checked={selectedValue === 'a'}\n        onChange={handleChange}\n        value=\"a\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'A' }}\n      />\n      <Radio\n        checked={selectedValue === 'b'}\n        onChange={handleChange}\n        value=\"b\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'B' }}\n      />\n      <GreenRadio\n        checked={selectedValue === 'c'}\n        onChange={handleChange}\n        value=\"c\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'C' }}\n      />\n      <Radio\n        checked={selectedValue === 'd'}\n        onChange={handleChange}\n        value=\"d\"\n        color=\"default\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'D' }}\n      />\n      <Radio\n        checked={selectedValue === 'e'}\n        onChange={handleChange}\n        value=\"e\"\n        color=\"default\"\n        name=\"radio-button-demo\"\n        inputProps={{ 'aria-label': 'E' }}\n        icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n        checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n      />\n    </div>\n  );\n}\n"},neuC:function(e,n){e.exports="---\ntitle: crwdns91426:0crwdne91426:0\ncomponents: crwdns91428:0crwdne91428:0\n---\n\n# crwdns91430:0crwdne91430:0\n\n<p class=\"description\">crwdns91432:0crwdne91432:0</p>\n\ncrwdns91434:0crwdne91434:0 crwdns91436:0crwdne91436:0\n\ncrwdns91438:0crwdne91438:0\n\ncrwdns91440:0crwdne91440:0\n\ncrwdns91442:0crwdne91442:0\n\n## crwdns91444:0crwdne91444:0\n\ncrwdns91446:0crwdne91446:0\n\ncrwdns91448:0crwdne91448:0\n\n## crwdns91450:0crwdne91450:0\n\ncrwdns91452:0crwdne91452:0\n\ncrwdns91454:0crwdne91454:0\n\n## crwdns91456:0crwdne91456:0\n\ncrwdns91458:0crwdne91458:0 crwdns91460:0crwdne91460:0\n\ncrwdns91462:0crwdne91462:0 crwdns91464:0crwdne91464:0\n\n```jsx\ncrwdns91466:0{{ 'aria-label': 'Radio A' }}crwdne91466:0\n```\n\n## crwdns91468:0crwdne91468:0\n\n- [crwdns91472:0crwdne91472:0 crwdns91474:0crwdne91474:0](crwdns91470:0crwdne91470:0)"},ntCS:function(e,n){e.exports='---\ntitle: React Radio buttons（单选按钮）组件\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Radio buttons（单选按钮）\n\n<p class="description">用户可以通过单选按钮从一组中选择一个选项。</p>\n\n当用户想要看到所有的选项时，可以使用[单选按钮](https://material.io/design/components/selection-controls.html#radio-buttons)。 如果可用选项可以折叠，请您考虑使用占用空间更少的下拉菜单。\n\n默认情况下，单选按钮应该选择了最常用的选项。\n\n`RadioGroup`适用于一组` Radio `，它提供相对简单的 API 并且能够使用键盘对该RadioGroup 进行控制。\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## 独立的单选按钮\n\n`Radio` 也可以单独使用，无需额外包装。\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## 放置标签\n\n你可以更改标签放置的位置:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## 可及性\n\n所有表单控件都应该带有标签，而这包括了单选按钮，复选框和开关。 在大多数情况下，这是通过使用一个 `<label>` 元素（[FormControlLabel](/api/form-control-label/)）实现的。\n\n如果无法使用标签，则必须直接在输入组件中添加属性。 在这种情况下，您可以经由 `inputProps` 属性，来附着一些额外的属性（例如 `arial-label`，`aria-labelledby`，`title`）。\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## 指导\n\n- [复选框 对比 单选按钮](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},o5em:function(e,n,a){"use strict";var o=a("mXGw"),t=a.n(o).a.createContext();n.a=t},qoly:function(e,n,a){"use strict";a.d(n,"a",function(){return i});var o=a("z3IF"),t=a("mXGw"),r=a.n(t),l=a("6dYU");function i(e,n){var a=r.a.memo(r.a.forwardRef(function(n,a){return r.a.createElement(l.a,Object(o.default)({},n,{ref:a}),e)}));return a.muiName=l.a.muiName,a}},rkid:function(e,n,a){"use strict";var o=a("z3IF"),t=a("2Fjn"),r=a("mXGw"),l=a.n(r),i=a("PDtE"),c=a("WH4S"),s=a("qoly"),d=Object(s.a)(l.a.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),u=Object(s.a)(l.a.createElement("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked"),m=a("XpU0"),p=l.a.createElement(d,null);var b=Object(m.default)(function(e){return{root:{position:"relative",display:"flex","&$checked $layer":{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})}},layer:{left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest})},checked:{}}},{name:"PrivateRadioButtonIcon"})(function(e){var n=e.checked,a=e.classes,r=e.className,c=Object(t.a)(e,["checked","classes","className"]);return l.a.createElement("div",Object(o.default)({className:Object(i.a)(a.root,r,n&&a.checked)},c),p,l.a.createElement(u,{className:a.layer}))}),f=a("cYeA"),h=a("GbnF"),v=a("o5em"),g=l.a.createElement(b,{checked:!0}),R=l.a.createElement(b,null),C=l.a.forwardRef(function(e,n){var a=e.checked,r=e.classes,s=e.color,d=void 0===s?"secondary":s,u=e.name,m=e.onChange,p=Object(t.a)(e,["checked","classes","color","name","onChange"]),b=l.a.useContext(v.a),f=a,C=Object(h.b)(m,b&&b.onChange),F=u;return b&&(void 0===f&&(f=b.value===e.value),void 0===F&&(F=b.name)),l.a.createElement(c.a,Object(o.default)({color:d,type:"radio",icon:R,checkedIcon:g,classes:{root:Object(i.a)(r.root,r["color".concat(Object(h.a)(d))]),checked:r.checked,disabled:r.disabled},name:F,checked:f,onChange:C,ref:n},p))});n.a=Object(m.default)(function(e){return{root:{color:e.palette.text.secondary},checked:{},disabled:{},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(f.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(f.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}}}},{name:"MuiRadio"})(C)},tQEG:function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return b});var o=a("z3IF"),t=a("mXGw"),r=a.n(t),l=a("XpU0"),i=a("FJkE"),c=a("rkid"),s=a("9fQU"),d=a("xbPQ"),u=Object(l.default)({root:{color:i.default[400],"&$checked":{color:i.default[600]}},checked:{}})(function(e){return r.a.createElement(c.a,Object(o.default)({color:"default"},e))}),m=r.a.createElement(s.a,{fontSize:"small"}),p=r.a.createElement(d.a,{fontSize:"small"});function b(){var e=r.a.useState("a"),n=e[0],a=e[1];function o(e){a(e.target.value)}return r.a.createElement("div",null,r.a.createElement(c.a,{checked:"a"===n,onChange:o,value:"a",name:"radio-button-demo",inputProps:{"aria-label":"A"}}),r.a.createElement(c.a,{checked:"b"===n,onChange:o,value:"b",name:"radio-button-demo",inputProps:{"aria-label":"B"}}),r.a.createElement(u,{checked:"c"===n,onChange:o,value:"c",name:"radio-button-demo",inputProps:{"aria-label":"C"}}),r.a.createElement(c.a,{checked:"d"===n,onChange:o,value:"d",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"D"}}),r.a.createElement(c.a,{checked:"e"===n,onChange:o,value:"e",color:"default",name:"radio-button-demo",inputProps:{"aria-label":"E"},icon:m,checkedIcon:p}))}},"x+f9":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return s});var o=a("mXGw"),t=a.n(o),r=a("e+1t"),l=a("Tj77"),i=a("30TH"),c=t.a.createElement(r.a,{req:l,reqSource:i,reqPrefix:"pages/components/radio-buttons"});function s(){return c}},x7GD:function(e,n){e.exports='---\ntitle: Radio buttons React component\ncomponents: Radio, RadioGroup, FormControl, FormLabel, FormControlLabel\n---\n\n# Botones de radio\n\n<p class="description">Botones de radio permiten al usuario seleccionar una opción de un conjunto.</p>\n\nUsa [botones de radio](https://material.io/design/components/selection-controls.html#radio-buttons) cuando el usuario necesita ver todas las opciones disponibles. Si las opciones disponibles se pueden colapsar, considere usar un menú desplegable porque utiliza menos espacio.\n\nRadio buttons should have the most commonly used option selected by default.\n\n`RadioGroup` is a helpful wrapper used to group `Radio` components that provides an easier API, and proper keyboard accessibility to the group.\n\n{{"demo": "pages/components/radio-buttons/RadioButtonsGroup.js"}}\n\n## Standalone Radio Buttons\n\n`Radio` can also be used standalone, without the wrapper.\n\n{{"demo": "pages/components/radio-buttons/RadioButtons.js"}}\n\n## Ubicación de Etiqueta\n\nPuede cambiar la ubicación de la etiqueta:\n\n{{"demo": "pages/components/radio-buttons/FormControlLabelPosition.js"}}\n\n## Accesibilidad\n\nTodos los controles de formulario deben tener etiquetas, y esto incluye radio buttons, checkboxes, and switches. En la mayoría de los casos, esto se hace usando el elemento `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nCuando no se puede usar una etiqueta, es necesario agregar un atributo directamente al componente de entrada. En este caso, puede aplicar el atributo adicional (por ejemplo, `aria-label`, `aria-labelledby`, `title`) a través de la propiedad `inputProps`.\n\n```jsx\n<RadioButton\n  value="radioA"\n  inputProps={{ \'aria-label\': \'Radio A\' }}\n/>\n```\n\n## Guía\n\n- [Checkboxes vs. Botones de selección](https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/)'},xbPQ:function(e,n,a){"use strict";var o=a("mXGw"),t=a.n(o),r=a("0Zz2");n.a=Object(r.a)(t.a.createElement("path",{d:"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonChecked")}},[["i/pa","5d41","9da1"]]]);