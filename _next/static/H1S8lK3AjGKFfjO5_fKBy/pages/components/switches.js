(window.webpackJsonp=window.webpackJsonp||[]).push([["f546"],{"+j9t":function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("Rbzu"),c=t("mXGw"),l=t.n(c),i=t("PDtE"),s=t("ADfD"),d=t("Hg0Q"),m=t("XpU0"),u=l.a.forwardRef(function(e,n){var t=e.classes,r=e.className,c=e.component,m=void 0===c?"p":c,u=(e.disabled,e.error,e.filled,e.focused,e.margin,e.required,e.variant,Object(a.a)(e,["classes","className","component","disabled","error","filled","focused","margin","required","variant"])),h=Object(d.a)(),p=Object(s.a)({props:e,muiFormControl:h,states:["variant","margin","disabled","error","filled","focused","required"]});return l.a.createElement(m,Object(o.default)({className:Object(i.a)(t.root,("filled"===p.variant||"outlined"===p.variant)&&t.contained,r,p.disabled&&t.disabled,p.error&&t.error,p.filled&&t.filled,p.focused&&t.focused,p.required&&t.required,{dense:t.marginDense}[p.margin]),ref:n},u))});n.a=Object(m.default)(function(e){return{root:Object(r.a)({color:e.palette.text.secondary},e.typography.caption,{textAlign:"left",marginTop:8,lineHeight:"1em",minHeight:"1em",margin:0,"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),error:{},disabled:{},marginDense:{marginTop:4},contained:{margin:"8px 12px 0"},focused:{},filled:{},required:{}}},{name:"MuiFormHelperText"})(u)},"1G5K":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var o=t("mXGw"),a=t.n(o),r=t("uU96"),c=t("BT9p"),l=t("Lqxv");function i(){var e=a.a.useState(!1),n=e[0],t=e[1],o=function(){t(function(e){return!e})};return a.a.createElement(c.a,null,a.a.createElement(l.a,{control:a.a.createElement(r.a,{size:"small",checked:n,onChange:o}),label:"Small"}),a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:n,onChange:o}),label:"Normal"}))}},"3U1N":function(e,n){e.exports='---\ntitle: Componente React para Interruptores\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Interruptores\n\n<p class="description">Interruptores alternam o estado de uma única configuração ligado ou desligado.</p>\n\n[Interruptores](https://material.io/design/components/selection-controls.html#switches) são a forma preferida de ajustes de configuração em mobile. A opção que o interruptor controla, juntamente com o estado atual, deve ser claramente explícita no rótulo(label) inline correspondente.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Interruptores com FormControlLabel\n\n`Switch` também pode ser utilizado com uma descrição de rótulo graças ao componente `FormControlLabel`.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Interruptores com FormGroup\n\n`FormGroup` é um componente encapsulador usado para agrupar componentes de seleção para fornecer uma fácil API. No entanto, nós recomendamos que você use [Caixas de Seleção](#checkboxes).\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Interruptores customizados\n\nAqui esta um exemplo de customização do componente. Você pode aprender mais sobre isso na [página de documentação de sobrescritas](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Tamanhos\n\nGosta de interruptores menores? Use a propriedade `size`.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Posicionamento do Rótulo\n\nVocê pode alterar o posicionamento do rótulo:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Acessibilidade\n\nTodos os controles de formulário devem ter rótulos, e isso inclui os botões de opção, caixas de seleção e seletores. Na maioria dos casos, isso é feito usando o elemento `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nQuando um rótulo não pode ser usado, é necessário adicionar um atributo diretamente no componente de entrada. Nesse caso você pode aplicar um atributo adicional (e.g.`aria-label`,`aria-labelledby`, `title`) através da propriedade `inputProps`.\n\n```jsx\n<Switch\n  value="interruptorA"\n  inputProps={{ \'aria-label\': \'Interruptor A\' }}\n/>\n```'},"6d6g":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("BT9p"),i=t("Lqxv"),s=t("uU96"),d=c.a.createElement(i.a,{control:c.a.createElement(s.a,{value:"checkedC"}),label:"Uncontrolled"}),m=c.a.createElement(i.a,{disabled:!0,control:c.a.createElement(s.a,{value:"checkedD"}),label:"Disabled"}),u=c.a.createElement(i.a,{disabled:!0,control:c.a.createElement(s.a,{checked:!0,value:"checkedE"}),label:"Disabled"});function h(){var e=c.a.useState({checkedA:!0,checkedB:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement(l.a,{row:!0},c.a.createElement(i.a,{control:c.a.createElement(s.a,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Secondary"}),c.a.createElement(i.a,{control:c.a.createElement(s.a,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),d,m,u)}},"7+sn":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var o=t("mXGw"),a=t.n(o),r=t("uU96"),c=t("BT9p"),l=t("Lqxv");function i(){var e=a.a.useState(!1),n=e[0],t=e[1],o=function(){t(function(e){return!e})};return a.a.createElement(c.a,null,a.a.createElement(l.a,{control:a.a.createElement(r.a,{size:"small",checked:n,onChange:o}),label:"Small"}),a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:n,onChange:o}),label:"Normal"}))}},"7RiP":function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("Rbzu"),c=t("mXGw"),l=t.n(c),i=t("PDtE"),s=t("ADfD"),d=t("Hg0Q"),m=t("XpU0"),u=l.a.forwardRef(function(e,n){var t=e.children,r=e.classes,c=e.className,m=e.component,u=void 0===m?"label":m,h=(e.disabled,e.error,e.filled,e.focused,e.required,Object(a.a)(e,["children","classes","className","component","disabled","error","filled","focused","required"])),p=Object(d.a)(),b=Object(s.a)({props:e,muiFormControl:p,states:["required","focused","disabled","error","filled"]});return l.a.createElement(u,Object(o.default)({className:Object(i.a)(r.root,c,b.disabled&&r.disabled,b.error&&r.error,b.filled&&r.filled,b.focused&&r.focused,b.required&&r.required),ref:n},h),t,b.required&&l.a.createElement("span",{className:Object(i.a)(r.asterisk,b.error&&r.error)}," ","*"))});n.a=Object(m.default)(function(e){return{root:Object(r.a)({color:e.palette.text.secondary},e.typography.body1,{lineHeight:1,padding:0,"&$focused":{color:e.palette.primary["light"===e.palette.type?"dark":"light"]},"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}}),focused:{},disabled:{},error:{},filled:{},required:{},asterisk:{"&$error":{color:e.palette.error.main}}}},{name:"MuiFormLabel"})(u)},"9UIJ":function(e,n){e.exports='import React from \'react\';\nimport Switch from \'@material-ui/core/Switch\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\n\nexport default function FormControlLabelPosition() {\n  return (\n    <FormControl component="fieldset">\n      <FormGroup aria-label="position" row>\n        <FormControlLabel\n          value="top"\n          control={<Switch color="primary" />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Switch color="primary" />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Switch color="primary" />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel\n          value="end"\n          control={<Switch color="primary" />}\n          label="End"\n          labelPlacement="end"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n'},AMAy:function(e,n,t){"use strict";function o(e){return e}t.d(n,"a",function(){return o})},BT9p:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),c=t.n(r),l=t("PDtE"),i=t("XpU0"),s=c.a.forwardRef(function(e,n){var t=e.classes,r=e.className,i=e.row,s=void 0!==i&&i,d=Object(a.a)(e,["classes","className","row"]);return c.a.createElement("div",Object(o.default)({className:Object(l.a)(t.root,r,s&&t.row),ref:n},d))});n.a=Object(i.default)({root:{display:"flex",flexDirection:"column",flexWrap:"wrap"},row:{flexDirection:"row"}},{name:"MuiFormGroup"})(s)},Di4f:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return b});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("7RiP"),i=t("Nulz"),s=t("BT9p"),d=t("Lqxv"),m=t("+j9t"),u=t("uU96"),h=c.a.createElement(l.a,{component:"legend"},"Assign responsibility"),p=c.a.createElement(m.a,null,"Be careful");function b(){var e=c.a.useState({gilad:!0,jason:!1,antoine:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement(i.a,{component:"fieldset"},h,c.a.createElement(s.a,null,c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.gilad,onChange:r("gilad"),value:"gilad"}),label:"Gilad Gray"}),c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.jason,onChange:r("jason"),value:"jason"}),label:"Jason Killian"}),c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.antoine,onChange:r("antoine"),value:"antoine"}),label:"Antoine Llorca"})),p)}},FX8g:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function SwitchesSize() {\n  const [checked, setChecked] = React.useState(false);\n\n  const toggleChecked = () => {\n    setChecked(prev => !prev);\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} />}\n        label=\"Small\"\n      />\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={toggleChecked} />}\n        label=\"Normal\"\n      />\n    </FormGroup>\n  );\n}\n"},Hg0Q:function(e,n,t){"use strict";t.d(n,"a",function(){return c});var o=t("mXGw"),a=t.n(o),r=t("zpLS");function c(){return a.a.useContext(r.a)}},IYIo:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function SwitchesSize() {\n  const [checked, setChecked] = React.useState(false);\n\n  const toggleChecked = () => {\n    setChecked(prev => !prev);\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} />}\n        label=\"Small\"\n      />\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={toggleChecked} />}\n        label=\"Normal\"\n      />\n    </FormGroup>\n  );\n}\n"},InLW:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return s});var o=t("mXGw"),a=t.n(o),r=t("e+1t"),c=t("Zk/W"),l=t("mzKC"),i=a.a.createElement(r.a,{req:c,reqSource:l,reqPrefix:"pages/components/switches"});function s(){return i}},K4p2:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("BT9p"),i=t("Lqxv"),s=t("uU96"),d=c.a.createElement(i.a,{control:c.a.createElement(s.a,{value:"checkedC"}),label:"Uncontrolled"}),m=c.a.createElement(i.a,{disabled:!0,control:c.a.createElement(s.a,{value:"checkedD"}),label:"Disabled"}),u=c.a.createElement(i.a,{disabled:!0,control:c.a.createElement(s.a,{checked:!0,value:"checkedE"}),label:"Disabled"});function h(){var e=c.a.useState({checkedA:!0,checkedB:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement(l.a,{row:!0},c.a.createElement(i.a,{control:c.a.createElement(s.a,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Secondary"}),c.a.createElement(i.a,{control:c.a.createElement(s.a,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary"}),label:"Primary"}),d,m,u)}},Lqxv:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),c=t.n(r),l=t("PDtE"),i=t("Hg0Q"),s=t("XpU0"),d=t("Oy88"),m=t("GbnF"),u=c.a.forwardRef(function(e,n){e.checked;var t=e.classes,r=e.className,s=e.control,u=e.disabled,h=(e.inputRef,e.label),p=e.labelPlacement,b=void 0===p?"end":p,w=(e.name,e.onChange,e.value,Object(a.a)(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),f=Object(i.a)(),g=u;void 0===g&&void 0!==s.props.disabled&&(g=s.props.disabled),void 0===g&&f&&(g=f.disabled);var k={disabled:g};return["checked","name","onChange","value","inputRef"].forEach(function(n){void 0===s.props[n]&&void 0!==e[n]&&(k[n]=e[n])}),c.a.createElement("label",Object(o.default)({className:Object(l.a)(t.root,r,"end"!==b&&t["labelPlacement".concat(Object(m.a)(b))],g&&t.disabled),ref:n},w),c.a.cloneElement(s,k),c.a.createElement(d.a,{component:"span",className:Object(l.a)(t.label,g&&t.disabled)},h))});n.a=Object(s.default)(function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}},{name:"MuiFormControlLabel"})(u)},N93W:function(e,n){e.exports='import React from \'react\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport Switch from \'@material-ui/core/Switch\';\n\nexport default function SwitchLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch checked={state.checkedA} onChange={handleChange(\'checkedA\')} value="checkedA" />\n        }\n        label="Secondary"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange(\'checkedB\')}\n            value="checkedB"\n            color="primary"\n          />\n        }\n        label="Primary"\n      />\n      <FormControlLabel control={<Switch value="checkedC" />} label="Uncontrolled" />\n      <FormControlLabel disabled control={<Switch value="checkedD" />} label="Disabled" />\n      <FormControlLabel disabled control={<Switch checked value="checkedE" />} label="Disabled" />\n    </FormGroup>\n  );\n}\n'},Nulz:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),c=t.n(r),l=t("PDtE"),i=(t("FIWN"),t("imrm")),s=t("XpU0"),d=t("GbnF"),m=t("c1Jj"),u=t("zpLS"),h=c.a.forwardRef(function(e,n){var t=e.children,r=e.classes,s=e.className,h=e.component,p=void 0===h?"div":h,b=e.disabled,w=void 0!==b&&b,f=e.error,g=void 0!==f&&f,k=e.fullWidth,S=void 0!==k&&k,C=e.hiddenLabel,v=void 0!==C&&C,F=e.margin,x=void 0===F?"none":F,y=e.required,j=void 0!==y&&y,E=e.variant,L=void 0===E?"standard":E,G=Object(a.a)(e,["children","classes","className","component","disabled","error","fullWidth","hiddenLabel","margin","required","variant"]),z=c.a.useState(function(){var e=!1;return t&&c.a.Children.forEach(t,function(n){if(Object(m.a)(n,["Input","Select"])){var t=Object(m.a)(n,["Select"])?n.props.input:n;t&&Object(i.a)(t.props)&&(e=!0)}}),e})[0],P=c.a.useState(function(){var e=!1;return t&&c.a.Children.forEach(t,function(n){Object(m.a)(n,["Input","Select"])&&Object(i.b)(n.props,!0)&&(e=!0)}),e}),O=P[0],A=P[1],B=c.a.useState(!1),R=B[0],I=B[1];w&&R&&I(!1);var $={adornedStart:z,disabled:w,error:g,filled:O,focused:R,hiddenLabel:v,margin:x,onBlur:function(){I(!1)},onEmpty:function(){O&&A(!1)},onFilled:function(){O||A(!0)},onFocus:function(){I(!0)},registerEffect:void 0,required:j,variant:L};return c.a.createElement(u.a.Provider,{value:$},c.a.createElement(p,Object(o.default)({className:Object(l.a)(r.root,s,"none"!==x&&r["margin".concat(Object(d.a)(x))],S&&r.fullWidth),ref:n},G),t))});n.a=Object(s.default)({root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}},{name:"MuiFormControl"})(h)},OZxj:function(e,n){e.exports='import React from \'react\';\nimport Switch from \'@material-ui/core/Switch\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport FormControl from \'@material-ui/core/FormControl\';\n\nexport default function FormControlLabelPosition() {\n  return (\n    <FormControl component="fieldset">\n      <FormGroup aria-label="position" row>\n        <FormControlLabel\n          value="top"\n          control={<Switch color="primary" />}\n          label="Top"\n          labelPlacement="top"\n        />\n        <FormControlLabel\n          value="start"\n          control={<Switch color="primary" />}\n          label="Start"\n          labelPlacement="start"\n        />\n        <FormControlLabel\n          value="bottom"\n          control={<Switch color="primary" />}\n          label="Bottom"\n          labelPlacement="bottom"\n        />\n        <FormControlLabel\n          value="end"\n          control={<Switch color="primary" />}\n          label="End"\n          labelPlacement="end"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n'},P2G7:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/switches",function(){var e=t("InLW");return{page:e.default||e}}])},PpYF:function(e,n,t){"use strict";n.a={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"}},Qh8P:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return b});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("7RiP"),i=t("Nulz"),s=t("BT9p"),d=t("Lqxv"),m=t("+j9t"),u=t("uU96"),h=c.a.createElement(l.a,{component:"legend"},"Assign responsibility"),p=c.a.createElement(m.a,null,"Be careful");function b(){var e=c.a.useState({gilad:!0,jason:!1,antoine:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement(i.a,{component:"fieldset"},h,c.a.createElement(s.a,null,c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.gilad,onChange:r("gilad"),value:"gilad"}),label:"Gilad Gray"}),c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.jason,onChange:r("jason"),value:"jason"}),label:"Jason Killian"}),c.a.createElement(d.a,{control:c.a.createElement(u.a,{checked:n.antoine,onChange:r("antoine"),value:"antoine"}),label:"Antoine Llorca"})),p)}},SYS9:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("uU96"),c=t("BT9p"),l=t("Lqxv"),i=t("Nulz"),s=a.a.createElement(i.a,{component:"fieldset"},a.a.createElement(c.a,{"aria-label":"position",row:!0},a.a.createElement(l.a,{value:"top",control:a.a.createElement(r.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),a.a.createElement(l.a,{value:"start",control:a.a.createElement(r.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),a.a.createElement(l.a,{value:"bottom",control:a.a.createElement(r.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),a.a.createElement(l.a,{value:"end",control:a.a.createElement(r.a,{color:"primary"}),label:"End",labelPlacement:"end"})));function d(){return s}},UT1E:function(e,n){e.exports='---\ntitle: Reactコンポーネントの切り替え\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# スイッチ\n\n<p class="description">スイッチは、単一の設定の状態をオンまたはオフに切り替えます。</p>\n\n[スイッチ](https://material.io/design/components/selection-controls.html#switches) は、モバイルの設定を調整するための好ましい方法です。 The option that the switch controls, as well as the state it’s in, should be made clear from the corresponding inline label.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Switches with FormControlLabel\n\n`Switch` コンポーネントは` FormControlLabel<code>コンポーネントを説明のラベルとして使うことができます。</p>\n\n<p>{{"demo": "pages/components/switches/SwitchLabels.js"}}</p>\n\n<h2>Switches with FormGroup</h2>\n\n<p><code>FormGroup` は、より簡単なAPIを提供する選択コントロールコンポーネントをグループ化するために使用される便利なラッパーです。 However, we encourage you to use a [Checkbox](#checkboxes) instead.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Customized switches\n\nコンポーネントのカスタマイズの例を次に示します。 詳細については、 [オーバーライドのドキュメントページ](/customization/components/)を参照してください。\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## サイズ\n\nFancy smaller switches? `size`プロパティを使用します。\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## ラベルの配置\n\nラベルの配置は自由に変更できます。\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## アクセシビリティ\n\nラジオボタン、チェックボックス、スイッチなどのすべてのフォームコントロールにラベルを付ける必要があります。 ほとんどの場合、 `<label>` 要素（[FormControlLabel](/api/form-control-label/)）を使用して行われます。\n\nラベルを使用できない場合は、入力コンポーネントに直接属性を追加する必要があります。 この場合、追加の属性（例： `aria-label`, `aria-labelledby`, `title`)を経由して `inputProps` プロパティを追加します。\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},V7OO:function(e,n){e.exports="import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n          label=\"Gilad Gray\"\n        />\n        <FormControlLabel\n          control={<Switch checked={state.jason} onChange={handleChange('jason')} value=\"jason\" />}\n          label=\"Jason Killian\"\n        />\n        <FormControlLabel\n          control={\n            <Switch checked={state.antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n          }\n          label=\"Antoine Llorca\"\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n"},VPkl:function(e,n){e.exports="import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n          />\n        }\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange('checkedC')}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n"},WH4S:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),c=t.n(r),l=t("PDtE"),i=t("Hg0Q"),s=t("XpU0"),d=t("l/nz"),m=c.a.forwardRef(function(e,n){var t=e.autoFocus,r=e.checked,s=e.checkedIcon,m=e.classes,u=e.className,h=e.defaultChecked,p=e.disabled,b=e.icon,w=e.id,f=e.inputProps,g=e.inputRef,k=e.name,S=e.onBlur,C=e.onChange,v=e.onFocus,F=e.readOnly,x=e.required,y=e.tabIndex,j=e.type,E=e.value,L=Object(a.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),G=c.a.useRef(null!=r).current,z=c.a.useState(Boolean(h)),P=z[0],O=z[1],A=Object(i.a)(),B=p;A&&void 0===B&&(B=A.disabled);var R=G?r:P,I="checkbox"===j||"radio"===j;return c.a.createElement(d.a,Object(o.default)({component:"span",className:Object(l.a)(m.root,u,R&&m.checked,B&&m.disabled),disabled:B,tabIndex:null,role:void 0,onFocus:function(e){v&&v(e),A&&A.onFocus&&A.onFocus(e)},onBlur:function(e){S&&S(e),A&&A.onBlur&&A.onBlur(e)},ref:n},L),R?s:b,c.a.createElement("input",Object(o.default)({autoFocus:t,checked:r,defaultChecked:h,className:m.input,disabled:B,id:I&&w,name:k,onChange:function(e){var n=e.target.checked;G||O(n),C&&C(e,n)},readOnly:F,ref:g,required:x,tabIndex:y,type:j,value:E},f)))});n.a=Object(s.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0}},{name:"PrivateSwitchBase"})(m)},WLtd:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t("AMAy");function a(e){return Object(o.a)(e)}},"X87+":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("uU96");function i(){var e=c.a.useState({checkedA:!0,checkedB:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement("div",null,c.a.createElement(l.a,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA",inputProps:{"aria-label":"secondary checkbox"}}),c.a.createElement(l.a,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{value:"checkedC",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),c.a.createElement(l.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{defaultChecked:!0,value:"checkedF",color:"default",inputProps:{"aria-label":"checkbox with default color"}}))}},XCC7:function(e,n){e.exports='import React from \'react\';\nimport FormGroup from \'@material-ui/core/FormGroup\';\nimport FormControlLabel from \'@material-ui/core/FormControlLabel\';\nimport Switch from \'@material-ui/core/Switch\';\n\nexport default function SwitchLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch checked={state.checkedA} onChange={handleChange(\'checkedA\')} value="checkedA" />\n        }\n        label="Secondary"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange(\'checkedB\')}\n            value="checkedB"\n            color="primary"\n          />\n        }\n        label="Primary"\n      />\n      <FormControlLabel control={<Switch value="checkedC" />} label="Uncontrolled" />\n      <FormControlLabel disabled control={<Switch value="checkedD" />} label="Disabled" />\n      <FormControlLabel disabled control={<Switch checked value="checkedE" />} label="Disabled" />\n    </FormGroup>\n  );\n}\n'},XMxR:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("uU96"),c=t("BT9p"),l=t("Lqxv"),i=t("Nulz"),s=a.a.createElement(i.a,{component:"fieldset"},a.a.createElement(c.a,{"aria-label":"position",row:!0},a.a.createElement(l.a,{value:"top",control:a.a.createElement(r.a,{color:"primary"}),label:"Top",labelPlacement:"top"}),a.a.createElement(l.a,{value:"start",control:a.a.createElement(r.a,{color:"primary"}),label:"Start",labelPlacement:"start"}),a.a.createElement(l.a,{value:"bottom",control:a.a.createElement(r.a,{color:"primary"}),label:"Bottom",labelPlacement:"bottom"}),a.a.createElement(l.a,{value:"end",control:a.a.createElement(r.a,{color:"primary"}),label:"End",labelPlacement:"end"})));function d(){return s}},YLv6:function(e,n){e.exports='---\ntitle: Switch React component\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Interruptores\n\n<p class="description">Switches toggle the state of a single setting on or off.</p>\n\n[Switches](https://material.io/design/components/selection-controls.html#switches) are the preferred way to adjust settings on mobile. The option that the switch controls, as well as the state it’s in, should be made clear from the corresponding inline label.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Switches with FormControlLabel\n\n`Switch` can also be used with a label description thanks to the `FormControlLabel` component.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Switches with FormGroup\n\n`FormGroup` es un contenedor muy útil usado para agrupar componentes de controles de selección que proporciona una API más sencilla. However, we encourage you to use a [Checkbox](#checkboxes) instead.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Customized switches\n\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Tamaños\n\nFancy smaller switches? Use the `size` property.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Ubicación de Etiqueta\n\nPuede cambiar la ubicación de la etiqueta:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Accesibilidad\n\nTodos los controles de formulario deben tener etiquetas, y esto incluye radio buttons, checkboxes, and switches. En la mayoría de los casos, esto se hace usando el elemento `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nCuando no se puede usar una etiqueta, es necesario agregar un atributo directamente al componente de entrada. En este caso, puede aplicar el atributo adicional (por ejemplo, `aria-label`, `aria-labelledby`, `title`) a través de la propiedad `inputProps`.\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},"Zk/W":function(e,n,t){var o={"./CustomizedSwitches.js":"s5Ar","./CustomizedSwitches.tsx":"fmkH","./FormControlLabelPosition.js":"XMxR","./FormControlLabelPosition.tsx":"SYS9","./SwitchLabels.js":"K4p2","./SwitchLabels.tsx":"6d6g","./Switches.js":"X87+","./Switches.tsx":"szpR","./SwitchesGroup.js":"Qh8P","./SwitchesGroup.tsx":"Di4f","./SwitchesSize.js":"1G5K","./SwitchesSize.tsx":"7+sn","./switches-aa.md":"vN2n","./switches-de.md":"rbGm","./switches-es.md":"YLv6","./switches-fr.md":"v3/K","./switches-ja.md":"UT1E","./switches-pt.md":"3U1N","./switches-ru.md":"d3vM","./switches-zh.md":"gsn+","./switches.md":"evB8"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="Zk/W"},d3vM:function(e,n){e.exports='---\ntitle: Switch React component\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Switch (переключатели)\n\n<p class="description">Переключатели изменяют состояние одного отдельного параметра между "включено" и "выключено".</p>\n\n[Переключатели](https://material.io/design/components/selection-controls.html#switches) – предпочтительный способ установки параметров на мобильных устройствах. Опция, которую контролирует переключатель, и её состояние должны быть четко описаны в соответствующей метке.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Переключатели с FormControlLabel\n\n`Переключатель` также можно использовать с меткой благодаря компоненту `FormControlLabel`.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Переключатели с FormGroup\n\n`FormGroup` - это полезная обертка, используемая для группировки компонентов элементов управления выбором, она предоставляет более простой API. However, we encourage you to use a [Checkbox](#checkboxes) instead.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Кастомизация переключателей\n\nНиже находятся примеры кастомизации компонента. You can learn more about this in the [overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Размеры\n\nFancy smaller switches? Use the `size` property.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Расположение метки\n\nРасположение метки можно изменить:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Доступность\n\nВсе элементы формы должны иметь метки, в том числе радиокнопки, переключатели и чекбоксы. В большинстве случаев это делается с помощью элемента `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nКогда метка не может быть использована, необходимо добавить атрибут непосредственно на поле ввода. В этом случае можно применить дополнительный атрибут (например, `aria-label`, `aria-labelledby`, `title`) через свойство `inputProps`.\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},eCPy:function(e,n){e.exports="import React from 'react';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n  focusVisible?: string;\n}\n\ninterface Props extends SwitchProps {\n  classes: Styles;\n}\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }),\n)(({ classes, ...props }: Props) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme =>\n  createStyles({\n    root: {\n      width: 28,\n      height: 16,\n      padding: 0,\n      display: 'flex',\n    },\n    switchBase: {\n      padding: 2,\n      color: theme.palette.grey[500],\n      '&$checked': {\n        transform: 'translateX(12px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.primary.main,\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    thumb: {\n      width: 12,\n      height: 12,\n      boxShadow: 'none',\n    },\n    track: {\n      border: `1px solid ${theme.palette.grey[500]}`,\n      borderRadius: 16 / 2,\n      opacity: 1,\n      backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n  }),\n)(Switch);\n\nexport default function CustomizedSwitches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange('checkedA')}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n          />\n        }\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange('checkedC')}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n"},evB8:function(e,n){e.exports='---\ntitle: Switch React component\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Switches\n\n<p class="description">Switches toggle the state of a single setting on or off.</p>\n\n[Switches](https://material.io/design/components/selection-controls.html#switches) are the preferred way to adjust settings on mobile.\nThe option that the switch controls, as well as the state it’s in,\nshould be made clear from the corresponding inline label.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Switches with FormControlLabel\n\n`Switch` can also be used with a label description thanks to the `FormControlLabel` component.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Switches with FormGroup\n\n`FormGroup` is a helpful wrapper used to group selection controls components that provides an easier API.\nHowever, we encourage you to use a [Checkbox](#checkboxes) instead.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Customized switches\n\nHere are some examples of customizing the component. You can learn more about this in the\n[overrides documentation page](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Sizes\n\nFancy smaller switches? Use the `size` property.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Label placement\n\nYou can change the placement of the label:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Accessibility\n\nAll form controls should have labels, and this includes radio buttons, checkboxes, and switches. In most cases, this is done by using the `<label>` element ([FormControlLabel](/api/form-control-label/)).\n\nWhen a label can\'t be used, it\'s necessary to add an attribute directly to the input component.\nIn this case, you can apply the additional attribute (e.g. `aria-label`, `aria-labelledby`, `title`) via the `inputProps` property.\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```\n'},fmkH:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return v});var o=t("azxR"),a=t("Rbzu"),r=t("z3IF"),c=t("2Fjn"),l=t("mXGw"),i=t.n(l),s=t("XpU0"),d=t("WLtd"),m=t("PpYF"),u=t("BT9p"),h=t("Lqxv"),p=t("uU96"),b=t("pQ8Y"),w=t("Oy88"),f=Object(s.default)({switchBase:{color:m.a[300],"&$checked":{color:m.a[500]},"&$checked + $track":{backgroundColor:m.a[500]}},checked:{},track:{}})(p.a),g=Object(s.default)(function(e){return Object(d.a)({root:{width:42,height:26,padding:0,margin:e.spacing(1)},switchBase:{padding:1,"&$checked":{transform:"translateX(16px)",color:e.palette.common.white,"& + $track":{backgroundColor:"#52d869",opacity:1,border:"none"}},"&$focusVisible $thumb":{color:"#52d869",border:"6px solid #fff"}},thumb:{width:e.spacing(3),height:e.spacing(3)},track:{borderRadius:13,border:"1px solid ".concat(e.palette.grey[400]),backgroundColor:e.palette.grey[50],opacity:1,transition:e.transitions.create(["background-color","border"])},checked:{},focusVisible:{}})})(function(e){var n=e.classes,t=Object(c.a)(e,["classes"]);return i.a.createElement(p.a,Object(r.default)({focusVisibleClassName:n.focusVisible,disableRipple:!0,classes:{root:n.root,switchBase:n.switchBase,thumb:n.thumb,track:n.track,checked:n.checked}},t))}),k=Object(s.default)(function(e){return Object(d.a)({root:{width:28,height:16,padding:0,display:"flex"},switchBase:{padding:2,color:e.palette.grey[500],"&$checked":{transform:"translateX(12px)",color:e.palette.common.white,"& + $track":{opacity:1,backgroundColor:e.palette.primary.main,borderColor:e.palette.primary.main}}},thumb:{width:12,height:12,boxShadow:"none"},track:{border:"1px solid ".concat(e.palette.grey[500]),borderRadius:8,opacity:1,backgroundColor:e.palette.common.white},checked:{}})})(p.a),S=i.a.createElement(b.a,{item:!0},"Off"),C=i.a.createElement(b.a,{item:!0},"On");function v(){var e=i.a.useState({checkedA:!0,checkedB:!0,checkedC:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return i.a.createElement(u.a,null,i.a.createElement(h.a,{control:i.a.createElement(f,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Custom color"}),i.a.createElement(h.a,{control:i.a.createElement(g,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB"}),label:"iOS style"}),i.a.createElement(w.a,{component:"div"},i.a.createElement(b.a,{component:"label",container:!0,alignItems:"center",spacing:1},S,i.a.createElement(b.a,{item:!0},i.a.createElement(k,{checked:n.checkedC,onChange:r("checkedC"),value:"checkedC"})),C)))}},"gsn+":function(e,n){e.exports='---\ntitle: Switch React component\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# 开关控件\n\n<p class="description">开关控制是改变单个设置状态打开或关闭的控件。</p>\n\n[开关控件](https://material.io/design/components/selection-controls.html#switches) 是在移动设备上调整设置的首选方式。 开关控制的选项，以及它当前所处的状态都应该从相应的描述标签中明确说明。\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## 多个 Switch 和 FormControlLabel 的使用\n\n通过使用` FormControlLabel ` 组件, ` Switch ` 也可与标签描述一起使用。\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## 多个 Switch 情况下使用 FormGroup\n\n`FormGroup`提供相对简单的 API 对选择控件进行分组。 但在这种情况下我们更建议您使用 [复选框](#checkboxes)。\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## 自定义样式开关\n\n这是一些自定义样式开关的例子 您可以在[样式重写文档页](/customization/components/)中了解有关此内容的更多信息。\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## 尺寸\n\nFancy smaller switches? 你可以使用 `size` 属性。\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## 标签放置\n\n你可以更改标签放置的位置:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## 可访问性\n\n所有表单控件都应该带有标签，而这包括了单选按钮，复选框和开关。 在大多数情况下，这是通过使用一个 `<label>` 元素（[FormControlLabel](/api/form-control-label/)）实现的。\n\n如果无法使用标签，则必须直接在输入组件中添加属性。 在这种情况下，可以应用附加的属性（例如 `arial-label`， `aria-labelledby`， `title`）经由 `inputProps` 属性。\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},mzKC:function(e,n,t){var o={"./CustomizedSwitches.js":"VPkl","./CustomizedSwitches.tsx":"eCPy","./FormControlLabelPosition.js":"9UIJ","./FormControlLabelPosition.tsx":"OZxj","./SwitchLabels.js":"XCC7","./SwitchLabels.tsx":"N93W","./Switches.js":"w/DB","./Switches.tsx":"rPBa","./SwitchesGroup.js":"yjo2","./SwitchesGroup.tsx":"V7OO","./SwitchesSize.js":"IYIo","./SwitchesSize.tsx":"FX8g"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="mzKC"},pQ8Y:function(e,n,t){"use strict";var o=t("2Fjn"),a=t("Rbzu"),r=t("yLsn"),c=t.n(r),l=t("z3IF"),i=t("mXGw"),s=t.n(i),d=t("PDtE"),m=t("XpU0"),u=[0,1,2,3,4,5,6,7,8,9,10],h=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];function p(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=c()(e);return"".concat(t/n).concat(String(e).replace(String(t),"")||"px")}var b=s.a.forwardRef(function(e,n){var t=e.alignContent,a=void 0===t?"stretch":t,r=e.alignItems,c=void 0===r?"stretch":r,i=e.classes,m=e.className,u=e.component,h=void 0===u?"div":u,p=e.container,b=void 0!==p&&p,w=e.direction,f=void 0===w?"row":w,g=e.item,k=void 0!==g&&g,S=e.justify,C=void 0===S?"flex-start":S,v=e.lg,F=void 0!==v&&v,x=e.md,y=void 0!==x&&x,j=e.sm,E=void 0!==j&&j,L=e.spacing,G=void 0===L?0:L,z=e.wrap,P=void 0===z?"wrap":z,O=e.xl,A=void 0!==O&&O,B=e.xs,R=void 0!==B&&B,I=e.zeroMinWidth,$=void 0!==I&&I,T=Object(o.a)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),N=Object(d.a)(i.root,m,b&&[i.container,0!==G&&i["spacing-xs-".concat(String(G))]],k&&i.item,$&&i.zeroMinWidth,"row"!==f&&i["direction-xs-".concat(String(f))],"wrap"!==P&&i["wrap-xs-".concat(String(P))],"stretch"!==c&&i["align-items-xs-".concat(String(c))],"stretch"!==a&&i["align-content-xs-".concat(String(a))],"flex-start"!==C&&i["justify-xs-".concat(String(C))],!1!==R&&i["grid-xs-".concat(String(R))],!1!==E&&i["grid-sm-".concat(String(E))],!1!==y&&i["grid-md-".concat(String(y))],!1!==F&&i["grid-lg-".concat(String(F))],!1!==A&&i["grid-xl-".concat(String(A))]);return s.a.createElement(h,Object(l.default)({className:N,ref:n},T))});var w=Object(m.default)(function(e){return Object(a.a)({root:{},container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,n){var t={};return u.forEach(function(o){var a=e.spacing(o);0!==a&&(t["spacing-".concat(n,"-").concat(o)]={margin:"-".concat(p(a,2)),width:"calc(100% + ".concat(p(a),")"),"& > $item":{padding:p(a,2)}})}),t}(e,"xs"),e.breakpoints.keys.reduce(function(n,t){return function(e,n,t){var o={};h.forEach(function(e){var n="grid-".concat(t,"-").concat(e);if(!0!==e)if("auto"!==e){var a="".concat(Math.round(e/12*1e8)/1e6,"%");o[n]={flexBasis:a,flexGrow:0,maxWidth:a}}else o[n]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else o[n]={flexBasis:0,flexGrow:1,maxWidth:"100%"}}),"xs"===t?Object(l.default)(e,o):e[n.breakpoints.up(t)]=o}(n,e,t),n},{}))},{name:"MuiGrid"})(b);n.a=w},rPBa:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Switch value=\"checkedC\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n      <Switch disabled checked value=\"checkedE\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch\n        defaultChecked\n        value=\"checkedF\"\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </div>\n  );\n}\n"},rbGm:function(e,n){e.exports='---\ntitle: Switch React Komponente\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Schalter (Switch)\n\n<p class="description">Schalter ändern den Status einer einzelnen Einstellung ein oder aus.</p>\n\n[Schalter](https://material.io/design/components/selection-controls.html#switches) sind die bevorzugte Methode zum Anpassen der Einstellungen auf dem Handy. Die Option, die der Schalter steuert, sowie der Status, in dem er sich befindet, sollte aus dem entsprechenden Inline-Label hervorgehen.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Schalter mit FormControlLabel\n\nEin `Schalter` kann dank der `FormControlLabel` Komponente auch mit einer Etikettenbeschreibung verwendet werden.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Schalter mit FormGroup\n\n`FormGroup` ist ein hilfreicher Wrapper zum Gruppieren von Auswahlsteuerungskomponenten, welcher eine einfachere API bietet. Wir empfehlen Ihnen jedoch, stattdessen ein [Kontrollkästchen](#checkboxes) zu verwenden.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Anpasster Schalter\n\nHier einige Beispiele zum Anpassen der Komponente. Mehr dazu erfahren Sie auf der [Überschreibungsdokumentationsseite](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Größen\n\nFancy smaller switches? Use the `size` property.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Etikettenplatzierung\n\nSie können die Platzierung des Etiketts ändern:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Barrierefreiheit\n\nAlle Formularsteuerelemente sollten Beschriftungen haben. Dazu gehören Optionsfelder, Kontrollkästchen und Schalter. In den meisten Fällen wird dazu das Element `<label>` ([FormControlLabel](/api/form-control-label/)) verwendet.\n\nWenn ein Label nicht verwendet werden kann, muss der Eingabekomponente ein Attribut direkt hinzugefügt werden. In diesem Fall können Sie das zusätzliche Attribut (z. B. `aria-label`, `aria-labelby`, `title`) über die Eigenschaft `inputProps` anwenden.\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},s5Ar:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return C});var o=t("azxR"),a=t("Rbzu"),r=t("z3IF"),c=t("2Fjn"),l=t("mXGw"),i=t.n(l),s=t("XpU0"),d=t("PpYF"),m=t("BT9p"),u=t("Lqxv"),h=t("uU96"),p=t("pQ8Y"),b=t("Oy88"),w=Object(s.default)({switchBase:{color:d.a[300],"&$checked":{color:d.a[500]},"&$checked + $track":{backgroundColor:d.a[500]}},checked:{},track:{}})(h.a),f=Object(s.default)(function(e){return{root:{width:42,height:26,padding:0,margin:e.spacing(1)},switchBase:{padding:1,"&$checked":{transform:"translateX(16px)",color:e.palette.common.white,"& + $track":{backgroundColor:"#52d869",opacity:1,border:"none"}},"&$focusVisible $thumb":{color:"#52d869",border:"6px solid #fff"}},thumb:{width:e.spacing(3),height:e.spacing(3)},track:{borderRadius:13,border:"1px solid ".concat(e.palette.grey[400]),backgroundColor:e.palette.grey[50],opacity:1,transition:e.transitions.create(["background-color","border"])},checked:{},focusVisible:{}}})(function(e){var n=e.classes,t=Object(c.a)(e,["classes"]);return i.a.createElement(h.a,Object(r.default)({focusVisibleClassName:n.focusVisible,disableRipple:!0,classes:{root:n.root,switchBase:n.switchBase,thumb:n.thumb,track:n.track,checked:n.checked}},t))}),g=Object(s.default)(function(e){return{root:{width:28,height:16,padding:0,display:"flex"},switchBase:{padding:2,color:e.palette.grey[500],"&$checked":{transform:"translateX(12px)",color:e.palette.common.white,"& + $track":{opacity:1,backgroundColor:e.palette.primary.main,borderColor:e.palette.primary.main}}},thumb:{width:12,height:12,boxShadow:"none"},track:{border:"1px solid ".concat(e.palette.grey[500]),borderRadius:8,opacity:1,backgroundColor:e.palette.common.white},checked:{}}})(h.a),k=i.a.createElement(p.a,{item:!0},"Off"),S=i.a.createElement(p.a,{item:!0},"On");function C(){var e=i.a.useState({checkedA:!0,checkedB:!0,checkedC:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return i.a.createElement(m.a,null,i.a.createElement(u.a,{control:i.a.createElement(w,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA"}),label:"Custom color"}),i.a.createElement(u.a,{control:i.a.createElement(f,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB"}),label:"iOS style"}),i.a.createElement(b.a,{component:"div"},i.a.createElement(p.a,{component:"label",container:!0,alignItems:"center",spacing:1},k,i.a.createElement(p.a,{item:!0},i.a.createElement(g,{checked:n.checkedC,onChange:r("checkedC"),value:"checkedC"})),S)))}},szpR:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return i});var o=t("azxR"),a=t("Rbzu"),r=t("mXGw"),c=t.n(r),l=t("uU96");function i(){var e=c.a.useState({checkedA:!0,checkedB:!0}),n=e[0],t=e[1],r=function(e){return function(r){t(Object(a.a)({},n,Object(o.a)({},e,r.target.checked)))}};return c.a.createElement("div",null,c.a.createElement(l.a,{checked:n.checkedA,onChange:r("checkedA"),value:"checkedA",inputProps:{"aria-label":"secondary checkbox"}}),c.a.createElement(l.a,{checked:n.checkedB,onChange:r("checkedB"),value:"checkedB",color:"primary",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{value:"checkedC",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{disabled:!0,value:"checkedD",inputProps:{"aria-label":"disabled checkbox"}}),c.a.createElement(l.a,{disabled:!0,checked:!0,value:"checkedE",inputProps:{"aria-label":"primary checkbox"}}),c.a.createElement(l.a,{defaultChecked:!0,value:"checkedF",color:"default",inputProps:{"aria-label":"checkbox with default color"}}))}},uU96:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),c=t.n(r),l=t("PDtE"),i=t("XpU0"),s=t("cYeA"),d=t("GbnF"),m=t("WH4S"),u=c.a.forwardRef(function(e,n){var t=e.classes,r=e.className,i=e.color,s=void 0===i?"secondary":i,u=e.edge,h=void 0!==u&&u,p=e.size,b=void 0===p?"medium":p,w=Object(a.a)(e,["classes","className","color","edge","size"]),f=c.a.createElement("span",{className:t.thumb});return c.a.createElement("span",{className:Object(l.a)(t.root,r,{start:t.edgeStart,end:t.edgeEnd}[h],{small:t["size".concat(Object(d.a)(b))]}[b])},c.a.createElement(m.a,Object(o.default)({type:"checkbox",icon:f,checkedIcon:f,classes:{root:Object(l.a)(t.switchBase,t["color".concat(Object(d.a)(s))]),input:t.input,checked:t.checked,disabled:t.disabled},ref:n},w)),c.a.createElement("span",{className:t.track}))});n.a=Object(i.default)(function(e){return{root:{display:"inline-flex",width:58,height:38,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle"},edgeStart:{marginLeft:-8},edgeEnd:{marginRight:-8},switchBase:{position:"absolute",top:0,left:0,zIndex:1,color:"light"===e.palette.type?e.palette.grey[50]:e.palette.grey[400],transition:e.transitions.create(["left","transform"],{duration:e.transitions.duration.shortest}),"&$checked":{transform:"translateX(50%)"},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{opacity:.5},"&$disabled + $track":{opacity:"light"===e.palette.type?.12:.1}},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(s.fade)(e.palette.primary.main,e.palette.action.hoverOpacity)}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.primary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(s.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity)}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.secondary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},sizeSmall:{width:40,height:24,padding:7,"& $thumb":{width:16,height:16},"& $switchBase":{padding:4}},checked:{},disabled:{},input:{left:"-100%",width:"300%"},thumb:{boxShadow:e.shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%"},track:{height:"100%",width:"100%",borderRadius:7,zIndex:-1,transition:e.transitions.create(["opacity","background-color"],{duration:e.transitions.duration.shortest}),backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white,opacity:"light"===e.palette.type?.38:.3}}},{name:"MuiSwitch"})(u)},"v3/K":function(e,n){e.exports='---\ntitle: Switch React component\ncomponents: Switch, FormControl, FormGroup, FormLabel, FormControlLabel\n---\n\n# Switches (interrupteurs)\n\n<p class="description">Switches toggle the state of a single setting on or off.</p>\n\n[Switches](https://material.io/design/components/selection-controls.html#switches) are the preferred way to adjust settings on mobile. The option that the switch controls, as well as the state it’s in, should be made clear from the corresponding inline label.\n\n{{"demo": "pages/components/switches/Switches.js"}}\n\n## Switches with FormControlLabel\n\n`Switch` can also be used with a label description thanks to the `FormControlLabel` component.\n\n{{"demo": "pages/components/switches/SwitchLabels.js"}}\n\n## Switches with FormGroup\n\n`FormGroup` est un wrapper utile utilisé pour regrouper les composants de contrôles de sélection et qui fournit une API plus simple. However, we encourage you to use a [Checkbox](#checkboxes) instead.\n\n{{"demo": "pages/components/switches/SwitchesGroup.js"}}\n\n## Customized switches\n\nHere are some examples of customizing the component. Vous pouvez en savoir plus dans la [page de documentation des overrides](/customization/components/).\n\n{{"demo": "pages/components/switches/CustomizedSwitches.js"}}\n\n## Tailles\n\nFancy smaller switches? Use the `size` property.\n\n{{"demo": "pages/components/switches/SwitchesSize.js"}}\n\n## Emplacement du label\n\nVous pouvez changer l\'emplacement du label:\n\n{{"demo": "pages/components/switches/FormControlLabelPosition.js"}}\n\n## Accessibilité\n\nTous les contrôles de formulaire doivent avoir des labels, cela vaut également pour les boutons radio, les cases à cocher et les interrupteurs. Dans la plupart des cas, cela se fait en utilisant l\'élément `<label>` ([FormControlLabel](/api/form-control-label/)).\n\nLorsqu\'un label ne peut pas être utilisé, il est nécessaire d\'ajouter un attribut directement au composant input. Dans ce cas, vous pouvez appliquer l\'attribut supplémentaire (ex: `aria-label`, `aria-labelledby`, `title`) via la propriété `inputProps`.\n\n```jsx\n<Switch\n  value="checkedA"\n  inputProps={{ \'aria-label\': \'Switch A\' }}\n/>\n```'},vN2n:function(e,n){e.exports="---\ntitle: crwdns91936:0crwdne91936:0\ncomponents: crwdns91938:0crwdne91938:0\n---\n\n# crwdns91940:0crwdne91940:0\n\n<p class=\"description\">crwdns91942:0crwdne91942:0</p>\n\ncrwdns91944:0crwdne91944:0 crwdns91946:0crwdne91946:0\n\ncrwdns91948:0crwdne91948:0\n\n## crwdns91950:0crwdne91950:0\n\ncrwdns91952:0crwdne91952:0\n\ncrwdns91954:0crwdne91954:0\n\n## crwdns91956:0crwdne91956:0\n\ncrwdns91958:0crwdne91958:0 crwdns91960:0crwdne91960:0\n\ncrwdns91962:0crwdne91962:0\n\n## crwdns91964:0crwdne91964:0\n\ncrwdns91966:0crwdne91966:0 crwdns91968:0crwdne91968:0\n\ncrwdns91970:0crwdne91970:0\n\n## crwdns91972:0crwdne91972:0\n\ncrwdns91974:0crwdne91974:0 crwdns91976:0crwdne91976:0\n\ncrwdns91978:0crwdne91978:0\n\n## crwdns91980:0crwdne91980:0\n\ncrwdns91982:0crwdne91982:0\n\ncrwdns91984:0crwdne91984:0\n\n## crwdns91986:0crwdne91986:0\n\ncrwdns91988:0crwdne91988:0 crwdns91990:0crwdne91990:0\n\ncrwdns91992:0crwdne91992:0 crwdns91994:0crwdne91994:0\n\n```jsx\ncrwdns91996:0{{ 'aria-label': 'Switch A' }}crwdne91996:0\n```"},"w/DB":function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Switches() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        value=\"checkedA\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Switch value=\"checkedC\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n      <Switch disabled checked value=\"checkedE\" inputProps={{ 'aria-label': 'primary checkbox' }} />\n      <Switch\n        defaultChecked\n        value=\"checkedF\"\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </div>\n  );\n}\n"},yjo2:function(e,n){e.exports="import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n          label=\"Gilad Gray\"\n        />\n        <FormControlLabel\n          control={<Switch checked={state.jason} onChange={handleChange('jason')} value=\"jason\" />}\n          label=\"Jason Killian\"\n        />\n        <FormControlLabel\n          control={\n            <Switch checked={state.antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n          }\n          label=\"Antoine Llorca\"\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n"}},[["P2G7","5d41","9da1"]]]);