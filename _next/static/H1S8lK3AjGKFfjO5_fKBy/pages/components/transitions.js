(window.webpackJsonp=window.webpackJsonp||[]).push([["a2f6"],{AMAy:function(e,n,t){"use strict";function o(e){return e}t.d(n,"a",function(){return o})},DQjZ:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function SimpleFade() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Fade in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n"},Eizo:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("yZEQ"),s=t("WLtd"),i=t("uU96"),l=t("VPks"),c=t("LpUc"),p=t("Lqxv"),m=Object(r.a)(function(e){return Object(s.a)({root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}})});function d(){var e=m(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(p.a,{control:a.a.createElement(i.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(c.a,{in:t},a.a.createElement(l.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},Hg0Q:function(e,n,t){"use strict";t.d(n,"a",function(){return s});var o=t("mXGw"),a=t.n(o),r=t("zpLS");function s(){return a.a.useContext(r.a)}},IBI0:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var o=t("mXGw"),a=t.n(o),r=t("yZEQ"),s=t("uU96"),i=t("VPks"),l=t("LpUc"),c=t("Lqxv"),p=Object(r.a)(function(e){return{root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}}});function m(){var e=p(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(c.a,{control:a.a.createElement(s.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(l.a,{in:t},a.a.createElement(i.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},K0rs:function(e,n){e.exports='---\ntitle: Componentes de Transição React\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transições\n\n<p class="description">Transições ajudam a fazer a INTERFACE expressiva e fácil de usar.</p>\n\nMaterial-UI provê um número de transições que podem ser usadas para introduzir algumas [animações](https://material.io/design/motion/) básicas para os componentes de sua aplicação.\n\nPara um melhor suporte ao server rendering Material-UI provê uma propriedade de `estilo` para o filho de alguns componentes de transição (Fade, Grow, Zoom, Slide). A propriedade `style` deve ser aplicada ao DOM para que a animação funcione conforme esperada.\n\n```jsx\n// O objeto `props` contém uma propriedade` style`.\n// Você precisa fornecê-lo ao elemento `div` como mostrado aqui.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpanda verticalmente a partir do topo do elemento filho. A propriedade `collapsedHeight` pode ser usada para definir a altura mínima quando não expandida.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFade in de transparente para opaco.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpande para fora a partir do centro do elemento filho, enquanto também desvanece em efeito de transparente para opaco.\n\nO segundo exemplo demonstra como alterar `transform-origin` e condicionalmente aplica a propriedade `timeout` para alterar a velocidade de entrada.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nDeslize a partir da borda da tela. A propriedade `direction` controla em qual borda da tela a transição começa.\n\nA propriedade de transição do componente `mountOnEnter` impede que o componente filho seja montado até que `in` seja `true`. Isso evita que o componente relativamente posicionado role para a visão a partir da posição fora da tela. Da mesma forma, a propriedade `unmountOnExit` remove o componente do DOM após a transição ter sido exibida (`in` = `false`).\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpandir para fora partindo do centro do elemento filho.\n\nEste exemplo também demonstra como atrasar a transição de entrada.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},KVoU:function(e,n){e.exports='---\ntitle: Transition React component\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transiciones\n\n<p class="description">Transition helps make a UI expressive and easy to use.</p>\n\nMaterial-UI provides a number of transitions that can be used to introduce some basic [motion](https://material.io/design/motion/) to your applications components.\n\nTo better support server rendering Material-UI provides a `style` property to the children of some transition components (Fade, Grow, Zoom, Slide). The `style` property must be applied to the DOM for the animation to work as expected.\n\n```jsx\n// The `props` object contains a `style` property.\n// You need to provide it to the `div` element as shown here.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFade in from transparent to opaque.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpand outwards from the center of the child element, while also fading in from transparent to opaque.\n\nThe second example demonstrates how to change the `transform-origin`, and conditionally applies the `timeout` property to change the entry speed.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\nThe Transition component\'s `mountOnEnter` property prevents the child component from being mounted until `in` is `true`. This prevents the relatively positioned component from scrolling into view from it\'s off-screen position. Similarly the `unmountOnExit` property removes the component from the DOM after it has been transition off screen.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpand outwards from the center of the child element.\n\nThis example also demonstrates how to delay the enter transition.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},LVkv:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var o=t("mXGw"),a=t.n(o),r=t("uU96"),s=t("VPks"),i=t("C4Ea"),l=t("Lqxv"),c=t("yZEQ"),p=Object(c.a)(function(e){return{root:{height:180},wrapper:{width:100+e.spacing(2)},paper:{zIndex:1,position:"relative",margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}}});function m(){var e=p(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement("div",{className:e.wrapper},a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement(i.a,{direction:"up",in:t,mountOnEnter:!0,unmountOnExit:!0},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},Lqxv:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),s=t.n(r),i=t("PDtE"),l=t("Hg0Q"),c=t("XpU0"),p=t("Oy88"),m=t("GbnF"),d=s.a.forwardRef(function(e,n){e.checked;var t=e.classes,r=e.className,c=e.control,d=e.disabled,h=(e.inputRef,e.label),u=e.labelPlacement,g=void 0===u?"end":u,f=(e.name,e.onChange,e.value,Object(a.a)(e,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"])),v=Object(l.a)(),y=d;void 0===y&&void 0!==c.props.disabled&&(y=c.props.disabled),void 0===y&&v&&(y=v.disabled);var w={disabled:y};return["checked","name","onChange","value","inputRef"].forEach(function(n){void 0===c.props[n]&&void 0!==e[n]&&(w[n]=e[n])}),s.a.createElement("label",Object(o.default)({className:Object(i.a)(t.root,r,"end"!==g&&t["labelPlacement".concat(Object(m.a)(g))],y&&t.disabled),ref:n},f),s.a.cloneElement(c,w),s.a.createElement(p.a,{component:"span",className:Object(i.a)(t.label,y&&t.disabled)},h))});n.a=Object(c.default)(function(e){return{root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}},{name:"MuiFormControlLabel"})(d)},Mm2j:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("z3IF"),a=t("mXGw"),r=t.n(a),s=t("yZEQ"),i=t("uU96"),l=t("VPks"),c=t("CFQC"),p=t("Lqxv"),m=Object(s.a)(function(e){return{root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}}});function d(){var e=m(),n=r.a.useState(!1),t=n[0],a=n[1];return r.a.createElement("div",{className:e.root},r.a.createElement(p.a,{control:r.a.createElement(i.a,{checked:t,onChange:function(){a(function(e){return!e})}}),label:"Show"}),r.a.createElement("div",{className:e.container},r.a.createElement(c.a,{in:t},r.a.createElement(l.a,{elevation:4,className:e.paper},r.a.createElement("svg",{className:e.svg},r.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),r.a.createElement(c.a,Object(o.default)({in:t,style:{transformOrigin:"0 0 0"}},t?{timeout:1e3}:{}),r.a.createElement(l.a,{elevation:4,className:e.paper},r.a.createElement("svg",{className:e.svg},r.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},NH2O:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("uU96"),s=t("VPks"),i=t("C4Ea"),l=t("Lqxv"),c=t("yZEQ"),p=t("WLtd"),m=Object(c.a)(function(e){return Object(p.a)({root:{height:180},wrapper:{width:100+e.spacing(2)},paper:{zIndex:1,position:"relative",margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}})});function d(){var e=m(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement("div",{className:e.wrapper},a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement(i.a,{direction:"up",in:t,mountOnEnter:!0,unmountOnExit:!0},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},ObkN:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Grow from '@material-ui/core/Grow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function SimpleGrow() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Grow in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Grow>\n        {/* Conditionally applies the timeout prop to change the entry speed. */}\n        <Grow\n          in={checked}\n          style={{ transformOrigin: '0 0 0' }}\n          {...(checked ? { timeout: 1000 } : {})}\n        >\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Grow>\n      </div>\n    </div>\n  );\n}\n"},R6qF:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Zoom from '@material-ui/core/Zoom';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 180,\n    },\n    container: {\n      display: 'flex',\n    },\n    paper: {\n      margin: theme.spacing(1),\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default function SimpleZoom() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Zoom in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Zoom>\n        <Zoom in={checked} style={{ transitionDelay: checked ? '500ms' : '0ms' }}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Zoom>\n      </div>\n    </div>\n  );\n}\n"},SH2o:function(e,n){e.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function SimpleCollapse() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Collapse in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Collapse>\n        <Collapse in={checked} collapsedHeight=\"40px\">\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n"},TRCG:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180,\n  },\n  wrapper: {\n    width: 100 + theme.spacing(2),\n  },\n  paper: {\n    zIndex: 1,\n    position: 'relative',\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function SimpleSlide() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <FormControlLabel\n          control={<Switch checked={checked} onChange={handleChange} />}\n          label=\"Show\"\n        />\n        <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Slide>\n      </div>\n    </div>\n  );\n}\n"},V4Tv:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Grow from '@material-ui/core/Grow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 180,\n    },\n    container: {\n      display: 'flex',\n    },\n    paper: {\n      margin: theme.spacing(1),\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default function SimpleGrow() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Grow in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Grow>\n        {/* Conditionally applies the timeout prop to change the entry speed. */}\n        <Grow\n          in={checked}\n          style={{ transformOrigin: '0 0 0' }}\n          {...(checked ? { timeout: 1000 } : {})}\n        >\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Grow>\n      </div>\n    </div>\n  );\n}\n"},WH4S:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),s=t.n(r),i=t("PDtE"),l=t("Hg0Q"),c=t("XpU0"),p=t("l/nz"),m=s.a.forwardRef(function(e,n){var t=e.autoFocus,r=e.checked,c=e.checkedIcon,m=e.classes,d=e.className,h=e.defaultChecked,u=e.disabled,g=e.icon,f=e.id,v=e.inputProps,y=e.inputRef,w=e.name,S=e.onBlur,b=e.onChange,k=e.onFocus,E=e.readOnly,C=e.required,x=e.tabIndex,N=e.type,F=e.value,j=Object(a.a)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),O=s.a.useRef(null!=r).current,T=s.a.useState(Boolean(h)),P=T[0],G=T[1],M=Object(l.a)(),Z=u;M&&void 0===Z&&(Z=M.disabled);var L=O?r:P,R="checkbox"===N||"radio"===N;return s.a.createElement(p.a,Object(o.default)({component:"span",className:Object(i.a)(m.root,d,L&&m.checked,Z&&m.disabled),disabled:Z,tabIndex:null,role:void 0,onFocus:function(e){k&&k(e),M&&M.onFocus&&M.onFocus(e)},onBlur:function(e){S&&S(e),M&&M.onBlur&&M.onBlur(e)},ref:n},j),L?c:g,s.a.createElement("input",Object(o.default)({autoFocus:t,checked:r,defaultChecked:h,className:m.input,disabled:Z,id:R&&f,name:w,onChange:function(e){var n=e.target.checked;O||G(n),b&&b(e,n)},readOnly:E,ref:y,required:C,tabIndex:x,type:N,value:F},v)))});n.a=Object(c.default)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0}},{name:"PrivateSwitchBase"})(m)},WLtd:function(e,n,t){"use strict";t.d(n,"a",function(){return a});var o=t("AMAy");function a(e){return Object(o.a)(e)}},ZMnV:function(e,n){e.exports='---\ntitle: React Transition（过渡动画）组件\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transitions（过渡动画）\n\n<p class="description">过渡动画使 UI 更富有表现力并且易于使用。</p>\n\nMaterial-UI提供了一系列的过渡效果, 你可以将一些基本的 [动作](https://material.io/design/motion/) 添加到你的应用的组件中.\n\n为了更好地支持服务端渲染, Material-UI 为某些过渡组件 (Fade, Grow, Zoom, Slide) 的子级提供了 `style` 属性。 为了让动画如期实现, 必须将 `style` 属性应用到DOM上.\n\n```jsx\n// \'props\'对象包含一个\'style\'属性。\n// 你需要将这个属性提供给 "div" 元素，如下所示。\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse（折叠）\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade（淡入淡出）\n\n从透明淡入至不透明。\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow（扩展）\n\n从子元素的中心向外扩展，同时从透明淡入至不透明。\n\n第二个示例演示如何更改 `transform-origin` 属性，以及有条件地用 `timeout` 属性来改变元素进入的速度。\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide（滑动）\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\n过渡(Transition) 组件的 `mountOnEnter` 属性保证了只有 `in` 是`true`时，子组件才会被渲染。 这可以保证相对上定位好的组件不会从屏幕外面的位置滚动到视图中。 同样的， 在组件从屏幕中过渡完后，`unmountOnExit` 属性将次组件从 DOM 中移除。\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom（放大）\n\n从子元素的中心向外扩展。\n\n此示例还演示了如何延迟过渡的开始。\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},awC0:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 180,\n    },\n    container: {\n      display: 'flex',\n    },\n    paper: {\n      margin: theme.spacing(1),\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default function SimpleCollapse() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Collapse in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Collapse>\n        <Collapse in={checked} collapsedHeight=\"40px\">\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n"},"bc+W":function(e,n){e.exports='---\ntitle: Composants React de transitions\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Les transitions\n\n<p class="description">Les transitions contribue à rendre une interface utilisateur expressif et facile à utiliser.</p>\n\nMaterial-UI fournit un certain nombre de transitions qui peuvent être utilisées pour introduire [des transitions de base](https://material.io/design/motion/) dans votre applications.\n\nAfin de mieux prendre en charge le rendu du serveur, Material-UI fournit une propriété `style` pour les enfants de certains composants de transition (Fade, Grow, Zoom, Slide). La propriété `style` doit être appliquée au DOM pour que l\'animation fonctionne comme prévu.\n\n```jsx\n// L\'objet `props` contient une propriété `style`.\n// Vous devez le fournir à l\'élément `div` comme indiqué ici.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFondu de transparent à opaque.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpand outwards from the center of the child element, while also fading in from transparent to opaque.\n\nThe second example demonstrates how to change the `transform-origin`, and conditionally applies the `timeout` property to change the entry speed.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\nThe Transition component\'s `mountOnEnter` property prevents the child component from being mounted until `in` is `true`. This prevents the relatively positioned component from scrolling into view from it\'s off-screen position. Similarly the `unmountOnExit` property removes the component from the DOM after it has been transition off screen.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpand outwards from the center of the child element.\n\nCet exemple montre également comment retarder la transition d\'entrée.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},cMr5:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var o=t("mXGw"),a=t.n(o),r=t("yZEQ"),s=t("uU96"),i=t("VPks"),l=t("lyll"),c=t("Lqxv"),p=Object(r.a)(function(e){return{root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}}});function m(){var e=p(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(c.a,{control:a.a.createElement(s.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(l.a,{in:t},a.a.createElement(i.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),a.a.createElement(l.a,{in:t,collapsedHeight:"40px"},a.a.createElement(i.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},dNpU:function(e,n){e.exports="import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Fade from '@material-ui/core/Fade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 180,\n    },\n    container: {\n      display: 'flex',\n    },\n    paper: {\n      margin: theme.spacing(1),\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default function SimpleFade() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Fade in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n"},eCZm:function(e,n){e.exports='---\ntitle: Transition React component\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transitions\n\n<p class="description">Transition helps make a UI expressive and easy to use.</p>\n\nMaterial-UI provides a number of transitions that can be used to introduce some basic\n[motion](https://material.io/design/motion/)\nto your applications components.\n\nTo better support server rendering Material-UI provides a `style` property\nto the children of some transition components (Fade, Grow, Zoom, Slide).\nThe `style` property must be applied to the DOM for the animation to work as expected.\n\n```jsx\n// The `props` object contains a `style` property.\n// You need to provide it to the `div` element as shown here.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element.\nThe `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFade in from transparent to opaque.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpand outwards from the center of the child element, while also fading in\nfrom transparent to opaque.\n\nThe second example demonstrates how to change the `transform-origin`, and conditionally applies\nthe `timeout` property to change the entry speed.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen.\nThe `direction` property controls which edge of the screen the transition starts from.\n\nThe Transition component\'s  `mountOnEnter` property prevents the child component from being mounted\nuntil `in` is `true`. This prevents the relatively positioned component from scrolling into view\nfrom it\'s off-screen position. Similarly the `unmountOnExit` property removes the component\nfrom the DOM after it has been transition off screen.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpand outwards from the center of the child element.\n\nThis example also demonstrates how to delay the enter transition.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}\n'},eUqQ:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("yZEQ"),s=t("WLtd"),i=t("uU96"),l=t("VPks"),c=t("lyll"),p=t("Lqxv"),m=Object(r.a)(function(e){return Object(s.a)({root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}})});function d(){var e=m(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(p.a,{control:a.a.createElement(i.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(c.a,{in:t},a.a.createElement(l.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),a.a.createElement(c.a,{in:t,collapsedHeight:"40px"},a.a.createElement(l.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},fEVY:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("mXGw"),a=t.n(o),r=t("uU96"),s=t("VPks"),i=t("fnHy"),l=t("Lqxv"),c=t("yZEQ"),p=t("WLtd"),m=Object(c.a)(function(e){return Object(p.a)({root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}})});function d(){var e=m(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(i.a,{in:t},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),a.a.createElement(i.a,{in:t,style:{transitionDelay:t?"500ms":"0ms"}},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},fnHy:function(e,n,t){"use strict";var o=t("z3IF"),a=t("Rbzu"),r=t("2Fjn"),s=t("mXGw"),i=t.n(s),l=t("VKDF"),c=t("tqcJ"),p=t("LMpM"),m=t("xOSD"),d=t("c1Jj"),h={entering:{transform:"none"},entered:{transform:"none"}},u={enter:c.b.enteringScreen,exit:c.b.leavingScreen},g=i.a.forwardRef(function(e,n){var t=e.children,s=e.in,c=e.onEnter,g=e.onExit,f=e.style,v=e.timeout,y=void 0===v?u:v,w=Object(r.a)(e,["children","in","onEnter","onExit","style","timeout"]),S=Object(p.a)(),b=Object(d.c)(t.ref,n);return i.a.createElement(l.a,Object(o.default)({appear:!0,in:s,onEnter:function(e,n){Object(m.b)(e);var t=Object(m.a)({style:f,timeout:y},{mode:"enter"});e.style.webkitTransition=S.transitions.create("transform",t),e.style.transition=S.transitions.create("transform",t),c&&c(e,n)},onExit:function(e){var n=Object(m.a)({style:f,timeout:y},{mode:"exit"});e.style.webkitTransition=S.transitions.create("transform",n),e.style.transition=S.transitions.create("transform",n),g&&g(e)},timeout:y},w),function(e,n){return i.a.cloneElement(t,Object(a.a)({style:Object(a.a)({transform:"scale(0)",visibility:"exited"!==e||s?void 0:"hidden"},h[e],f,t.props.style),ref:b},n))})});n.a=g},j1Vp:function(e,n){e.exports='---\ntitle: Transition React component\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transições\n\n<p class="description">Transition helps make a UI expressive and easy to use.</p>\n\nMaterial-UI provides a number of transitions that can be used to introduce some basic [motion](https://material.io/design/motion/) to your applications components.\n\nTo better support server rendering Material-UI provides a `style` property to the children of some transition components (Fade, Grow, Zoom, Slide). The `style` property must be applied to the DOM for the animation to work as expected.\n\n```jsx\n// The `props` object contains a `style` property.\n// You need to provide it to the `div` element as shown here.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFade in from transparent to opaque.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpand outwards from the center of the child element, while also fading in from transparent to opaque.\n\nThe second example demonstrates how to change the `transform-origin`, and conditionally applies the `timeout` property to change the entry speed.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\nThe Transition component\'s `mountOnEnter` property prevents the child component from being mounted until `in` is `true`. This prevents the relatively positioned component from scrolling into view from it\'s off-screen position. Similarly the `unmountOnExit` property removes the component from the DOM after it has been transition off screen.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpand outwards from the center of the child element.\n\nThis example also demonstrates how to delay the enter transition.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},jG51:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var o=t("mXGw"),a=t.n(o),r=t("uU96"),s=t("VPks"),i=t("fnHy"),l=t("Lqxv"),c=t("yZEQ"),p=Object(c.a)(function(e){return{root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}}});function m(){var e=p(),n=a.a.useState(!1),t=n[0],o=n[1];return a.a.createElement("div",{className:e.root},a.a.createElement(l.a,{control:a.a.createElement(r.a,{checked:t,onChange:function(){o(function(e){return!e})}}),label:"Show"}),a.a.createElement("div",{className:e.container},a.a.createElement(i.a,{in:t},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),a.a.createElement(i.a,{in:t,style:{transitionDelay:t?"500ms":"0ms"}},a.a.createElement(s.a,{elevation:4,className:e.paper},a.a.createElement("svg",{className:e.svg},a.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},k9wB:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 180,\n    },\n    wrapper: {\n      width: 100 + theme.spacing(2),\n    },\n    paper: {\n      zIndex: 1,\n      position: 'relative',\n      margin: theme.spacing(1),\n    },\n    svg: {\n      width: 100,\n      height: 100,\n    },\n    polygon: {\n      fill: theme.palette.common.white,\n      stroke: theme.palette.divider,\n      strokeWidth: 1,\n    },\n  }),\n);\n\nexport default function SimpleSlide() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <FormControlLabel\n          control={<Switch checked={checked} onChange={handleChange} />}\n          label=\"Show\"\n        />\n        <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Slide>\n      </div>\n    </div>\n  );\n}\n"},mnFu:function(e,n,t){var o={"./SimpleCollapse.js":"SH2o","./SimpleCollapse.tsx":"awC0","./SimpleFade.js":"DQjZ","./SimpleFade.tsx":"dNpU","./SimpleGrow.js":"ObkN","./SimpleGrow.tsx":"V4Tv","./SimpleSlide.js":"TRCG","./SimpleSlide.tsx":"k9wB","./SimpleZoom.js":"xkEi","./SimpleZoom.tsx":"R6qF"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="mnFu"},qoXX:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var o=t("z3IF"),a=t("mXGw"),r=t.n(a),s=t("yZEQ"),i=t("WLtd"),l=t("uU96"),c=t("VPks"),p=t("CFQC"),m=t("Lqxv"),d=Object(s.a)(function(e){return Object(i.a)({root:{height:180},container:{display:"flex"},paper:{margin:e.spacing(1)},svg:{width:100,height:100},polygon:{fill:e.palette.common.white,stroke:e.palette.divider,strokeWidth:1}})});function h(){var e=d(),n=r.a.useState(!1),t=n[0],a=n[1];return r.a.createElement("div",{className:e.root},r.a.createElement(m.a,{control:r.a.createElement(l.a,{checked:t,onChange:function(){a(function(e){return!e})}}),label:"Show"}),r.a.createElement("div",{className:e.container},r.a.createElement(p.a,{in:t},r.a.createElement(c.a,{elevation:4,className:e.paper},r.a.createElement("svg",{className:e.svg},r.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon})))),r.a.createElement(p.a,Object(o.default)({in:t,style:{transformOrigin:"0 0 0"}},t?{timeout:1e3}:{}),r.a.createElement(c.a,{elevation:4,className:e.paper},r.a.createElement("svg",{className:e.svg},r.a.createElement("polygon",{points:"0,100 50,00, 100,100",className:e.polygon}))))))}},sETD:function(e,n,t){var o={"./SimpleCollapse.js":"cMr5","./SimpleCollapse.tsx":"eUqQ","./SimpleFade.js":"IBI0","./SimpleFade.tsx":"Eizo","./SimpleGrow.js":"Mm2j","./SimpleGrow.tsx":"qoXX","./SimpleSlide.js":"LVkv","./SimpleSlide.tsx":"NH2O","./SimpleZoom.js":"jG51","./SimpleZoom.tsx":"fEVY","./transitions-aa.md":"vhBt","./transitions-de.md":"sePX","./transitions-es.md":"KVoU","./transitions-fr.md":"bc+W","./transitions-ja.md":"yBip","./transitions-pt.md":"K0rs","./transitions-ru.md":"j1Vp","./transitions-zh.md":"ZMnV","./transitions.md":"eCZm"};function a(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=r,e.exports=a,a.id="sETD"},sePX:function(e,n){e.exports='---\ntitle: Übergang React Komponente\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Übergänge\n\n<p class="description">Übergänge helfen, eine Oberfläche ausdrucksvoll und einfach zu benutzen zu gestalten.</p>\n\nMaterial-UI bietet eine Anzahl von Übergängen, die verwendet werden können, um einige einfache [Bewegungen](https://material.io/design/motion/) in deiner Anwendung einzuführen.\n\nUm Server Rendering besser zu unterstützen, bietet Material-UI ein `style` Property auf den Kindern einiger Übergangs-Komponenten (Fade, Grow, Zoom, Slide). Das `style` Property muss auf das DOM angewendet werden, damit die Animation wie gewünscht funktioniert.\n\n```jsx\n// Das `props\'-Objekt enthält eine` style\'-Eigenschaft.\n// Dieses musst du, wie hier gezeigt, an das `div` Element übergeben.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nBlende von Transparent zu Undurchsichtig ein.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nErweitert sich von der Mitte des untergeordneten Elements nach außen, während es von transparent nach opak einblendet.\n\nDas zweite Beispiel zeigt, wie Sie die `transform-origin` ändern können und bedingt die ` Timeout` Eigenschaft anpassen, um die Eintrittsgeschwindigkeit zu beeinflussen.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\nDie `mountOnEnter` -Eigenschaft der Transition-Komponente verhindert, dass die untergeordnete Komponente gezeigt wird, bis `in` gleich `true` ist. Dadurch wird verhindert, dass die relativ positionierte Komponente von der Off-Screen-Position in die Ansicht gescrollt wird. In ähnlicher Weise entfernt die `unmountOnExit` -Eigenschaft die Komponente aus dem DOM, nachdem der Übergang vom Bildschirm beendet wurde.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nErweitern sich von der Mitte des untergeordneten Elements nach außen.\n\nIn diesem Beispiel veranschaulicht, wie der Eintritts animation verzögert wird.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'},uORz:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var o=t("mXGw"),a=t.n(o),r=t("e+1t"),s=t("sETD"),i=t("mnFu"),l=a.a.createElement(r.a,{req:s,reqSource:i,reqPrefix:"pages/components/transitions"});function c(){return l}},uU96:function(e,n,t){"use strict";var o=t("z3IF"),a=t("2Fjn"),r=t("mXGw"),s=t.n(r),i=t("PDtE"),l=t("XpU0"),c=t("cYeA"),p=t("GbnF"),m=t("WH4S"),d=s.a.forwardRef(function(e,n){var t=e.classes,r=e.className,l=e.color,c=void 0===l?"secondary":l,d=e.edge,h=void 0!==d&&d,u=e.size,g=void 0===u?"medium":u,f=Object(a.a)(e,["classes","className","color","edge","size"]),v=s.a.createElement("span",{className:t.thumb});return s.a.createElement("span",{className:Object(i.a)(t.root,r,{start:t.edgeStart,end:t.edgeEnd}[h],{small:t["size".concat(Object(p.a)(g))]}[g])},s.a.createElement(m.a,Object(o.default)({type:"checkbox",icon:v,checkedIcon:v,classes:{root:Object(i.a)(t.switchBase,t["color".concat(Object(p.a)(c))]),input:t.input,checked:t.checked,disabled:t.disabled},ref:n},f)),s.a.createElement("span",{className:t.track}))});n.a=Object(l.default)(function(e){return{root:{display:"inline-flex",width:58,height:38,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle"},edgeStart:{marginLeft:-8},edgeEnd:{marginRight:-8},switchBase:{position:"absolute",top:0,left:0,zIndex:1,color:"light"===e.palette.type?e.palette.grey[50]:e.palette.grey[400],transition:e.transitions.create(["left","transform"],{duration:e.transitions.duration.shortest}),"&$checked":{transform:"translateX(50%)"},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{opacity:.5},"&$disabled + $track":{opacity:"light"===e.palette.type?.12:.1}},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(c.fade)(e.palette.primary.main,e.palette.action.hoverOpacity)}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.primary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(c.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity)}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.secondary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white}},sizeSmall:{width:40,height:24,padding:7,"& $thumb":{width:16,height:16},"& $switchBase":{padding:4}},checked:{},disabled:{},input:{left:"-100%",width:"300%"},thumb:{boxShadow:e.shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%"},track:{height:"100%",width:"100%",borderRadius:7,zIndex:-1,transition:e.transitions.create(["opacity","background-color"],{duration:e.transitions.duration.shortest}),backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white,opacity:"light"===e.palette.type?.38:.3}}},{name:"MuiSwitch"})(d)},"v+so":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/transitions",function(){var e=t("uORz");return{page:e.default||e}}])},vhBt:function(e,n){e.exports='---\ntitle: crwdns92548:0crwdne92548:0\ncomponents: crwdns92550:0crwdne92550:0\n---\n\n# crwdns92552:0crwdne92552:0\n\n<p class="description">crwdns92554:0crwdne92554:0</p>\n\ncrwdns92556:0crwdne92556:0\n\ncrwdns92558:0crwdne92558:0 crwdns92560:0crwdne92560:0\n\n```jsx\ncrwdns92562:0crwdne92562:0\ncrwdns92564:0crwdne92564:0\ncrwdns92566:0{...props}crwdne92566:0\n```\n\n## crwdns92568:0crwdne92568:0\n\ncrwdns92570:0crwdne92570:0 crwdns92572:0crwdne92572:0\n\ncrwdns92574:0crwdne92574:0\n\n## crwdns92576:0crwdne92576:0\n\ncrwdns92578:0crwdne92578:0\n\ncrwdns92580:0crwdne92580:0\n\n## crwdns92582:0crwdne92582:0\n\ncrwdns92584:0crwdne92584:0\n\ncrwdns92586:0crwdne92586:0\n\ncrwdns92588:0crwdne92588:0\n\n## crwdns92590:0crwdne92590:0\n\ncrwdns92592:0crwdne92592:0 crwdns92594:0crwdne92594:0\n\ncrwdns92596:0crwdne92596:0 crwdns92598:0crwdne92598:0 crwdns92600:0crwdne92600:0\n\ncrwdns92602:0crwdne92602:0\n\n## crwdns92604:0crwdne92604:0\n\ncrwdns92606:0crwdne92606:0\n\ncrwdns92608:0crwdne92608:0\n\ncrwdns92610:0crwdne92610:0'},xkEi:function(e,n){e.exports="import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Zoom from '@material-ui/core/Zoom';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 180,\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nexport default function SimpleZoom() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  function handleChange() {\n    setChecked(prev => !prev);\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={handleChange} />}\n        label=\"Show\"\n      />\n      <div className={classes.container}>\n        <Zoom in={checked}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Zoom>\n        <Zoom in={checked} style={{ transitionDelay: checked ? '500ms' : '0ms' }}>\n          <Paper elevation={4} className={classes.paper}>\n            <svg className={classes.svg}>\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n            </svg>\n          </Paper>\n        </Zoom>\n      </div>\n    </div>\n  );\n}\n"},yBip:function(e,n){e.exports='---\ntitle: Transition React component\ncomponents: Collapse, Fade, Grow, Slide, Zoom\n---\n\n# Transições\n\n<p class="description">Transition helps make a UI expressive and easy to use.</p>\n\nMaterial-UI provides a number of transitions that can be used to introduce some basic [motion](https://material.io/design/motion/) to your applications components.\n\nTo better support server rendering Material-UI provides a `style` property to the children of some transition components (Fade, Grow, Zoom, Slide). The `style` property must be applied to the DOM for the animation to work as expected.\n\n```jsx\n// The `props` object contains a `style` property.\n// You need to provide it to the `div` element as shown here.\nfunction MyComponent(props) {\n  return (\n    <div {...props}>\n      Fade\n    </div>\n  );\n}\n\nexport default Main() {\n  return (\n    <Fade>\n      <MyComponent />\n    </Fade>\n  );\n}\n```\n\n## Collapse\n\nExpand vertically from the top of the child element. The `collapsedHeight` property can be used to set the minimum height when not expanded.\n\n{{"demo": "pages/components/transitions/SimpleCollapse.js"}}\n\n## Fade\n\nFade in from transparent to opaque.\n\n{{"demo": "pages/components/transitions/SimpleFade.js"}}\n\n## Grow\n\nExpand outwards from the center of the child element, while also fading in from transparent to opaque.\n\nThe second example demonstrates how to change the `transform-origin`, and conditionally applies the `timeout` property to change the entry speed.\n\n{{"demo": "pages/components/transitions/SimpleGrow.js"}}\n\n## Slide\n\nSlide in from the edge of the screen. The `direction` property controls which edge of the screen the transition starts from.\n\nThe Transition component\'s `mountOnEnter` property prevents the child component from being mounted until `in` is `true`. This prevents the relatively positioned component from scrolling into view from it\'s off-screen position. Similarly the `unmountOnExit` property removes the component from the DOM after it has been transition off screen.\n\n{{"demo": "pages/components/transitions/SimpleSlide.js"}}\n\n## Zoom\n\nExpand outwards from the center of the child element.\n\nThis example also demonstrates how to delay the enter transition.\n\n{{"demo": "pages/components/transitions/SimpleZoom.js"}}'}},[["v+so","5d41","9da1"]]]);