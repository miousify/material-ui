(window.webpackJsonp=window.webpackJsonp||[]).push([["51ed"],{"/eYM":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return l});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("O8uh"),i=Object(r.a)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}});function l(){var n=i();return s.a.createElement(a.a,{className:n.root},"Hook")}},"5Eir":function(n,e){n.exports='import React from \'react\';\nimport { ThemeProvider, useTheme, makeStyles, createStyles } from \'@material-ui/styles\';\n\ninterface MyTheme {\n  color: string;\n}\n\ninterface ComponentProps {\n  backgroundColor: string;\n}\n\nconst useStyles = makeStyles((theme: MyTheme) =>\n  createStyles({\n    root: (props: ComponentProps) => ({\n      backgroundColor: props.backgroundColor,\n      color: theme.color,\n    }),\n  }),\n);\n\nconst Component = React.memo((props: ComponentProps) => {\n  const classes = useStyles(props);\n  const theme = useTheme<MyTheme>();\n\n  const rendered = React.useRef(1);\n  React.useEffect(() => {\n    rendered.current += 1;\n  });\n\n  return (\n    <div className={classes.root}>\n      rendered {rendered.current} times\n      <br />\n      color: {theme.color}\n      <br />\n      backgroundColor: {props.backgroundColor}\n    </div>\n  );\n});\n\nexport default function StressTest() {\n  const [backgroundColor, setBackgroundColor] = React.useState(\'#2196f3\');\n  function handleBackgroundColorChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setBackgroundColor(event.target.value);\n  }\n\n  const [color, setColor] = React.useState(\'#ffffff\');\n  function handleColorChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setColor(event.target.value);\n  }\n\n  const theme = React.useMemo(() => ({ color }), [color]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <fieldset>\n          <div>\n            <label htmlFor="color">theme color: </label>\n            <input id="color" type="color" onChange={handleColorChange} value={color} />\n          </div>\n          <div>\n            <label htmlFor="background-color">background-color property: </label>\n            <input\n              id="background-color"\n              type="color"\n              onChange={handleBackgroundColorChange}\n              value={backgroundColor}\n            />\n          </div>\n        </fieldset>\n        <Component backgroundColor={backgroundColor} />\n      </div>\n    </ThemeProvider>\n  );\n}\n'},"61Qr":function(n,e){n.exports="import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n"},"7UDI":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var o=t("mXGw"),s=t.n(o),r=t("RECL"),a=t("O8uh"),i=Object(r.a)(a.a)({background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}),l=s.a.createElement(i,null,"Styled Components");function c(){return l}},"7YK0":function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\n\ninterface Props {\n  color: 'red' | 'blue';\n}\n\nconst useStyles = makeStyles({\n  root: {\n    background: (props: Props) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: Props) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n});\n\nfunction MyButton(props: Props & Omit<MuiButtonProps, keyof Props>) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button className={classes.root} {...other} />;\n}\n\nexport default function AdaptingHook() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},AMAy:function(n,e,t){"use strict";function o(n){return n}t.d(e,"a",function(){return o})},AQpT:function(n,e){n.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n"},Argf:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return g});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("mii5"),i=t("h7Hf"),l=Object(r.a)(function(n){return{root:function(e){return{backgroundColor:e.backgroundColor,color:n.color}}}}),c=s.a.createElement("br",null),p=s.a.createElement("br",null),d=s.a.memo(function(n){var e=l(n),t=Object(a.a)(),o=s.a.useRef(1);return s.a.useEffect(function(){o.current+=1}),s.a.createElement("div",{className:e.root},"rendered ",o.current," times",c,"color: ",t.color,p,"backgroundColor: ",n.backgroundColor)}),u=s.a.createElement("label",{htmlFor:"color"},"theme color: "),m=s.a.createElement("label",{htmlFor:"background-color"},"background-color property: ");function g(){var n=s.a.useState("#2196f3"),e=n[0],t=n[1];var o=s.a.useState("#ffffff"),r=o[0],a=o[1];var l=s.a.useMemo(function(){return{color:r}},[r]);return s.a.createElement(i.a,{theme:l},s.a.createElement("div",null,s.a.createElement("fieldset",null,s.a.createElement("div",null,u,s.a.createElement("input",{id:"color",type:"color",onChange:function(n){a(n.target.value)},value:r})),s.a.createElement("div",null,m,s.a.createElement("input",{id:"background-color",type:"color",onChange:function(n){t(n.target.value)},value:e}))),s.a.createElement(d,{backgroundColor:e})))}},BATJ:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return l});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("O8uh"),i=Object(r.a)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}});function l(){var n=i();return s.a.createElement(a.a,{className:n.root},"Hook")}},CJSv:function(n,e,t){var o={"./AdaptingHOC.js":"ohWz","./AdaptingHOC.tsx":"tHPu","./AdaptingHook.js":"djCt","./AdaptingHook.tsx":"7YK0","./AdaptingStyledComponents.js":"v2iX","./AdaptingStyledComponents.tsx":"mKPn","./HigherOrderComponent.js":"AQpT","./HigherOrderComponent.tsx":"Y5lq","./Hook.js":"zksH","./Hook.tsx":"c/Jx","./NestedStylesHook.js":"v6uo","./NestedStylesHook.tsx":"ibfl","./StressTest.js":"vY63","./StressTest.tsx":"5Eir","./StyledComponents.js":"RDk1","./StyledComponents.tsx":"61Qr"};function s(n){var e=r(n);return t(e)}function r(n){var e=o[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}s.keys=function(){return Object.keys(o)},s.resolve=r,n.exports=s,s.id="CJSv"},D5xr:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">Sie k√∂nnen die Styling-L√∂sung von Material-UI in Ihrer App verwenden, unabh√§ngig davon, ob Sie Material-UI-Komponenten verwenden.</p>\n\nMaterial-UI hat das Ziel, solide Grundlagen f√ºr dynamische UIs zu schaffen. Der Einfachheit halber **stellen wir die in Material-UI-Komponenten verwendete Styling-L√∂sung** als `@material-ui/styles ` Paket zur Verf√ºgung. Sie k√∂nnen es verwenden, m√ºssen aber nicht, da Material-UI auch mit allen anderen wichtigen Styling-L√∂sungen [verwendbar ist](/guides/interoperability/).\n\n## Wieso die Styling-L√∂sung von Material-UI benutzten?\n\nIn fr√ºheren Versionen hat Material-UI LESS verwendet, eine benutzerdefinierte Inline-L√∂sung zum Schreiben der Stile der Komponenten. Diese Ans√§tze erwiesen sich jedoch als begrenzt Einsetzbar. Wir haben eine [*CSS-in-JS* L√∂sung adoptiert](https://github.com/oliviertassinari/a-journey-toward-better-style). Es ** schaltet viele gro√üartige Funktionen frei ** (Verschachtelung von Themen, dynamische Stile, Selbstunterst√ºtzung usw.). Wir denken, das ist die Zukunft:\n\n- [Eine vereinheitlichte Styling-Sprache](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [SCSS (Sass) in CSS-in-JS umwandeln](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nDie Styling-L√∂sung von Material-UI ist von vielen anderen Styling-Bibliotheken wie [styled-components](https://www.styled-components.com/) und [emotion](https://emotion.sh/) inspiriert.\n\n- üíÖ Sie k√∂nnen [die gleichen Vorteile](https://www.styled-components.com/docs/basics#motivation) wie bei styled-components erwarten.\n- üöÄ Es ist [blitzschnell](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© Es ist erweiterbar √ºber eine [Plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è Es verwednet [JSS](https://github.com/cssinjs/jss) im Kern - ein JavaScript zum CSS-Compiler mit [hohe Leistung](https://github.com/cssinjs/jss/blob/master/docs/performance.md), der zur Laufzeit und serverseitig arbeitet.\n- üì¶ Weniger als [15 KB komprimiert](https://bundlephobia.com/result?p=@material-ui/styles); und keine Erh√∂hung der B√ºndelgr√∂√üe, wenn es zusammen mit der Material-UI verwendet wird.\n\n## Installation\n\nUm die Abh√§ngigkeit zu ihrer `package.json` hinzuzuf√ºgen, f√ºhren Sie folgenden Befehl aus:\n\n```sh\n// mit npm\nnpm install @material-ui/styles\n\n// mit yarn\nyarn add @material-ui/styles\n```\n\n## Erste Schritte\n\nWir bieten 3 verschiedene APIs zum Generieren und Anwenden von Stilen, die jedoch alle dieselbe zugrunde liegende Logik aufweisen.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nHinweis: Dies gilt nur f√ºr aufrufende Syntax-Stil-Definitionen, die noch ein JSS-Objekt verwenden. Sie k√∂nnen dieses Verhalten auch mit einigen Einschr√§nkungen [√§ndern](/styles/advanced/#string-templates).\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Verschachteln von Selektoren\n\nSie k√∂nnen Selektoren verschachteln, um Elemente innerhalb der aktuellen Klasse oder Komponente anzuvisieren. Das folgende Beispiel benutzt die Hook-API, aber es funktioniert genauso wie die anderen APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Anpassung basierend auf Eigenschaften\n\nSie k√∂nnen eine Funktion an `makeStyles` (\"Interpolation\") √ºbergeben, um den generierten Wert basierend auf den Eigenschaften der Komponente anzupassen. Die Funktion kann auf Stilregelebene oder auf CSS-Eigenschaftsebene bereitgestellt werden:\n\n```jsx\nconst useStyles = makeStyles({\n  // Stilregel\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS Eigenschaft\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulierte Eigenschaften f√ºr dieses Beispiel\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Leite die Eigenschaften als erstes Argument an useStyles() weiter\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nDiese Buttonkomponente hat eine Farbeigenschaft, die ihre Farbe √§ndert:\n\n### Hook-API anpassen\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Gestylte Komponenten-API anpassen\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### API f√ºr Komponenten h√∂herer Ordnung anpassen\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stresstest\n\nIm folgenden Stresstest k√∂nnen Sie die *Themefarbe* und *background-color property* live aktualisieren:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},Dd4o:function(n,e,t){"use strict";t.r(e);var o=t("mXGw"),s=t.n(o),r=t("NlPR"),a=t("O8uh");e.default=Object(r.a)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}})(function(n){var e=n.classes;return s.a.createElement(a.a,{className:e.root},"Higher-order component")})},DkRs:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("VPks"),i=Object(r.a)({root:{padding:16,color:"red","& p":{color:"green","& span":{color:"blue"}}}}),l=s.a.createElement("p",null,"This is green since it is inside the paragraph"," ",s.a.createElement("span",null,"and this is blue since it is inside the span"));function c(){var n=i();return s.a.createElement(a.a,{className:n.root},"This is red since it is inside the paper.",l)}},Eujb:function(n,e,t){"use strict";t.r(e);var o=t("mXGw"),s=t.n(o),r=t("AMAy"),a=t("NlPR"),i=t("O8uh"),l=Object(r.a)({root:{background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}});e.default=Object(a.a)(l)(function(n){var e=n.classes;return s.a.createElement(i.a,{className:e.root},"Higher-order component")})},FqWo:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return h});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("AMAy"),i=t("mii5"),l=t("h7Hf"),c=Object(r.a)(function(n){return Object(a.a)({root:function(e){return{backgroundColor:e.backgroundColor,color:n.color}}})}),p=s.a.createElement("br",null),d=s.a.createElement("br",null),u=s.a.memo(function(n){var e=c(n),t=Object(i.a)(),o=s.a.useRef(1);return s.a.useEffect(function(){o.current+=1}),s.a.createElement("div",{className:e.root},"rendered ",o.current," times",p,"color: ",t.color,d,"backgroundColor: ",n.backgroundColor)}),m=s.a.createElement("label",{htmlFor:"color"},"theme color: "),g=s.a.createElement("label",{htmlFor:"background-color"},"background-color property: ");function h(){var n=s.a.useState("#2196f3"),e=n[0],t=n[1];var o=s.a.useState("#ffffff"),r=o[0],a=o[1];var i=s.a.useMemo(function(){return{color:r}},[r]);return s.a.createElement(l.a,{theme:i},s.a.createElement("div",null,s.a.createElement("fieldset",null,s.a.createElement("div",null,m,s.a.createElement("input",{id:"color",type:"color",onChange:function(n){a(n.target.value)},value:r})),s.a.createElement("div",null,g,s.a.createElement("input",{id:"background-color",type:"color",onChange:function(n){t(n.target.value)},value:e}))),s.a.createElement(u,{backgroundColor:e})))}},Ijyp:function(n,e){n.exports="# crwdns97612:0crwdne97612:0\n\n<p class=\"description\">crwdns97614:0crwdne97614:0</p>\n\ncrwdns97616:0crwdne97616:0 crwdns97618:0crwdne97618:0 crwdns97620:0crwdne97620:0\n\n## crwdns97622:0crwdne97622:0\n\ncrwdns97624:0crwdne97624:0 crwdns97626:0crwdne97626:0 crwdns97628:0crwdne97628:0 crwdns97630:0crwdne97630:0\n\n- [crwdns97634:0crwdne97634:0](crwdns97632:0crwdne97632:0)\n- [crwdns97638:0crwdne97638:0](crwdns97636:0crwdne97636:0)\n\ncrwdns97640:0crwdne97640:0\n\n- crwdns97642:0crwdne97642:0\n- crwdns97644:0crwdne97644:0\n- crwdns97646:0crwdne97646:0\n- crwdns97648:0crwdne97648:0\n- crwdns97650:0crwdne97650:0\n\n## crwdns97652:0crwdne97652:0\n\ncrwdns97654:0crwdne97654:0\n\n```sh\ncrwdns97656:0crwdne97656:0\n```\n\n## crwdns97658:0crwdne97658:0\n\ncrwdns97660:0crwdne97660:0\n\n### crwdns97662:0crwdne97662:0\n\n```jsx\ncrwdns97664:0{ makeStyles }crwdnd97664:0{classes.root}crwdne97664:0\n```\n\ncrwdns97666:0crwdne97666:0\n\n### crwdns97668:0crwdne97668:0\n\ncrwdns97670:0crwdne97670:0 crwdns97672:0crwdne97672:0\n\n```jsx\ncrwdns97674:0{ styled }crwdne97674:0\n```\n\ncrwdns97676:0crwdne97676:0\n\n### crwdns97678:0crwdne97678:0\n\n```jsx\ncrwdns97680:0{ withStyles }crwdnd97680:0{ classes }crwdnd97680:0{classes.root}crwdne97680:0\n```\n\ncrwdns97682:0crwdne97682:0\n\n## crwdns97684:0crwdne97684:0\n\ncrwdns97686:0crwdne97686:0 crwdns97688:0crwdne97688:0\n\n```js\ncrwdns97690:0{\n        color: 'blue'\n      }crwdne97690:0\n```\n\ncrwdns97692:0crwdne97692:0\n\n## crwdns97694:0crwdne97694:0\n\ncrwdns97696:0crwdne97696:0 crwdns97698:0crwdne97698:0\n\n```jsx\ncrwdns97700:0{\n    backgroundColor: props.backgroundColor,\n  }crwdnd97700:0{ backgroundColor: 'black', color: 'white' }crwdnd97700:0${classes.foo}crwdnd97700:0${classes.bar}crwdne97700:0\n```\n\ncrwdns97702:0crwdne97702:0\n\n### crwdns97704:0crwdne97704:0\n\ncrwdns97706:0crwdne97706:0\n\n### crwdns97708:0crwdne97708:0\n\ncrwdns97710:0crwdne97710:0\n\n### crwdns97712:0crwdne97712:0\n\ncrwdns97714:0crwdne97714:0\n\n## crwdns97716:0crwdne97716:0\n\ncrwdns97718:0crwdne97718:0\n\n```js\ncrwdns97720:0{\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }crwdne97720:0\n```\n\ncrwdns97722:0crwdne97722:0"},Mxb3:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\n\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\n\n## Why use Material-UI's styling solution?\n\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. We have [adopted a *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style). It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.). We think that this is the future:\n\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Conversion de SCSS (Sass) en CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\n\n- üíÖ You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\n- üöÄ It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è It uses [JSS](https://github.com/cssinjs/jss) at its core ‚Äì a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## Installation\n\nPour installer et enregistrer dans vos d√©pendances `package.json` , ex√©cutez:\n\n```sh\n// with npm\nnpm install @material-ui/styles\n\n// with yarn\nyarn add @material-ui/styles\n```\n\n## Getting started\n\nWe provide 3 different APIs to generate and apply styles, however they all share the same underlying logic.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adapting based on props\n\nYou can pass a function to `makeStyles` (\"interpolation\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nThis button component has a color property that changes its color:\n\n### Adapting the hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adapting the higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stress test\n\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},Nv3j:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return p});var o=t("2Fjn"),s=t("mXGw"),r=t.n(s),a=t("RECL"),i=t("O8uh"),l=Object(a.a)(function(n){n.color;var e=Object(o.a)(n,["color"]);return r.a.createElement(i.a,e)})({background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}),c=r.a.createElement(r.a.Fragment,null,r.a.createElement(l,{color:"red"},"Red"),r.a.createElement(l,{color:"blue"},"Blue"));function p(){return c}},RDk1:function(n,e){n.exports="import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n"},RECL:function(n,e,t){"use strict";var o=t("z3IF"),s=t("Rbzu"),r=t("2Fjn"),a=t("1qCV"),i=t.n(a),l=t("mXGw"),c=t.n(l),p=t("PDtE"),d=t("GeWT"),u=t.n(d),m=t("3O2h");function g(n,e){var t={};return i()(n).forEach(function(o){-1===e.indexOf(o)&&(t[o]=n[o])}),t}e.a=function(n){return function(e){var t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=a.name,l=Object(r.a)(a,["name"]),d=i,h="function"==typeof e?function(n){return{root:function(t){return e(Object(s.a)({theme:n},t))}}}:{root:e},y=Object(m.a)(h,Object(s.a)({Component:n,name:i||n.displayName,classNamePrefix:d},l));e.filterProps&&(t=e.filterProps,delete e.filterProps),e.propTypes&&(e.propTypes,delete e.propTypes);var b=c.a.forwardRef(function(e,a){var i=e.children,l=e.className,d=e.clone,u=e.component,m=Object(r.a)(e,["children","className","clone","component"]),h=y(e),b=Object(p.a)(h.root,l),f=m;if(t&&(f=g(f,t)),d)return c.a.cloneElement(i,Object(s.a)({className:Object(p.a)(i.props.className,b)},f));if("function"==typeof i)return i(Object(s.a)({className:b},f));var S=u||n;return c.a.createElement(S,Object(o.default)({ref:a,className:b},f),i)});return u()(b,n),b}}},RN03:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\n\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\n\n## Why use Material-UI's styling solution?\n\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. We have [adopted a *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style). It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.). We think that this is the future:\n\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Convert SCSS (Sass) to CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\n\n- üíÖ You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\n- üöÄ It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è It uses [JSS](https://github.com/cssinjs/jss) at its core ‚Äì a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## „Ç§„É≥„Çπ„Éà„Éº„É´\n\n„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶`package.json` „ÅÆdependencies„Å´‰øùÂ≠ò„Åó„Åæ„Åô„ÄÇÊ¨°„ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n```sh\n// with npm\nnpm install @material-ui/styles\n\n// with yarn\nyarn add @material-ui/styles\n```\n\n## Getting started\n\nWe provide 3 different APIs to generate and apply styles, however they all share the same underlying logic.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adapting based on props\n\nYou can pass a function to `makeStyles` (\"interpolation\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nThis button component has a color property that changes its color:\n\n### Adapting the hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adapting the higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stress test\n\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},VWYB:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\n\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\n\n## Why use Material-UI's styling solution?\n\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited. We have [adopted a *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style). It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.). We think that this is the future:\n\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Convert SCSS (Sass) to CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\n\n- üíÖ You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\n- üöÄ It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è It uses [JSS](https://github.com/cssinjs/jss) at its core ‚Äì a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## Instalaci√≥n\n\nPara instalarlo y guardarlo en las dependencias de tu ` package.json `, ejecuta:\n\n```sh\n// with npm\nnpm install @material-ui/styles\n\n// with yarn\nyarn add @material-ui/styles\n```\n\n## Getting started\n\nWe provide 3 different APIs to generate and apply styles, however they all share the same underlying logic.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adapting based on props\n\nYou can pass a function to `makeStyles` (\"interpolation\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nThis button component has a color property that changes its color:\n\n### Adapting the hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adapting the higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stress test\n\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},WnPn:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var o=t("mXGw"),s=t.n(o),r=t("e+1t"),a=t("h44s"),i=t("CJSv"),l=s.a.createElement(r.a,{req:a,reqSource:i,reqPrefix:"pages/styles/basics"});function c(){return l}},Y5lq:function(n,e){n.exports="import React from 'react';\nimport { withStyles, WithStyles, createStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = createStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nfunction HigherOrderComponent(props: WithStyles<typeof styles>) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nexport default withStyles(styles)(HigherOrderComponent);\n"},ab95:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return d});var o=t("z3IF"),s=t("2Fjn"),r=t("mXGw"),a=t.n(r),i=t("NlPR"),l=t("O8uh");var c=Object(i.a)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}})(function(n){var e=n.classes,t=(n.color,Object(s.a)(n,["classes","color"]));return a.a.createElement(l.a,Object(o.default)({className:e.root},t))}),p=a.a.createElement(a.a.Fragment,null,a.a.createElement(c,{color:"red"},"Red"),a.a.createElement(c,{color:"blue"},"Blue"));function d(){return p}},"c/Jx":function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n\n  return <Button className={classes.root}>Hook</Button>;\n}\n"},djCt:function(n,e){n.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: props =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: props =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n});\n\nfunction MyButton(props) {\n  const { color, ...other } = props;\n  const classes = useStyles(props);\n  return <Button className={classes.root} {...other} />;\n}\n\nMyButton.propTypes = {\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\n};\n\nexport default function AdaptingHook() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},emvy:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return p});var o=t("2Fjn"),s=t("mXGw"),r=t.n(s),a=t("RECL"),i=t("O8uh"),l=Object(a.a)(function(n){n.color;var e=Object(o.a)(n,["color"]);return r.a.createElement(i.a,e)})({background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}),c=r.a.createElement(r.a.Fragment,null,r.a.createElement(l,{color:"red"},"Red"),r.a.createElement(l,{color:"blue"},"Blue"));function p(){return c}},fRXc:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/styles/basics",function(){var n=t("WnPn");return{page:n.default||n}}])},h44s:function(n,e,t){var o={"./AdaptingHOC.js":"ab95","./AdaptingHOC.tsx":"psws","./AdaptingHook.js":"uosA","./AdaptingHook.tsx":"rfgx","./AdaptingStyledComponents.js":"Nv3j","./AdaptingStyledComponents.tsx":"emvy","./HigherOrderComponent.js":"Dd4o","./HigherOrderComponent.tsx":"Eujb","./Hook.js":"BATJ","./Hook.tsx":"/eYM","./NestedStylesHook.js":"DkRs","./NestedStylesHook.tsx":"uffU","./StressTest.js":"Argf","./StressTest.tsx":"FqWo","./StyledComponents.js":"sbHQ","./StyledComponents.tsx":"7UDI","./basics-aa.md":"Ijyp","./basics-de.md":"D5xr","./basics-es.md":"VWYB","./basics-fr.md":"Mxb3","./basics-ja.md":"RN03","./basics-pt.md":"nhBz","./basics-ru.md":"n04e","./basics-zh.md":"nXWl","./basics.md":"qzt8"};function s(n){var e=r(n);return t(e)}function r(n){var e=o[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}s.keys=function(){return Object.keys(o)},s.resolve=r,n.exports=s,s.id="h44s"},ibfl:function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue',\n      },\n    },\n  },\n});\n\nexport default function NestedStylesHook() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      This is red since it is inside the paper.\n      <p>\n        This is green since it is inside the paragraph{' '}\n        <span>and this is blue since it is inside the span</span>\n      </p>\n    </Paper>\n  );\n}\n"},mKPn:function(n,e){n.exports="import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\n\ninterface MyButtonProps {\n  color: 'red' | 'blue';\n}\n\nconst MyButton = styled(\n  ({ color, ...other }: MyButtonProps & Omit<ButtonProps, keyof MyButtonProps>) => (\n    <Button {...other} />\n  ),\n)({\n  background: (props: MyButtonProps) =>\n    props.color === 'red'\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props: MyButtonProps) =>\n    props.color === 'red'\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  margin: 8,\n});\n\nexport default function AdaptingStyledComponents() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},n04e:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å—Ç–∏–ª–µ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ Material-UI –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ª–∏ –≤—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Material-UI –∏–ª–∏ –Ω–µ—Ç.</p>\n\nMaterial-UI aims to provide a strong foundation for building dynamic UIs. For the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package. You can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\n\n## –ó–∞—á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∏–ª–µ–π Material-UI?\n\n–í –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö Material-UI –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª LESS, –∞ –∑–∞—Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –Ω–æ —ç—Ç–∏ –ø–æ–¥—Ö–æ–¥—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏. We have [adopted a *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style). It **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.). We think that this is the future:\n\n- [–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å—Ç–∏–ª–µ–π](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å SCSS (Sass) –≤ CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\n\n- üíÖ You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\n- üöÄ It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è It uses [JSS](https://github.com/cssinjs/jss) at its core ‚Äì a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ\n\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –≤–∞—à–µ–º ` package.json ` –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∑–∞–ø—É—Å—Ç–∏—Ç–µ:\n\n```sh\n// with npm\nnpm install @material-ui/styles\n\n// with yarn\nyarn add @material-ui/styles\n```\n\n## –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n\n–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º 3 —Ä–∞–∑–Ω—ã—Ö API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π, –Ω–æ –≤—Å–µ –æ–Ω–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –±–∞–∑–æ–≤—É—é –ª–æ–≥–∏–∫—É.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nYou can nest selectors to target elements inside the current class or component. The following example uses the Hook API, but it works the same way with the other APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adapting based on props\n\nYou can pass a function to `makeStyles` (\"interpolation\") in order to adapt the generated value based on the component's props. The function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\n–≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∞ –∏–º–µ–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ —Ü–≤–µ—Ç, –∫–æ—Ç–æ—Ä–æ–µ –º–µ–Ω—è–µ—Ç —Å–≤–æ–π —Ü–≤–µ—Ç:\n\n### –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ö—É–∫–∞ API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### –ê–¥–∞–ø—Ç–∞—Ü–∏—è API –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stress test\n\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},nXWl:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">Êó†ËÆ∫ÊÇ®ÊòØÂê¶‰ΩøÁî®Material-UIÁªÑ‰ª∂ÔºåÈÉΩÂèØ‰ª•Âú®Â∫îÁî®‰∏≠‰ΩøÁî®Material-UIÁöÑÊ†∑ÂºèËß£ÂÜ≥ÊñπÊ°à„ÄÇ</p>\n\nMaterial-UI Êó®Âú®‰∏∫ÊûÑÂª∫Âä®ÊÄÅ UI Êèê‰æõÂùöÂÆûÁöÑÂü∫Á°Ä„ÄÇ ‰∏∫‰∫ÜÈ°πÁõÆÁªìÊûÑÊõ¥Ê∏ÖÊô∞ÁÆÄÂçïÔºå**Êàë‰ª¨Â∞Ü Material-UI ÁªÑ‰ª∂‰∏≠‰ΩøÁî®ÁöÑÊ†∑ÂºèËß£ÂÜ≥ÊñπÊ°à**‰Ωú‰∏∫` @material-ui/styles `ÂåÖÂçïÁã¨ÂèëÂ∏É„ÄÇ @material-ui/stylesÂπ∂‰∏çÊòØÂîØ‰∏ÄÁöÑÈÄâÊã©ÔºåMaterial-UI‰πüÂèØ‰ª•‰∏éÂÖ∂‰ªñ‰∏ªÊµÅÊ†∑ÂºèËß£ÂÜ≥ÊñπÊ°à[‰∫íÂä®](/guides/interoperability/)„ÄÇ\n\n## Why use Material-UI's styling solution?\n\nÂú®‰ª•ÂâçÁöÑÁâàÊú¨‰∏≠ÔºåMaterial-UI Êõæ‰ΩøÁî®Ëøá LESSÔºå‰ª•ÂèäËÄåÂêéÁöÑËá™ÂÆö‰πâÂÜÖÂµåÂºèÊù•ÁºñÂÜôÁªÑ‰ª∂ÁöÑÊ†∑Âºè„ÄÇ‰ΩÜÊòØËøô‰∫õÊñπÊ≥ïÂ∑≤Ë¢´ËØÅÊòé‰∫ÜÂÖ∂Â±ÄÈôêÊÄß„ÄÇ ÊúÄËøëÔºå [Êàë‰ª¨ÂºÄÂßãÂêë*CSS-in-JS*Ëß£ÂÜ≥ÊñπÊ°àÊñπÂêëËΩ¨Áßª ](https://github.com/oliviertassinari/a-journey-toward-better-style)„ÄÇ ÂÆÉ**Ëß£ÈîÅ‰∫ÜËÆ∏Â§öÂæàÊ£íÁöÑÂäüËÉΩ**(‰∏ªÈ¢òÂµåÂ•ó„ÄÅÂä®ÊÄÅÊ†∑Âºè„ÄÅËá™ÊàëÊîØÊåÅÁ≠â...) Êàë‰ª¨ËÆ§‰∏∫ËøôÊòØÊú™Êù•Ôºö\n\n- [Áªü‰∏ÄÁöÑÊ†∑ÂºèËØ≠Ë®Ä](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Â∞Ü SCSSÔºàSassÔºâËΩ¨Êç¢‰∏∫ CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UIÁöÑÊ†∑ÂºèËß£ÂÜ≥ÊñπÊ°àÂèóÂà∞ËÆ∏Â§öÂÖ∂‰ªñCSS-in-JSÂ∫ìÁöÑÂêØÂèëÔºå‰æãÂ¶Ç [styled-components](https://www.styled-components.com/) Âíå [emotion](https://emotion.sh/)„ÄÇ\n\n- üíÖÂÖ∑Â§ástyled-componentsÁöÑ [ ‰ºòÂäø](https://www.styled-components.com/docs/basics#motivation)„ÄÇ\n- üöÄ[Ë∂Ö ](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles)Âø´ „ÄÇ\n- üß©ÂèØÈÄöËøá[Êèí‰ª∂](https://github.com/cssinjs/jss/blob/master/docs/plugins.md)API Êâ©Â±ï„ÄÇ\n- ‚ö°Ô∏èÂÆÉ‰ΩøÁî®[ JSS ](https://github.com/cssinjs/jss)‰Ωú‰∏∫ÂÖ∂Ê†∏ÂøÉ -- ‰∏Ä‰∏™ [È´òÊÄßËÉΩ](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScriptÂà∞CSSÁºñËØëÂô®ÔºåÂÆÉÂú®ËøêË°åÊó∂ÂíåÊúçÂä°Âô®Á´ØÂ∑•‰Ωú„ÄÇ\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## ÂÆâË£Ö\n\nÂ∞Ü Material-UI ‰∏ãËΩΩÂπ∂‰øùÂ≠òÂà∞‰Ω†ÁöÑ `package.json` ‰æùËµñÊñá‰ª∂ÈáåÔºåËØ∑ËøêË°å:\n\n```sh\n// Áî®npmÂÆâË£Ö\nnpm install @material-ui/styles\n\n// Áî®yarnÂÆâË£Ö\nyarn add @material-ui/styles\n```\n\n## ÂÖ•Èó®\n\nÊàë‰ª¨Êèê‰æõ3Áßç‰∏çÂêåÁöÑAPIÊù•ÁîüÊàêÂíåÂ∫îÁî®Ê†∑ÂºèÔºå‰ΩÜÂÆÉ‰ª¨ÈÉΩÂÖ±‰∫´Áõ∏ÂêåÁöÑÂ∫ïÂ±ÇÈÄªËæë„ÄÇ\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object. You can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nÊÇ®ÂèØ‰ª•Â∞ÜÈÄâÊã©Âô®ÂµåÂ•óÂà∞ÂΩìÂâçÁ±ªÊàñÁªÑ‰ª∂ÂÜÖÁöÑÁõÆÊ†áÂÖÉÁ¥†„ÄÇ ‰ª•‰∏ãÁ§∫‰æã‰ΩøÁî®Hook APIÔºåÂÖ∂‰ªñAPIÁöÑÂ∑•‰ΩúÊñπÂºèÁõ∏Âêå„ÄÇ\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Êé•Âèó‰º†ÂÖ•Â±ûÊÄß\n\nÊÇ®ÂèØ‰ª•Â∞ÜÂáΩÊï∞‰º†ÈÄíÁªô` makeStyles ` (‚ÄúÊèíÂÄº‚Äù) ‰ª•‰æøÊ†πÊçÆÁªÑ‰ª∂ÁöÑÂ±ûÊÄßÈÄÇÈÖçÁîüÊàêÁöÑÂÄº„ÄÇ The function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nÊ≠§ÊåâÈíÆÁªÑ‰ª∂ÂÖ∑ÊúâÊõ¥ÊîπÂÖ∂È¢úËâ≤ÁöÑÈ¢úËâ≤Â±ûÊÄßÔºö\n\n### Adapting the hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adapting the higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## ÂéãÂäõÊµãËØï\n\nÂú®‰ª•‰∏ãÂéãÂäõÊµãËØï‰∏≠ÔºåÊÇ®ÂèØ‰ª•Êõ¥Êñ∞*‰∏ªÈ¢òÈ¢úËâ≤*Âíå*ËÉåÊôØÈ¢úËâ≤Â±ûÊÄß*Ôºö\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},nhBz:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">Voc√™ pode usar a solu√ß√£o de estilo do Material-UI na sua aplica√ß√£o, esteja ou n√£o usando componentes de Material-UI.</p>\n\nMaterial-UI, tem como objetivo fornecer uma base s√≥lida para a cria√ß√£o de interfaces de usu√°rio din√¢micas. Por uma quest√£o de simplicidade, **expomos a solu√ß√£o de estilo usada nos componentes de Material-UI** como pacote, `@material-ui/styles`. Voc√™ pode us√°-lo, mas voc√™ n√£o precisa, j√° que Material-UI tamb√©m √© [ interoper√°vel com](/guides/interoperability/) todas as outras solu√ß√µes de estilo principais.\n\n## Por que usar a solu√ß√£o de estilo do Material-UI?\n\nNas vers√µes anteriores, o Material-UI usava o LESS, e em seguida, uma solu√ß√£o customizada no estilo inline para escrever os estilos dos componentes, mas essas abordagens provaram ser limitadas. N√≥s [adotamos a solu√ß√£o *CSS-in-JS*](https://github.com/oliviertassinari/a-journey-toward-better-style). Ela **desbloqueia muitos √≥timos recursos** (aninhamento de temas, estilos din√¢micos, auto-suporte, etc.). N√≥s pensamos que este √© o futuro:\n\n- [Um idioma de estilo unificado](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Converter SCSS (Sass) para CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nA solu√ß√£o de estilo do Material-UI √© inspirada em muitas outras bibliotecas de estilo, como [styled-components](https://www.styled-components.com/) e [emotion](https://emotion.sh/).\n\n- üíÖ Voc√™ pode esperar [as mesmas vantagens](https://www.styled-components.com/docs/basics#motivation) que styled-components.\n- üöÄ Est√° [super r√°pida](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© √â extens√≠vel atrav√©s de uma API de [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md).\n- ‚ö°Ô∏èEla usa [JSS](https://github.com/cssinjs/jss) em seu n√∫cleo ‚Äì um [alto desempenho](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript para o compilador CSS, que funciona em tempo de execu√ß√£o e no lado do servidor.\n- üì¶ Menor que [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); e nenhum aumento no tamanho do pacote se usado juntamente com o Material-UI.\n\n## Instala√ß√£o\n\nPara instalar e salvar em suas depend√™ncias do `package.json`, execute:\n\n```sh\n// utilizando o npm\nnpm install @material-ui/styles\n\n// utilizando o yarn\nyarn add @material-ui/styles\n```\n\n## Primeiros passos\n\nFornecemos tr√™s APIs diferentes para gerar e aplicar estilos, mas todas compartilham a mesma l√≥gica subjacente.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNota: isso se aplica somente para a sintaxe de chamada ‚Äì defini√ß√µes de estilo de ainda usam um objeto JSS. Voc√™ tamb√©m pode [alterar esse comportamento](/styles/advanced/#string-templates), com algumas limita√ß√µes.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Aninhamento de seletores\n\nVoc√™ pode aninhar seletores para segmentar elementos dentro da classe ou componente atual. O exemplo a seguir usa a Hook API, mas funciona da mesma maneira com as outras APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adaptando com base em propriedades\n\nVoc√™ pode passar uma fun√ß√£o para `makeStyles` (\"interpola√ß√£o\") a fim de adaptar o valor gerado com base nas propriedades do componente. A fun√ß√£o pode ser fornecida no n√≠vel de regra de estilo ou no n√≠vel da propriedade CSS:\n\n```jsx\nconst useStyles = makeStyles({\n  // regra de estilo\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // propriedade CSS\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Propriedades simuladas para fins de exemplo\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Passe as propriedades como primeiro argumento do useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nEste componente bot√£o tem uma propriedade de cor que modifica sua cor:\n\n### Adaptando a hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adaptando a styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adaptando a higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Teste de estresse\n\nNo teste de estresse a seguir, voc√™ pode atualizar *a cor do tema* e a *propriedade background-color* de forma interativa:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}"},ohWz:function(n,e){n.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: props =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: props =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n};\n\nfunction MyButtonRaw(props) {\n  const { classes, color, ...other } = props;\n  return <Button className={classes.root} {...other} />;\n}\n\nMyButtonRaw.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf(['blue', 'red']).isRequired,\n};\n\nconst MyButton = withStyles(styles)(MyButtonRaw);\n\nexport default function AdaptingHOC() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},psws:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return m});var o=t("z3IF"),s=t("2Fjn"),r=t("mXGw"),a=t.n(r),i=t("AMAy"),l=t("NlPR"),c=t("O8uh"),p=Object(i.a)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}});var d=Object(l.a)(p)(function(n){var e=n.classes,t=(n.color,Object(s.a)(n,["classes","color"]));return a.a.createElement(c.a,Object(o.default)({className:e.root},t))}),u=a.a.createElement(a.a.Fragment,null,a.a.createElement(d,{color:"red"},"Red"),a.a.createElement(d,{color:"blue"},"Blue"));function m(){return u}},qzt8:function(n,e){n.exports="# @material-ui/styles\n\n<p class=\"description\">You can use Material-UI's styling solution in your app, whether or not you are using Material-UI components.</p>\n\nMaterial-UI aims to provide a strong foundation for building dynamic UIs.\nFor the sake of simplicity, **we expose the styling solution used in Material-UI components** as the `@material-ui/styles` package.\nYou can use it, but you don't have to, since Material-UI is also [interoperable with](/guides/interoperability/) all the other major styling solutions.\n\n## Why use Material-UI's styling solution?\n\nIn previous versions, Material-UI has used LESS, then a custom inline-style solution to write the component styles, but these approaches have proven to be limited.\nWe have [adopted a *CSS-in-JS* solution](https://github.com/oliviertassinari/a-journey-toward-better-style).\nIt **unlocks many great features** (theme nesting, dynamic styles, self-support, etc.).\nWe think that this is the future:\n\n- [A Unified Styling Language](https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660)\n- [Convert SCSS (Sass) to CSS-in-JS](https://egghead.io/courses/convert-scss-sass-to-css-in-js)\n\nMaterial-UI's styling solution is inspired by many other styling libraries such as [styled-components](https://www.styled-components.com/) and [emotion](https://emotion.sh/).\n\n- üíÖ You can expect [the same advantages](https://www.styled-components.com/docs/basics#motivation) as styled-components.\n- üöÄ It's [blazing fast](https://github.com/mui-org/material-ui/blob/master/packages/material-ui-benchmark/README.md#material-uistyles).\n- üß© It's extensible via a [plugin](https://github.com/cssinjs/jss/blob/master/docs/plugins.md) API.\n- ‚ö°Ô∏è It uses [JSS](https://github.com/cssinjs/jss) at its core ‚Äì a [high performance](https://github.com/cssinjs/jss/blob/master/docs/performance.md) JavaScript to CSS compiler which works at runtime and server-side.\n- üì¶ Less than [15 KB gzipped](https://bundlephobia.com/result?p=@material-ui/styles); and no bundle size increase if used alongside Material-UI.\n\n## Installation\n\nTo install and save in your `package.json` dependencies, run:\n\n```sh\n// with npm\nnpm install @material-ui/styles\n\n// with yarn\nyarn add @material-ui/styles\n```\n\n## Getting started\n\nWe provide 3 different APIs to generate and apply styles, however they all share the same underlying logic.\n\n### Hook API\n\n```jsx\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n  return <Button className={classes.root}>Hook</Button>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/Hook.js\"}}\n\n### Styled components API\n\nNote: this only applies to the calling syntax ‚Äì style definitions still use a JSS object.\nYou can also [change this behavior](/styles/advanced/#string-templates), with some limitations.\n\n```jsx\nimport React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(Button)({\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n});\n\nexport default function StyledComponents() {\n  return <MyButton>Styled Components</MyButton>;\n}\n```\n\n{{\"demo\": \"pages/styles/basics/StyledComponents.js\"}}\n\n### Higher-order component API\n\n```jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n};\n\nfunction HigherOrderComponent(props) {\n  const { classes } = props;\n  return <Button className={classes.root}>Higher-order component</Button>;\n}\n\nHigherOrderComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HigherOrderComponent);\n```\n\n{{\"demo\": \"pages/styles/basics/HigherOrderComponent.js\"}}\n\n## Nesting selectors\n\nYou can nest selectors to target elements inside the current class or component.\nThe following example uses the Hook API, but it works the same way with the other APIs.\n\n```js\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue'\n      }\n    }\n  },\n});\n```\n\n{{\"demo\": \"pages/styles/basics/NestedStylesHook.js\"}}\n\n## Adapting based on props\n\nYou can pass a function to `makeStyles` (\"interpolation\")\nin order to adapt the generated value based on the component's props.\nThe function can be provided at the style rule level, or at the CSS property level:\n\n```jsx\nconst useStyles = makeStyles({\n  // style rule\n  foo: props => ({\n    backgroundColor: props.backgroundColor,\n  }),\n  bar: {\n    // CSS property\n    color: props => props.color,\n  },\n});\n\nfunction MyComponent() {\n  // Simulated props for the purpose of the example\n  const props = { backgroundColor: 'black', color: 'white' };\n  // Pass the props as the first argument of useStyles()\n  const classes = useStyles(props);\n\n  return <div className={`${classes.foo} ${classes.bar}`} />\n}\n```\n\nThis button component has a color property that changes its color:\n\n### Adapting the hook API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHook.js\", \"react\":\"next\"}}\n\n### Adapting the styled components API\n\n{{\"demo\": \"pages/styles/basics/AdaptingStyledComponents.js\"}}\n\n### Adapting the higher-order component API\n\n{{\"demo\": \"pages/styles/basics/AdaptingHOC.js\"}}\n\n## Stress test\n\nIn the following stress test, you can update the *theme color* and the *background-color property* live:\n\n```js\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n```\n\n{{\"demo\": \"pages/styles/basics/StressTest.js\"}}\n"},rfgx:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return u});var o=t("z3IF"),s=t("2Fjn"),r=t("mXGw"),a=t.n(r),i=t("3O2h"),l=t("O8uh"),c=Object(i.a)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}});function p(n){n.color;var e=Object(s.a)(n,["color"]),t=c(n);return a.a.createElement(l.a,Object(o.default)({className:t.root},e))}var d=a.a.createElement(a.a.Fragment,null,a.a.createElement(p,{color:"red"},"Red"),a.a.createElement(p,{color:"blue"},"Blue"));function u(){return d}},sbHQ:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var o=t("mXGw"),s=t.n(o),r=t("RECL"),a=t("O8uh"),i=Object(r.a)(a.a)({background:"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)",border:0,borderRadius:3,boxShadow:"0 3px 5px 2px rgba(255, 105, 135, .3)",color:"white",height:48,padding:"0 30px"}),l=s.a.createElement(i,null,"Styled Components");function c(){return l}},tHPu:function(n,e){n.exports="import React from 'react';\nimport { withStyles, createStyles, WithStyles } from '@material-ui/styles';\nimport Button, { ButtonProps } from '@material-ui/core/Button';\nimport { Omit } from '@material-ui/types';\n\nconst styles = createStyles({\n  root: {\n    background: (props: MyButtonRawProps) =>\n      props.color === 'red'\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: (props: MyButtonRawProps) =>\n      props.color === 'red'\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    margin: 8,\n  },\n});\n\ninterface MyButtonRawProps {\n  color: 'red' | 'blue';\n}\n\nfunction MyButtonRaw(props: WithStyles<typeof styles> & Omit<ButtonProps, keyof MyButtonRawProps>) {\n  const { classes, color, ...other } = props;\n  return <Button className={classes.root} {...other} />;\n}\n\nconst MyButton = withStyles(styles)(MyButtonRaw);\n\nexport default function AdaptingHOC() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},uffU:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var o=t("mXGw"),s=t.n(o),r=t("3O2h"),a=t("VPks"),i=Object(r.a)({root:{padding:16,color:"red","& p":{color:"green","& span":{color:"blue"}}}}),l=s.a.createElement("p",null,"This is green since it is inside the paragraph"," ",s.a.createElement("span",null,"and this is blue since it is inside the span"));function c(){var n=i();return s.a.createElement(a.a,{className:n.root},"This is red since it is inside the paper.",l)}},uosA:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return u});var o=t("z3IF"),s=t("2Fjn"),r=t("mXGw"),a=t.n(r),i=t("3O2h"),l=t("O8uh"),c=Object(i.a)({root:{background:function(n){return"red"===n.color?"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)":"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)"},border:0,borderRadius:3,boxShadow:function(n){return"red"===n.color?"0 3px 5px 2px rgba(255, 105, 135, .3)":"0 3px 5px 2px rgba(33, 203, 243, .3)"},color:"white",height:48,padding:"0 30px",margin:8}});function p(n){n.color;var e=Object(s.a)(n,["color"]),t=c(n);return a.a.createElement(l.a,Object(o.default)({className:t.root},e))}var d=a.a.createElement(a.a.Fragment,null,a.a.createElement(p,{color:"red"},"Red"),a.a.createElement(p,{color:"blue"},"Blue"));function u(){return d}},v2iX:function(n,e){n.exports="import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)({\n  background: props =>\n    props.color === 'red'\n      ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: props =>\n    props.color === 'red'\n      ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  margin: 8,\n});\n\nexport default function AdaptingStyledComponents() {\n  return (\n    <React.Fragment>\n      <MyButton color=\"red\">Red</MyButton>\n      <MyButton color=\"blue\">Blue</MyButton>\n    </React.Fragment>\n  );\n}\n"},v6uo:function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n    color: 'red',\n    '& p': {\n      color: 'green',\n      '& span': {\n        color: 'blue',\n      },\n    },\n  },\n});\n\nexport default function NestedStylesHook() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      This is red since it is inside the paper.\n      <p>\n        This is green since it is inside the paragraph{' '}\n        <span>and this is blue since it is inside the span</span>\n      </p>\n    </Paper>\n  );\n}\n"},vY63:function(n,e){n.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport { ThemeProvider, useTheme, makeStyles } from \'@material-ui/styles\';\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    backgroundColor: props.backgroundColor,\n    color: theme.color,\n  }),\n}));\n\nconst Component = React.memo(props => {\n  const classes = useStyles(props);\n  const theme = useTheme();\n\n  const rendered = React.useRef(1);\n  React.useEffect(() => {\n    rendered.current += 1;\n  });\n\n  return (\n    <div className={classes.root}>\n      rendered {rendered.current} times\n      <br />\n      color: {theme.color}\n      <br />\n      backgroundColor: {props.backgroundColor}\n    </div>\n  );\n});\n\nComponent.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n};\n\nexport default function StressTest() {\n  const [backgroundColor, setBackgroundColor] = React.useState(\'#2196f3\');\n  function handleBackgroundColorChange(event) {\n    setBackgroundColor(event.target.value);\n  }\n\n  const [color, setColor] = React.useState(\'#ffffff\');\n  function handleColorChange(event) {\n    setColor(event.target.value);\n  }\n\n  const theme = React.useMemo(() => ({ color }), [color]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <fieldset>\n          <div>\n            <label htmlFor="color">theme color: </label>\n            <input id="color" type="color" onChange={handleColorChange} value={color} />\n          </div>\n          <div>\n            <label htmlFor="background-color">background-color property: </label>\n            <input\n              id="background-color"\n              type="color"\n              onChange={handleBackgroundColorChange}\n              value={backgroundColor}\n            />\n          </div>\n        </fieldset>\n        <Component backgroundColor={backgroundColor} />\n      </div>\n    </ThemeProvider>\n  );\n}\n'},zksH:function(n,e){n.exports="import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default function Hook() {\n  const classes = useStyles();\n\n  return <Button className={classes.root}>Hook</Button>;\n}\n"}},[["fRXc","5d41","9da1"]]]);