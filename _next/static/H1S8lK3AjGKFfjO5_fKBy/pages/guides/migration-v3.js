(window.webpackJsonp=window.webpackJsonp||[]).push([["41f5"],{"3cvN":function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="3cvN"},BfO7:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Yeah, v4 has been released!</p>\n\nLooking for the v3 docs? [Find them here](https://material-ui.com/versions/).\n\n> This document is a work in progress. Have you upgraded your site and run into something that's not covered here? [Add your changes on GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introduction\n\nThis is a reference for upgrading your site from Material-UI v3 to v4. While there's a lot covered here, you probably won't need to do everything for your site. We'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4. The *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`. This allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Core\n\n- Every component forward their ref. This is implemented by using `React.forwardRef()`. This affects the internal component tree and display name and therefore might break shallow or snapshot tests. `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component. The corresponding API docs list the root component.\n\n### Estilos\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9. Make sure JSS v9 is not installed in your environment. Removing `react-jss` from your `package.json` can help. The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`. The first argument was a placeholder for a potential future option. We have never found a need for it. It's time to remove this argument. It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). You should apply the following changes in your codebase.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n  \n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n  \n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant=\"inset\" />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n  \n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem. The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `Dialog` and `Popover`.\n\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n\n- [Modal] event.defaultPrevented is now ignored. The new logic closes the Modal even if `event.preventDefault()` is called on the key down escape event. `event.preventDefault()` is meant to stop default behaviors like clicking a checkbox to check it, hitting a button to submit a form, and hitting left arrow to move the cursor in a text input etc. Only special HTML elements have these default behaviors. You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation. Change the default Paper elevation to match the Card and the Expansion Panel:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n  \n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Switch\n\n- [Switch] Refactor the implementation to make it easier to override the styles. Rename the class names to match the specification wording:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n  \n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Rename nativeColor -> htmlColor. React solved the same problem with the `for` HTML attribute, they have decided to call the prop `htmlFor`. This change follows the same reasoning.\n  \n  ```diff\n  -<AddIcon nativeColor=\"#fff\" />\n  +<AddIcon htmlColor=\"#fff\" />\n  ```\n\n### Pestañas\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity. This has allowed us to remove 2 intermediary DOM elements. You should be able to move the custom styles to the `root` class key.\n  \n    ![A simpler tab item DOM structure](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### Table\n\n- [TableCell] Remove the deprecated `numeric` property:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remove the fixed height CSS property. The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n  \n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### TextField\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component. The `FormLabelClasses` property has been removed.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Change the default box sizing model. It uses the following CSS now:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    This solves issues with the `fullWidth` prop.\n\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### Tipografía\n\n- [Typography] Remove the deprecated typography variants. You can upgrade by performing the following replacements: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] Remove the opinionated `display: block` default typography style. You can use the new `display?: 'initial' | 'inline' | 'block';` property.\n- [Typography] Rename the `headlineMapping` property to `variantMapping` to better align with its purpose.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Change the default variant from `body2` to `body1`. A font size of 16px is a better default than 14px. Bootstrap, material.io, and even our documentation use 16px as a default font size. 14px like Ant Design uses is understandable, as Chinese users have a different alphabet. We recommend 12px as the default font size for Japanese.\n- [Typography] Remove the default color from the typography variants. The color should inherit most of the time. It's the default behavior of the web.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [Drop node 6 support](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), you should upgrade to node 8.\n\n### UMD\n\n- This change eases the use of Material-UI with a CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n  \n    It's consistent with other React projects:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes"},"G+F9":function(e,n){e.exports="# crwdns95894:0crwdne95894:0\n\n<p class=\"description\">crwdns95896:0crwdne95896:0</p>\n\ncrwdns95898:0crwdne95898:0 crwdns95900:0crwdne95900:0\n\n> crwdns95902:0crwdne95902:0 crwdns95904:0crwdne95904:0 crwdns95906:0crwdne95906:0\n\n## crwdns95908:0crwdne95908:0\n\ncrwdns95910:0crwdne95910:0 crwdns95912:0crwdne95912:0 crwdns95914:0crwdne95914:0\n\n## crwdns95916:0crwdne95916:0\n\ncrwdns95918:0crwdne95918:0 crwdns95920:0crwdne95920:0\n\n## crwdns95922:0crwdne95922:0\n\ncrwdns95924:0crwdne95924:0\n\n### crwdns95926:0crwdne95926:0\n\ncrwdns95928:0crwdne95928:0\n\n```json\ncrwdns95930:0crwdne95930:0\n```\n\ncrwdns95932:0crwdne95932:0\n\n```sh\ncrwdns95934:0crwdne95934:0\n```\n\n### crwdns95936:0crwdne95936:0\n\ncrwdns95938:0crwdne95938:0 crwdns95940:0crwdne95940:0\n\n### crwdns95942:0crwdne95942:0\n\ncrwdns95944:0crwdne95944:0\n\n```json\ncrwdns95946:0crwdne95946:0\n```\n\ncrwdns95948:0crwdne95948:0\n\n```sh\ncrwdns95950:0crwdne95950:0\n```\n\n## crwdns95952:0crwdne95952:0\n\n### crwdns95954:0crwdne95954:0\n\n- crwdns95956:0crwdne95956:0 crwdns95958:0crwdne95958:0 crwdns95960:0crwdne95960:0 crwdns95962:0crwdne95962:0 crwdns95964:0crwdne95964:0\n\n### crwdns95966:0crwdne95966:0\n\n- crwdns95968:0crwdne95968:0 crwdns95970:0crwdne95970:0 crwdns95972:0crwdne95972:0 crwdns95974:0crwdne95974:0 crwdns95976:0crwdne95976:0\n- crwdns95978:0crwdne95978:0 crwdns95980:0crwdne95980:0 crwdns95982:0crwdne95982:0 crwdns95984:0crwdne95984:0 crwdns95986:0crwdne95986:0\n\n```diff\n  crwdns95988:0crwdne95988:0 crwdns95990:0crwdne95990:0\n  crwdns95992:0$muicrwdnd95992:0{\n        opacity: 0.1,\n      }crwdnd95992:0{\n        opacity: 0.3,\n      }crwdne95992:0\n  crwdns95994:0crwdne95994:0\n\n  crwdns95996:0{ main: color }crwdnd95996:0{ main: color }crwdnd95996:0{ background }crwdnd95996:0{\n  - useNextVariants: true,\n  }crwdne95996:0\n\n  crwdns95998:0crwdne95998:0\n\ncrwdns96000:0[Grid]crwdne96000:0\n     crwdns96002:0crwdne96002:0\n     crwdns96004:0crwdne96004:0\ncrwdns96006:0[Container]crwdne96006:0\n\n  crwdns96008:0crwdne96008:0 crwdns96010:0crwdne96010:0\n\ncrwdns96012:0{ children }crwdnd96012:0{handleChange}crwdnd96012:0{children}crwdne96012:0\n```\n\ncrwdns96014:0crwdne96014:0\n\n### crwdns96016:0crwdne96016:0\n\n- crwdns96018:0[Button]crwdne96018:0\n  \n  ```diff\n  crwdns96020:0crwdne96020:0\n  ```\n  \n  ```diff\n  crwdns96022:0crwdne96022:0\n  ```\n  \n  ```diff\n  crwdns96024:0crwdne96024:0\n  ```\n  \n  ```diff\n  crwdns96026:0crwdne96026:0\n  ```\n\n- crwdns96028:0[ButtonBase]crwdne96028:0 crwdns96030:0crwdne96030:0\n  \n    crwdns96032:0crwdne96032:0\n\n### crwdns96034:0crwdne96034:0\n\n- crwdns96036:0[CardActions]crwdne96036:0\n- crwdns96038:0[CardActions]crwdne96038:0\n- crwdns96040:0[CardActions]crwdne96040:0\n\n### crwdns96042:0crwdne96042:0\n\n- crwdns96044:0[ClickAwayListener]crwdne96044:0\n\n### crwdns96046:0crwdne96046:0\n\n- crwdns96048:0[DialogActions]crwdne96048:0\n- crwdns96050:0[DialogActions]crwdne96050:0\n- crwdns96052:0[DialogContentText]crwdne96052:0\n- crwdns96054:0[Dialog]crwdne96054:0 crwdns96056:0crwdne96056:0\n\n### crwdns96058:0crwdne96058:0\n\n- crwdns96060:0[Divider]crwdne96060:0\n  \n  ```diff\n  crwdns96062:0crwdne96062:0\n  ```\n\n### crwdns96064:0crwdne96064:0\n\n- crwdns96066:0[ExpansionPanelActions]crwdne96066:0\n- crwdns96068:0[ExpansionPanel]crwdne96068:0\n\n### crwdns96070:0crwdne96070:0\n\n- crwdns96072:0[List]crwdne96072:0\n  \n  - crwdns96074:0crwdne96074:0\n  - crwdns96076:0crwdne96076:0\n  - crwdns96078:0crwdne96078:0\n- crwdns96080:0[ListItem]crwdne96080:0\n\n### crwdns96082:0crwdne96082:0\n\n- crwdns96084:0[MenuItem]crwdne96084:0 crwdns96086:0crwdne96086:0\n\n### crwdns96088:0crwdne96088:0\n\n- crwdns96090:0[Modal]crwdne96090:0 crwdns96092:0crwdne96092:0\n  \n    crwdns96094:0crwdne96094:0\n\n- crwdns96096:0[Modal]crwdne96096:0\n\n- crwdns96098:0[Modal]crwdne96098:0 crwdns96100:0crwdne96100:0 crwdns96102:0crwdne96102:0 crwdns96104:0crwdne96104:0 crwdns96106:0crwdne96106:0\n\n### crwdns96108:0crwdne96108:0\n\n- crwdns96110:0[Paper]crwdne96110:0 crwdns96112:0crwdne96112:0\n  \n  ```diff\n  crwdns96114:0{2}crwdne96114:0\n  ```\n  \n    crwdns96116:0crwdne96116:0\n\n### crwdns96118:0crwdne96118:0\n\n- crwdns96120:0[Portal]crwdne96120:0 crwdns96122:0crwdne96122:0\n\n### crwdns96124:0crwdne96124:0\n\n- crwdns96126:0[Slide]crwdne96126:0 crwdns96128:0crwdne96128:0\n\n### crwdns96130:0crwdne96130:0\n\n- crwdns96132:0[Slider]crwdne96132:0\n  \n  ```diff\n  crwdns96134:0crwdne96134:0\n  ```\n\n### crwdns96136:0crwdne96136:0\n\n- crwdns96138:0[Switch]crwdne96138:0 crwdns96140:0crwdne96140:0\n  \n  ```diff\n  crwdns96142:0crwdne96142:0\n  ```\n\n### crwdns96144:0crwdne96144:0\n\n- crwdns96146:0[Snackbar]crwdne96146:0\n  \n  - crwdns96148:0crwdne96148:0\n  - crwdns96150:0crwdne96150:0\n\n### crwdns96152:0crwdne96152:0\n\n- crwdns96154:0[SvgIcon]crwdne96154:0 crwdns96156:0crwdne96156:0 crwdns96158:0crwdne96158:0\n  \n  ```diff\n  crwdns96160:0crwdne96160:0\n  ```\n\n### crwdns96162:0crwdne96162:0\n\n- crwdns96164:0[Tab]crwdne96164:0 crwdns96166:0crwdne96166:0 crwdns96168:0crwdne96168:0\n  \n    ![crwdns96172:0crwdne96172:0](crwdns96170:0crwdne96170:0)\n\n- crwdns96174:0[Tabs]crwdne96174:0\n  \n  ```diff\n  crwdns96176:0crwdne96176:0\n  ```\n\n### crwdns96178:0crwdne96178:0\n\n- crwdns96180:0[TableCell]crwdne96180:0\n  \n  ```diff\n  crwdns96182:0{row.calories}crwdnd96182:0{row.calories}crwdne96182:0\n  ```\n\n- crwdns96184:0[TableRow]crwdne96184:0 crwdns96186:0crwdne96186:0\n- crwdns96188:0[TableCell]crwdne96188:0\n  \n  ```diff\n  crwdns96190:0crwdne96190:0\n  ```\n\n- crwdns96192:0[TablePagination]crwdne96192:0 crwdns96194:0crwdne96194:0\n\n### crwdns96196:0crwdne96196:0\n\n- crwdns96198:0[InputLabel]crwdne96198:0 crwdns96200:0crwdne96200:0\n  \n  ```diff\n  crwdns96202:0{{ asterisk: 'bar' }}crwdnd96202:0{{ asterisk: 'bar' }}crwdne96202:0\n  ```\n\n- crwdns96204:0[InputBase]crwdne96204:0 crwdns96206:0crwdne96206:0\n  \n  ```css\n  crwdns96208:0crwdne96208:0\n  ```\n  \n    crwdns96210:0crwdne96210:0\n\n- crwdns96212:0[InputBase]crwdne96212:0\n\n### crwdns96214:0crwdne96214:0\n\n- crwdns96216:0[Tooltip]crwdne96216:0 crwdns96218:0crwdne96218:0\n- crwdns96220:0[Tooltip]crwdne96220:0\n\n### crwdns96222:0crwdne96222:0\n\n- crwdns96224:0[Typography]crwdne96224:0 crwdns96226:0crwdne96226:0 \n  - crwdns96228:0crwdne96228:0\n  - crwdns96230:0crwdne96230:0\n  - crwdns96232:0crwdne96232:0\n  - crwdns96234:0crwdne96234:0\n  - crwdns96236:0crwdne96236:0\n  - crwdns96238:0crwdne96238:0\n  - crwdns96240:0crwdne96240:0\n  - crwdns96242:0crwdne96242:0\n  - crwdns96244:0crwdne96244:0\n- crwdns96246:0[Typography]crwdne96246:0 crwdns96248:0crwdne96248:0\n- crwdns96250:0[Typography]crwdne96250:0\n  \n  ```diff\n  crwdns96252:0{headlineMapping}crwdnd96252:0{variantMapping}crwdne96252:0\n  ```\n\n- crwdns96254:0[Typography]crwdne96254:0 crwdns96256:0crwdne96256:0 crwdns96258:0crwdne96258:0 crwdns96260:0crwdne96260:0 crwdns96262:0crwdne96262:0\n- crwdns96264:0[Typography]crwdne96264:0 crwdns96266:0crwdne96266:0 crwdns96268:0crwdne96268:0\n- crwdns96270:0[Typography]crwdne96270:0 crwdns96272:0crwdne96272:0\n\n### crwdns96274:0crwdne96274:0\n\n- crwdns96276:0crwdne96276:0\n\n### crwdns96278:0crwdne96278:0\n\n- crwdns96280:0crwdne96280:0\n  \n  ```diff\n  crwdns96282:0{\n  Button,\n  TextField,\n  -}crwdne96282:0\n  ```\n  \n    crwdns96284:0crwdne96284:0\n  \n  - crwdns96286:0crwdne96286:0\n  - crwdns96288:0crwdne96288:0\n  - crwdns96290:0crwdne96290:0"},RQL5:function(e,n){e.exports='# 从v3版本迁移到v4版本\n\n<p class="description">是的，我们已经发布了v4版本！</p>\n\n您在找v3版本的文档吗？ [您可以在这里找到它们](https://material-ui.com/versions/) 。\n\n> 此文档尚未完成。 您是否已经升级了站点并且遇到了一些并没有在此涉及的问题？ [请在 GitHub 添加您的更改](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md)。\n\n## 简介\n\n当您将站点从 Material-UI 的v3版本升级到v4版本时，此篇会给您提供一些参考。 您可能不会将这里所有覆盖的内容运用到你的站点上。 我们会尽我们最大的努力让文档简单易懂，并尽可能有序地介绍，这样您可以迅速对v4版本游刃有余。\n\n## 为什么您需要迁移\n\n此文档介绍了*h如何*从v3版本迁移到v4版本。 关于迁移的*原因*，我们则在 [Medium上发布了一篇博客](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701)来详细解说。\n\n## 更新您的依赖包\n\n您需要做的第一件事，就是更新您的依赖包。\n\n### 升级 Material-UI 的版本\n\n若想要使用最新版本的 Material-UI，您必须更新 `package.json`。\n\n```json\n"dependencies": {\n  "@material-ui/core": "^4.0.0"\n}\n```\n\n或者运行\n\n```sh\nnpm install @material-ui/core\n\n或者\n\nyarn add @material-ui/core\n```\n\n### 更新 React 的版本\n\n对于 React 版本的最低要求是从 `react@^16.3.0` 升级到 `react@^16.8.0`。 这样一来我们能够依赖 [Hooks](https://reactjs.org/docs/hooks-intro.html) 的功能（我们已经不再使用 class API）。\n\n### 更新 Material-UI Styles 的版本\n\n若您以前使用v3版本的 `@material-ui/styles`，您则需要更新 `package.json`，这样才能使用最新版本的 Material-UI Styles。\n\n```json\n"dependencies": {\n  "@material-ui/styles": "^4.0.0"\n}\n```\n\n或者运行\n\n```sh\nnpm install @material-ui/styles\n\n或者\n\nyarn add @material-ui/styles\n```\n\n## 处理变化带来的系统崩溃\n\n### Core\n\n- 每个组件会提供他们的 ref。 这是通过使用 `React.forwardRef()` 实现的。 这回影响到内部的组件树和显示的名称，进而会使得 shallow 或者 snapshot 测试崩溃。 `innerRef` 不再返回一个实例的 ref（或者当内部组件是一个函数组件时，什么都不返回），而是返回一个它根组件的 ref。 相应的 API 文档在根组件中列出了。\n\n### Styles（样式表单）\n\n- ⚠️ Material-UI 依赖于 JSS v10版本。 JSS v10版本与v9版本不向后兼容。 请保证您的开发环境中未安装 JSS v9版本。 在您的 `package.json` 中移除 `react-jss` 将会有所帮助。 StylesProvider 组件替代了 JssProvider 组件。\n- 请移除 `withTheme()` 中的第一个可选的参数。 第一个参数本是作为未来的可能的选项的一个占位符。 我们从未发现有需要它的情况。 是时候来删除这个参数了。 它与[emotion 的 API](https://emotion.sh/docs/introduction) 以及 [styled-components 的 API ](https://www.styled-components.com) 相匹配。\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n-  约束 [keyframes 的 API](https://cssinjs.org/jss-syntax/#keyframes-animation). 您应该在您的代码中做出以下改变。\n  这对分离动画的逻辑有所帮助：\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: \'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)\',\n  +   animation: \'$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)\',\n    },\n    \'@keyframes mui-ripple-enter\': {\n      \'0%\': {\n        opacity: 0.1,\n      },\n      \'100%\': {\n        opacity: 0.3,\n      },\n    },\n  ```\n  若想要正确地使用它，您必须使用返回值。\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n—您可以从主题创建中安全地移除下一个变体：\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n—我们已经不再使用`theme.spacing.unit`，请参照新的 API：\n\n  您可以在项目中使用 [迁移小帮手](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api)来让您的迁移流程更加顺畅。\n\n### Layout（布局）\n\n- [Grid] 本着支持任意间距值并且摈弃心理上一直需要在8的基础上计数的目的，我们改变了 spacing 的 API: \n\n  ```diff\n    /**\n     * 在类别为`item` 组件之间定义间距。\n     * 它只能用于类型为 `container` 的组件。\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  从今往后，您可以使用主题来实现 [一个自定义的网格间距变换函数](https://material-ui.com/system/spacing/#transformation)。\n- [Container] 从 `@material-ui/lab` 迁移到 `@material-ui/core`。\n\n  ```diff\n  -import Container from \'@material-ui/lab/Container\';\n  +import Container from \'@material-ui/core/Container\';\n  ```\n\n### TypeScript\n\n#### `value` 类型 \n\n将 input 组件的 `value` 属性的类型正常化，这样可以使用 `unknown`了。 这会影响\n`InputBase`，`NativeSelect`，`OutlinedInput`，`Radio`，`RadioGroup`，`Select`，`SelectInput`，`TextArea` 和 `TextField`。\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    //处理值\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\n我们在 [TypeScript 指南中](/guides/typescript/#handling-value-and-event-handlers)更详细地解释了此变更。\n\n### Buttons（按钮）\n\n- [Button] 删除不推荐使用的按钮变体（flat，raised 和 fab）：\n  \n  ```diff\n  -<Button variant="raised" />\n  +<Button variant="contained" />\n  ```\n  \n  ```diff\n  -<Button variant="flat" />\n  +<Button variant="text" />\n  ```\n  \n  ```diff\n  -import Button from \'@material-ui/core/Button\';\n  -<Button variant="fab" />\n  +import Fab from \'@material-ui/core/Fab\';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from \'@material-ui/core/Button\';\n  -<Button variant="extendedFab" />\n  +import Fab from \'@material-ui/core/Fab\';\n  +<Fab variant="extended" />\n  ```\n\n- [ButtonBase] 传递给`组件`的属性的组件需要能接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n  \n    在 `BottomNavigationAction`，`Button`，`CardActionArea`，`Checkbox`，`ExpansionPanelSummary`，`Fab`，`IconButton`，`MenuItem`，`Radio`，`StepButton`，`Tab`，`TableSortLabel` 以及 `ListItem` 上，若它们的 `button` 属性是 true，则也适用。\n\n### Cards（卡片）\n\n- [CardActions] 将 `disableActionSpacing` 属性重命名为 `disableSpacing`。\n- [CardActions] 移除 CSS类中的 `disableActionSpacing`。\n- [CardActions] 将CSS类 `action` 重命名为 `spacing`。\n\n### ClickAwayListener（他处点击监听器）\n\n- [ClickAwayListener] 隐藏 react-event-listener 的属性。\n\n### Dialog（对话框）\n\n- [DialogActions] 将 `disableActionSpacing` 属性重命名为 `disableSpacing`。\n- [DialogActions] 将CSS类 `action` 重命名为 `spacing`。\n- [DialogContentText] 不使用文字铸排变体 `subtitle1`，而使用 `body1`。\n- [Dialog] 子组件能够接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n\n### Dividers（分隔线）\n\n- [Divider] 移除了弃用的 ` inset ` 属性：\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant="inset" />\n  ```\n\n### ExpansionPanel（扩展面板）\n\n- [ExpansionPanelActions] 将 CSS 类 `action` 重命名为 `spacing`。\n- [ExpansionPanel] 加强 `disabled` 样式规则的 CSS 特性。\n\n### Lists（列表）\n\n- [List] 为了符合规范，我们重新在列表组件上做了调整 ：\n  \n  - 当使用头像时，您必须要使用 `ListItemAvatar` 组件。\n  - 当使用左边的复选框时，您必须使用 `ListItemIcon` 组件。\n  - 您必须要在图标按钮上设置 `edge` 属性。\n- [ListItem] 加强 `disabled` 和 `focusVisible` 样式规则的 CSS 特性。\n\n### Menu（菜单）\n\n- [MenuItem] 删除 MenuItem 的固定高度。 浏览器将会自行根据间距和行高来计算高度。\n\n### Modal（模态框）\n\n- [Modal] 子组件能够接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n  \n    这也适用于 `Dialog` 和 `Popover` 。\n\n- [Modal] 删除Modal组件类的自定义API (独立使用时将减少-74％的打包大小)。\n\n- [Modal] 现在忽略了 event.defaultPrevented。 即使当向下离开事件调用了 `event.preventDefault()`，新的逻辑也会关闭模态框。 `event.preventDefault()` 旨在禁用一些默认的行为，如单击一个复选框来选中它；点击按钮来提交表单；以及点击左键来移除文本输入框的光标等等。 只有一些特殊的HTML元素才具有这些默认的行为。 若您不想触发模态框的 `onClose` 事件，您需要使用 `event.stopPropagation()`。\n\n### Paper（纸张）\n\n- [Paper] 减小默认的 elevation（阴影高度）。 为了适配卡片组件和扩展面板组件，请更改默认纸张的阴影高度：\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    这也会影响 `扩展面板`。\n\n### Portal（传送门）\n\n- [Portal] 当使用 `disablePortal`属性的时候，子元素需要能够接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n\n### Slide（幻灯片）\n\n- [Slide] 子组件能够接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n\n### Slider（滑块）\n\n- [Slider] 从 `@material-ui/lab` 迁移到 `@material-ui/core`。\n  \n  ```diff\n  -import Slider from \'@material-ui/lab/Slider\'\n  +import Slider from \'@material-ui/core/Slider\'\n  ```\n\n### Switch （开关）\n\n- [Switch] 重新编写实施的代码能够更容易覆盖样式表。 请重命名类的名字以匹配规范的用词：\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar（消息条）\n\n- [Snackbar] 匹配新的规范。\n  \n  - 更改尺寸。\n  - 将默认的过渡动画从 `Slide` 改成 `Grow`。\n\n### SvgIcon（Svg 图标）\n\n- [SvgIcon] 重命名nativeColor - > htmlColor。 React 在 `for` 这个 HTML 属性上也遇到了同样的问题，他们选择命名这个属性为`htmlFor`。 此变化的原因大同小异。\n  \n  ```diff\n  -<AddIcon nativeColor="#fff" />\n  +<AddIcon htmlColor="#fff" />\n  ```\n\n### Tabs（选项卡）\n\n- [Tab] 为了简单起见，删除了` labelContainer `，`label` 和 `labelWrapped` 等类的 key。 这使得我们可以移走两个中间的 DOM 元素。 您应该可以将自定义的样式移到`根元素`的类的键上。\n  \n    ![一个更简单的标签项的 DOM 结构](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] 移除了弃用的 <0>fullWidth</0> 和 <0>scrollable</0> 属性：:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant="scrollable" />\n  ```\n\n### Table（表格）\n\n- [TableCell] 移除了弃用的 `numeric` 属性：\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align="right">{row.calories}</TableCell>\n  ```\n\n- [TableRow] 删除了 CSS 属性中的固定高度。 浏览器将会自行根据间距和行高来计算单元格的高度。\n- [TableCell] 将 `dense` 模式移至一个不同的属性：\n  \n  ```diff\n  -<TableCell padding="dense" />\n  +<TableCell size="small" />\n  ```\n\n- [TablePagination] 此组件不再修复无效的属性（`page`，`count`，`rowsPerPage`）组合。 相反的，它会给出一个警告。\n\n### TextField（文本框）\n\n- [InputLabel] 凭借 InputLabel 组件的类 API，您应该可以覆盖 FormLabel 组件所有的样式表。 我们移除了 `FormLabelClasses` 属性。\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: \'bar\' }}\n  + classes={{ asterisk: \'bar\' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] 改变了默认的盒子模型的大小。 现如今它则使用以下的 CSS：\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    与 `fullWidth` 属性有关的问题迎刃而解。\n\n- [InputBase] 从 `InputBase` 中移走了 `inputType` 类。\n\n### Tooltip（文字提示）\n\n- [Tooltip] 子组件能够接受一个 ref。 [组合指南](/guides/composition/#caveat-with-refs)解释了迁移的策略。\n- [Tooltip] 相比以前任何聚焦都会出现，现在只会在 focus-visible 聚焦的时候出现。\n\n### Typography（文字铸排）\n\n- [Typography] 移除了各种弃用的铸排变体。 您可以通过执行以下的替换来升级： \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] 移除了固定的 `display: block` 这个默认的铸排样式。 您现在可以使用新的 `display?: \'initial\' | \'inline\' | \'block\';` 属性。\n- [Typography] 为了达到更好的排版效果，请重命名属性 `headlineMapping` 为 `variantMapping`。\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] 将默认的字体从 `body2` 换成 `body1`。 默认为16px的字体大小比默认为14px好。 Bootstrap，material.io，甚至我们的文档都将16px作为默认字体大小。 像 Ant Design 一样使用14px是可以理解的，因为中国的用户使用了不同的字母表。 我们建议使用12px作为日语的默认字体大小。\n- [Typography] 移除了铸排变体的默认颜色。 大多数情况下，字体颜色应该是继承而来的。 这是网站的默认行为。\n- [Typography] Rename `color="default"` to `color="initial"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). 您不应该再使用 *default*，它缺少明确的语义。\n\n### Node\n\n- [是时候放弃对 node 6 的支持](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule)，而升级到 node 8 啦。\n\n### UMD\n\n- 此更改简化了 Material-UI 与 CDN 的使用：\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window[\'material-ui\'];\n  +} = MaterialUI;\n  ```\n  \n    它与其他 React 的项目保持一致：\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes'},Tf4h:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var a=t("mXGw"),o=t.n(a),i=t("e+1t"),r=t("h2HE"),s=t("3cvN"),l=o.a.createElement(i.a,{req:r,reqSource:s,reqPrefix:"pages/guides/migration-v3"});function d(){return l}},YWP4:function(e,n){e.exports='# Migrando da v3 para v4\n\n<p class="description">Sim, v4 foi lançada!</p>\n\nProcurando pelos documentos da v3? [Encontre-os aqui](https://material-ui.com/versions/).\n\n> Este documento é um trabalho em progresso. Você atualizou seu site e encontrou algo que não é abordado aqui? [Adicione suas alterações no GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introdução\n\nEsta é uma referência para atualizar seu site de Material-UI v3 para v4. Embora haja muita coisa coberta por aqui, você provavelmente não precisará fazer tudo no seu site. Faremos o nosso melhor para manter as coisas fáceis de seguir e tão sequenciais quanto possível, para que você possa rapidamente agitar na v4!\n\n## Por que você deve migrar\n\nEsta página de documentação cobre o *como* migrar da v3 para a v4. O *por que* é abordado na [postagem no blog do Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Atualizando suas dependências\n\nA primeira coisa que você precisa fazer é atualizar suas dependências.\n\n### Atualize a versão do Material-UI\n\nVocê precisa atualizar seu `package.json` para usar a versão mais recente do Material-UI.\n\n```json\n"dependencies": {\n  "@material-ui/core": "^4.0.0"\n}\n```\n\nOu execute\n\n```sh\nnpm install @material-ui/core\n\nou\n\nyarn add @material-ui/core\n```\n\n### Atualize a versão do React\n\nA versão miníma necessária do React foi incrementada de `react@^16.3.0` para `react@^16.8.0`. Isso nos permite a utilizar [Hooks](https://reactjs.org/docs/hooks-intro.html) (não usamos mais a API class).\n\n### Atualize a versão do Material-UI Styles\n\nSe você estava usando anteriormente `@material-ui/styles` com a versão 3, precisa atualizar o `package.json` para usar a última versão de Material-UI Styles.\n\n```json\n"dependencies": {\n  "@material-ui/styles": "^4.0.0"\n}\n```\n\nOu execute\n\n```sh\nnpm install @material-ui/styles\n\nou\n\nyarn add @material-ui/styles\n```\n\n## Tratamento de alterações recentes\n\n### Núcleo\n\n- Cada componente encaminha seu ref. Isso é implementado usando `React.forwardRef()`. Isso afeta a árvore interna do componente e o nome de exibição, portanto, pode quebrar testes superficiais ou instantâneos. `innerRef` não retornará mais um ref à instância (ou nada se o componente interno for um componente de função), mas uma referência ao seu componente raiz. Os documentos da API correspondentes listam o componente raiz.\n\n### Estilos\n\n- ⚠️ Material-UI depende do JSS v10. JSS v10 não é compatível com o v9. Certifique-se de que o JSS v9 não esteja instalado em seu ambiente. Remover `react-jss` do seu `package.json` pode ajudar. O componente StylesProvider substitui o componente JssProvider.\n- Remova a primeira opção de argumento do `withTheme()`. O primeiro argumento era um espaço reservado para uma eventual opção futura. Nós não encontramos uma necessidade para ele. É hora de remover esse argumento. Corresponde à [emotion API](https://emotion.sh/docs/introduction) e [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Escopo da [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). Você deve aplicar as seguintes alterações na sua base de código.\n  Ele ajuda a isolar a lógica da animação:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: \'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)\',\n  +   animation: \'$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)\',\n    },\n    \'@keyframes mui-ripple-enter\': {\n      \'0%\': {\n        opacity: 0.1,\n      },\n      \'100%\': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Tema\n\n- O método` theme.palette.augmentColor () `não produz mais um efeito colateral em sua cor de entrada.\n  Para usá-lo corretamente, agora você precisa usar o valor retornado.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- Você pode remover com segurança a próxima variante da criação de temas:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n-` theme.spacing.unit` está com o uso obsoleto, você pode usar a nova API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up(\'sm\')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n * Dica: você pode fornecer mais de 1 argumento:` theme.spacing (1, 2) // = \'8px 16px\'` *.\n\n  Você pode usar o [auxiliar de migração] (https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) em seu projeto para tornar isso mais suave.\n\n### Leiaute\n\n- [Grid] Para suportar valores de espaçamento arbitrários e para remover a necessidade de contar mentalmente por 8, estamos mudando a API de espaçamento:\n\n  ```diff\n    /**\n     * Define o espaço entre o tipo` componente do item.\n     * Só pode ser usado em um componente do tipo \'container\'.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Indo adiante, você pode usar o tema para implementar [uma função de transformação de espaçamento de grade customizada] (https://material-ui.com/system/spacing/#transformation).\n- [Container] Movido de `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from \'@material-ui/lab/Container\';\n  +import Container from \'@material-ui/core/Container\';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nTipo da propriedade `value` normalizado para os componentes de entrada utilizarem `unknown`. Isso afeta\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nEsta alteração é explicada em mais detalhes no nosso guia [TypeScript](/guides/typescript/#handling-value-and-event-handlers)\n\n### Botão\n\n- [Button] Remova as variantes descontinuadas (flat, raised e fab):\n  \n  ```diff\n  -<Button variant="raised" />\n  +<Button variant="contained" />\n  ```\n  \n  ```diff\n  -<Button variant="flat" />\n  +<Button variant="text" />\n  ```\n  \n  ```diff\n  -import Button from \'@material-ui/core/Button\';\n  -<Button variant="fab" />\n  +import Fab from \'@material-ui/core/Fab\';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from \'@material-ui/core/Button\';\n  -<Button variant="extendedFab" />\n  +import Fab from \'@material-ui/core/Fab\';\n  +<Fab variant="extended" />\n  ```\n\n- [ButtonBase] O componente passado para a propriedade `component` precisa ser capaz de lidar com ref. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n  \n    Isso também se aplica a `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` bem como `ListItem` se a propriedade `button` for `true`.\n\n### Cartão\n\n- [CardActions] Renomeie a propriedade `disableActionSpacing` para `disableSpacing`.\n- [CardActions] Remova a classe CSS `disableActionSpacing`.\n- [CardActions] Renomeie a classe CSS `action` para `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Esconda propriedades react-event-listener.\n\n### Dialog\n\n- [DialogActions] Renomeie a propriedade `disableActionSpacing` para `disableSpacing`.\n- [DialogActions] Renomeie a classe CSS `action` para `spacing`.\n- [DialogContentText] Use a varante de tipografia `body1` em vez de `subtitle1`.\n- [Dialog] O elemento filho precisa ser capaz de lidar com ref. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n\n### Divider\n\n- [Divider] Remova a propriedade obsoleta `inset`.\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant="inset" />\n  ```\n\n### Painel de expansão\n\n- [ExpansionPanelActions] Renomeie a classe CSS `action` para `spacing`.\n- [ExpansionPanel] Aumente a especificidade CSS da regra de estilo `disabled`.\n\n### Lista\n\n- [List] Refaça a lista de componentes para coincidir com a especificação:\n  \n  - O componente `ListItemAvatar` é necessário ao usar um avatar.\n  - O componente `ListItemIcon` é necessário ao usar uma caixa de seleção à esquerda.\n  - A propriedade `edge` deve ser definida para botões de ícone.\n- [ListItem] Aumente a especificidade CSS das regras de estilo `disabled` e `focusVisible`.\n\n### Menu\n\n- [MenuItem] Remova a altura fixa do MenuItem. O preenchimento e a altura da linha são usados pelo navegador para calcular a altura.\n\n### Modal\n\n- [Modal] O elemento filho precisa ser capaz de lidar com ref. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n  \n    Isso também se aplica aos componentes `Dialog` e `Popover`.\n\n- [Modal] Remova a API de customização de classes para o componente Modal (redução do tamanho do pacote -74% quando usado de forma independente).\n\n- [Modal] event.defaultPrevented é agora ignorado. A nova lógica fecha o Modal mesmo se `event.preventDefault()` é chamado no evento down da tecla escape (Esc). `event.preventDefault()` destina-se a impedir comportamentos padrão, como clicar em uma caixa de seleção para verificá-lo, apertar um botão para enviar um formulário e pressionar a seta para a esquerda para mover o cursor em uma entrada de texto, etc. Apenas elementos HTML especiais possuem esses comportamentos padrão. Você deve usar `event.stopPropagation()` se você não quer acionar o evento `onClose` no modal.\n\n### Paper\n\n- [Paper] Reduza a elevação padrão. Altere a elevação padrão de Paper, para corresponder ao cartão e ao painel de expansão:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    Isso afeta o componente `ExpansionPanel` também.\n\n### Portal\n\n- [Portal] O elemento filho precisa ser capaz de lidar com ref, quando a propriedade `disablePortal` é usada. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n\n### Slide\n\n- [Slide] O elemento filho precisa ser capaz de lidar com ref. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n\n### Slider\n\n- [Slider] Mova de `@material-ui/lab` para `@material-ui/core`.\n  \n  ```diff\n  -import Slider from \'@material-ui/lab/Slider\'\n  +import Slider from \'@material-ui/core/Slider\'\n  ```\n\n### Seletor\n\n- [Switch] Refatore a implementação para torná-la mais fácil de sobrescrever os estilos. Renomeie os nomes das classes para corresponder ao texto da especificação:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Coincide a nova especificação.\n  \n  - Modificado as dimensões\n  - Modificado a transição padrão de `Slide` para `Grow`.\n\n### Ícones SVG\n\n- [SvgIcon] Renomeie nativeColor -> htmlColor. React resolveu o mesmo problema com o atributo HTML `for`, eles decidiram chamar um propriedade `htmlFor`. Essa mudança segue o mesmo raciocínio.\n  \n  ```diff\n  -<AddIcon nativeColor="#fff" />\n  +<AddIcon htmlColor="#fff" />\n  ```\n\n### Guias\n\n- [Tab] Remova as chaves de classe `labelContainer`, `label` e `labelWrapped` para simplificar. Isso nos permitiu remover 2 elementos DOM intermediários. Você deve conseguir mover os estilos customizados para chave de classe `root`.\n  \n    ![Uma estrutura DOM de item de guia mais simples](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remova as propriedades descontinuadas fullWidth e scrollable:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant="scrollable" />\n  ```\n\n### Table\n\n- [TableCell] Remova a propriedade descontinuada `numeric`:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align="right">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remova a propriedade CSS de altura fixa. A altura da célula é calculada pelo navegador usando o preenchimento e a altura da linha.\n- [TableCell] Movemos o modo `dense` para uma propriedade diferente:\n  \n  ```diff\n  -<TableCell padding="dense" />\n  +<TableCell size="small" />\n  ```\n\n- [TablePagination] O componente já não tenta corrigir as combinações de propriedades inválidas (`page`, `count`, `rowsPerPage`). Em vez disso, emite um aviso.\n\n### TextField\n\n- [InputLabel] Você deve conseguir sobrescrever todos os estilos do componente FormLabel usando a API CSS do componente InputLabel. A propriedade `FormLabelClasses` foi removida.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: \'bar\' }}\n  + classes={{ asterisk: \'bar\' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Modificado o modelo padrão de box sizing. Ele usa o seguinte CSS agora:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    Isso resolve problemas com a propriedade `fullWidth`.\n\n- [InputBase] Remova a classe `inputType` do `InputBase`.\n\n### Tooltip\n\n- [Tooltip] O elemento filho precisa ser capaz de lidar com ref. O [guia de composição](/guides/composition/#caveat-with-refs) explica a estratégia de migração.\n- [Tooltip] Aparece somente após o foco ser "focus-visible" em vez de qualquer foco.\n\n### Typography\n\n- [Typography] Remova as variantes de tipografia descontinuadas. Você pode atualizar executando as seguintes substituições: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (padrão) => body2 (padrão)\n- [Typography] Remova o padrão opinativo do estilo da tipografia `display: block`. Você pode usar a nova propriedade `display?: \'initial\' | \'inline\' | \'block\';`.\n- [Typography] Renomeie a propriedade `headlineMapping` para `variantMapping`, se alinha melhor com a sua finalidade.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Modifique a variante padrão de `body2` para `body1`. Um tamanho de fonte de 16px é um padrão melhor que 14px. Bootstrap, material.io e até nossa documentação usam 16px como tamanho de fonte padrão. 14px como o Ant Design usa, é compreensível, já que os usuários chineses têm um alfabeto diferente. Recomendamos 12px como o tamanho de fonte padrão para japonês.\n- [Typography] Remova a cor padrão das variantes de tipografia. A cor deve herdar a maior parte do tempo. É o comportamento padrão da web.\n- [Typography] Rename `color="default"` to `color="initial"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). O uso de *default* deve ser evitado, isso perde semântica.\n\n### Node\n\n- [Removemos suporte ao node 6](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), você deve atualizar para o node 8.\n\n### UMD\n\n- Essa alteração facilita o uso de Material-UI com uma CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window[\'material-ui\'];\n  +} = MaterialUI;\n  ```\n  \n    É consistente com outros projetos do React:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes'},h2HE:function(e,n,t){var a={"./migration-v3-aa.md":"G+F9","./migration-v3-de.md":"iyFy","./migration-v3-es.md":"BfO7","./migration-v3-fr.md":"ukY3","./migration-v3-ja.md":"pZwr","./migration-v3-pt.md":"YWP4","./migration-v3-ru.md":"pxzZ","./migration-v3-zh.md":"RQL5","./migration-v3.md":"z0fS"};function o(e){var n=i(e);return t(n)}function i(e){var n=a[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(a)},o.resolve=i,e.exports=o,o.id="h2HE"},iyFy:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Ja, v4 wurde veröffentlicht!</p>\n\nLooking for the v3 docs? [Find them here](https://material-ui.com/versions/).\n\n> This document is a work in progress. Have you upgraded your site and run into something that's not covered here? [Add your changes on GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introduction\n\nThis is a reference for upgrading your site from Material-UI v3 to v4. While there's a lot covered here, you probably won't need to do everything for your site. We'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4. The *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOder führe aus\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`. This allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOder führe aus\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Grundlegendes\n\n- Every component forward their ref. This is implemented by using `React.forwardRef()`. This affects the internal component tree and display name and therefore might break shallow or snapshot tests. `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component. The corresponding API docs list the root component.\n\n### Stile\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9. Make sure JSS v9 is not installed in your environment. Removing `react-jss` from your `package.json` can help. The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`. The first argument was a placeholder for a potential future option. We have never found a need for it. It's time to remove this argument. It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). Sie sollten die folgenden Änderungen in Ihrer Codebase anwenden.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n  \n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n  \n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n  \n  ```diff\n  - <0 />\n  + <1 />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n  \n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem. The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `Dialog` and `Popover`.\n\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n\n- [Modal] event.defaultPrevented is now ignored. Die neue Logik schließt das Modal, auch wenn `event.preventDefault()` beim Ereignis \"key down escape\" aufgerufen wird. `event.preventDefault()` soll Standardverhalten stoppen, z. B. das Aktivieren eines Kontrollkästchens, das Klicken auf eine Schaltfläche zum Senden eines Formulars und das Drücken des linken Pfeils, um den Cursor in einer Texteingabe zu bewegen usw. Nur spezielle HTML-Elemente weisen dieses Standardverhalten auf. You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation. Change the default Paper elevation to match the Card and the Expansion Panel:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n  \n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Switch\n\n- [Switch] Refactor the implementation to make it easier to override the styles. Rename the class names to match the specification wording:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n  \n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Umbenennung nativeColor -> htmlColor. React löst dasselbe Problem mit dem`for` HTML-Attribut. Sie haben beschlossen, die Eigenschaft `htmlFor` zu nennen. Diese Änderung folgt den gleichen Überlegungen.\n  \n  ```diff\n  -<0 />\n  +<1 />\n  ```\n\n### Tabs\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity. This has allowed us to remove 2 intermediary DOM elements. You should be able to move the custom styles to the `root` class key.\n  \n    ![Eine einfachere DOM-Struktur für Tabs](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### Tabelle\n\n- [TableCell] Remove the deprecated `numeric` property:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remove the fixed height CSS property. The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n  \n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### Textfeld\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component. The `FormLabelClasses` property has been removed.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Ändern Sie die Standard Boxgröße. Es verwendet jetzt das folgende CSS:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    This solves issues with the `fullWidth` prop.\n\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### Typografie\n\n- [Typography] Entfernen der veralteten Typografievarianten. Sie können ein Upgrade durchführen, indem Sie die folgenden Ersetzungen vornehmen: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (Standard) => body2 (Standard)\n- [Typography] Entfernen Sie den dogmenbehafteten `display: block` Standardtypografiestil. Sie können die neue `display?: 'initial' | 'inline' | 'block';` Eigenschaft benutzen.\n- [Typography] Benennen Sie die `headlineMapping` Eigenschaft zu `variantMapping` um sie besser ihren Zweck ausrichten.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Ändern der Standardvariante von `body2` auf `body1`. Eine Schriftgröße von 16px ist eine bessere Standardeinstellung als 14px. Bootstrap, material.io undnsogar unsere Dokumentation verwenden 16px als Standardschriftgröße. 14px wie Ant Design es verständlicherweise benutzt, da chinesische Benutzer ein anderes Alphabet haben. Wir empfehlen 12px als Standardschriftgröße für Japanisch.\n- [Typography] Entfernen der Standardfarbe aus den Typografievarianten. Die Farbe sollte die meiste Zeit erben. Dies ist das Standardverhalten des Webs.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [node 6 wird nicht mehr unterstützt](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule); Sie sollten ein Upgrade auf node 8 durchführen.\n\n### UMD\n\n- Diese Änderung erleichtert die Verwendung von Material-UI mit einem CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n  \n    Es stimmt mit anderen React-Projekten überein:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes"},pZwr:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Yeah, v4 has been released!</p>\n\nLooking for the v3 docs? [Find them here](https://material-ui.com/versions/).\n\n> This document is a work in progress. Have you upgraded your site and run into something that's not covered here? [Add your changes on GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introduction\n\nThis is a reference for upgrading your site from Material-UI v3 to v4. While there's a lot covered here, you probably won't need to do everything for your site. We'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4. The *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`. This allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Core\n\n- Every component forward their ref. This is implemented by using `React.forwardRef()`. This affects the internal component tree and display name and therefore might break shallow or snapshot tests. `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component. The corresponding API docs list the root component.\n\n### スタイル\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9. Make sure JSS v9 is not installed in your environment. Removing `react-jss` from your `package.json` can help. The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`. The first argument was a placeholder for a potential future option. We have never found a need for it. It's time to remove this argument. It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). You should apply the following changes in your codebase.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n  \n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n  \n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant=\"inset\" />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n  \n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem. The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `Dialog` and `Popover`.\n\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n\n- [Modal] event.defaultPrevented is now ignored. The new logic closes the Modal even if `event.preventDefault()` is called on the key down escape event. `event.preventDefault()` is meant to stop default behaviors like clicking a checkbox to check it, hitting a button to submit a form, and hitting left arrow to move the cursor in a text input etc. Only special HTML elements have these default behaviors. You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation. Change the default Paper elevation to match the Card and the Expansion Panel:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n  \n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Switch\n\n- [Switch] Refactor the implementation to make it easier to override the styles. Rename the class names to match the specification wording:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n  \n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Rename nativeColor -> htmlColor. React solved the same problem with the `for` HTML attribute, they have decided to call the prop `htmlFor`. This change follows the same reasoning.\n  \n  ```diff\n  -<AddIcon nativeColor=\"#fff\" />\n  +<AddIcon htmlColor=\"#fff\" />\n  ```\n\n### Tabs\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity. This has allowed us to remove 2 intermediary DOM elements. You should be able to move the custom styles to the `root` class key.\n  \n    ![A simpler tab item DOM structure](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### テーブル\n\n- [TableCell] Remove the deprecated `numeric` property:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remove the fixed height CSS property. The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n  \n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### TextField\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component. The `FormLabelClasses` property has been removed.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Change the default box sizing model. It uses the following CSS now:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    This solves issues with the `fullWidth` prop.\n\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### タイポグラフィ\n\n- [Typography] Remove the deprecated typography variants. You can upgrade by performing the following replacements: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] Remove the opinionated `display: block` default typography style. You can use the new `display?: 'initial' | 'inline' | 'block';` property.\n- [Typography] Rename the `headlineMapping` property to `variantMapping` to better align with its purpose.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Change the default variant from `body2` to `body1`. A font size of 16px is a better default than 14px. Bootstrap, material.io, and even our documentation use 16px as a default font size. 14px like Ant Design uses is understandable, as Chinese users have a different alphabet. We recommend 12px as the default font size for Japanese.\n- [Typography] Remove the default color from the typography variants. The color should inherit most of the time. It's the default behavior of the web.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [Drop node 6 support](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), you should upgrade to node 8.\n\n### UMD\n\n- This change eases the use of Material-UI with a CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n  \n    It's consistent with other React projects:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes"},pxzZ:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Да! Релиз v4 состоялся!</p>\n\nВсё же ищете документацию на v3? [Вы можете найти её здесь](https://material-ui.com/versions/).\n\n> Этот документ пока находится в стадии разработки. Вы обновили свой сайт и столкнулись с чем-то, что здесь не рассматривается? [Добавьте ваши изменения на GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Вступление\n\nThis is a reference for upgrading your site from Material-UI v3 to v4. While there's a lot covered here, you probably won't need to do everything for your site. We'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4. The *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`. This allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Core\n\n- Every component forward their ref. This is implemented by using `React.forwardRef()`. This affects the internal component tree and display name and therefore might break shallow or snapshot tests. `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component. The corresponding API docs list the root component.\n\n### Styles\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9. Make sure JSS v9 is not installed in your environment. Removing `react-jss` from your `package.json` can help. The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`. The first argument was a placeholder for a potential future option. We have never found a need for it. It's time to remove this argument. It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). You should apply the following changes in your codebase.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n  \n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n  \n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant=\"inset\" />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n  \n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem. The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `Dialog` and `Popover`.\n\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n\n- [Modal] event.defaultPrevented is now ignored. The new logic closes the Modal even if `event.preventDefault()` is called on the key down escape event. `event.preventDefault()` is meant to stop default behaviors like clicking a checkbox to check it, hitting a button to submit a form, and hitting left arrow to move the cursor in a text input etc. Only special HTML elements have these default behaviors. You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation. Change the default Paper elevation to match the Card and the Expansion Panel:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n  \n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Switch (переключатель)\n\n- [Switch] Refactor the implementation to make it easier to override the styles. Rename the class names to match the specification wording:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n  \n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Rename nativeColor -> htmlColor. React solved the same problem with the `for` HTML attribute, they have decided to call the prop `htmlFor`. This change follows the same reasoning.\n  \n  ```diff\n  -<AddIcon nativeColor=\"#fff\" />\n  +<AddIcon htmlColor=\"#fff\" />\n  ```\n\n### Вкладки\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity. This has allowed us to remove 2 intermediary DOM elements. You should be able to move the custom styles to the `root` class key.\n  \n    ![A simpler tab item DOM structure](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### Table\n\n- [TableCell] Remove the deprecated `numeric` property:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remove the fixed height CSS property. The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n  \n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### Текстовое поля\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component. The `FormLabelClasses` property has been removed.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Change the default box sizing model. It uses the following CSS now:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    This solves issues with the `fullWidth` prop.\n\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### Оформление текста\n\n- [Typography] Remove the deprecated typography variants. You can upgrade by performing the following replacements: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] Remove the opinionated `display: block` default typography style. You can use the new `display?: 'initial' | 'inline' | 'block';` property.\n- [Typography] Rename the `headlineMapping` property to `variantMapping` to better align with its purpose.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Change the default variant from `body2` to `body1`. A font size of 16px is a better default than 14px. Bootstrap, material.io, and even our documentation use 16px as a default font size. 14px like Ant Design uses is understandable, as Chinese users have a different alphabet. We recommend 12px as the default font size for Japanese.\n- [Typography] Remove the default color from the typography variants. The color should inherit most of the time. It's the default behavior of the web.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [Drop node 6 support](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), you should upgrade to node 8.\n\n### UMD\n\n- This change eases the use of Material-UI with a CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n  \n    It's consistent with other React projects:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes"},ukY3:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Yeah, la v4 est sortie!</p>\n\nLooking for the v3 docs? [Find them here](https://material-ui.com/versions/).\n\n> This document is a work in progress. Have you upgraded your site and run into something that's not covered here? [Add your changes on GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introduction\n\nThis is a reference for upgrading your site from Material-UI v3 to v4. While there's a lot covered here, you probably won't need to do everything for your site. We'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4. The *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`. This allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Core\n\n- Every component forward their ref. This is implemented by using `React.forwardRef()`. This affects the internal component tree and display name and therefore might break shallow or snapshot tests. `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component. The corresponding API docs list the root component.\n\n### Styles\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9. Make sure JSS v9 is not installed in your environment. Removing `react-jss` from your `package.json` can help. The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`. The first argument was a placeholder for a potential future option. We have never found a need for it. It's time to remove this argument. It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). You should apply the following changes in your codebase.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n  \n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n  \n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n  \n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n  \n  ```diff\n  -<Divider inset />\n  +<Divider variant=\"inset\" />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n  \n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem. The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n  \n    This also applies to `Dialog` and `Popover`.\n\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n\n- [Modal] event.defaultPrevented is now ignored. The new logic closes the Modal even if `event.preventDefault()` is called on the key down escape event. `event.preventDefault()` is meant to stop default behaviors like clicking a checkbox to check it, hitting a button to submit a form, and hitting left arrow to move the cursor in a text input etc. Only special HTML elements have these default behaviors. You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation. Change the default Paper elevation to match the Card and the Expansion Panel:\n  \n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n  \n    This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n  \n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Interrupteur (switch)\n\n- [Switch] Refactor the implementation to make it easier to override the styles. Rename the class names to match the specification wording:\n  \n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n  \n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Rename nativeColor -> htmlColor. React solved the same problem with the `for` HTML attribute, they have decided to call the prop `htmlFor`. This change follows the same reasoning.\n  \n  ```diff\n  -<AddIcon nativeColor=\"#fff\" />\n  +<AddIcon htmlColor=\"#fff\" />\n  ```\n\n### Tabs (Onglets)\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity. This has allowed us to remove 2 intermediary DOM elements. You should be able to move the custom styles to the `root` class key.\n  \n    ![A simpler tab item DOM structure](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n  \n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### Table\n\n- [TableCell] Remove the deprecated `numeric` property:\n  \n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n\n- [TableRow] Remove the fixed height CSS property. The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n  \n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### TextField\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component. The `FormLabelClasses` property has been removed.\n  \n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n\n- [InputBase] Change the default box sizing model. It uses the following CSS now:\n  \n  ```css\n  box-sizing: border-box;\n  ```\n  \n    This solves issues with the `fullWidth` prop.\n\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### Typography\n\n- [Typography] Remove the deprecated typography variants. You can upgrade by performing the following replacements: \n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] Remove the opinionated `display: block` default typography style. You can use the new `display?: 'initial' | 'inline' | 'block';` property.\n- [Typography] Rename the `headlineMapping` property to `variantMapping` to better align with its purpose.\n  \n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n\n- [Typography] Change the default variant from `body2` to `body1`. A font size of 16px is a better default than 14px. Bootstrap, material.io, and even our documentation use 16px as a default font size. 14px like Ant Design uses is understandable, as Chinese users have a different alphabet. We recommend 12px as the default font size for Japanese.\n- [Typography] Remove the default color from the typography variants. The color should inherit most of the time. It's the default behavior of the web.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028). The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [Drop node 6 support](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), you should upgrade to node 8.\n\n### UMD\n\n- This change eases the use of Material-UI with a CDN:\n  \n  ```diff\n  const {\n  Button,\n  TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n  \n    It's consistent with other React projects:\n  \n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes"},xlBx:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/migration-v3",function(){var e=t("Tf4h");return{page:e.default||e}}])},z0fS:function(e,n){e.exports="# Migration from v3 to v4\n\n<p class=\"description\">Yeah, v4 has been released!</p>\n\nLooking for the v3 docs? [Find them here](https://material-ui.com/versions/).\n\n> This document is a work in progress.\nHave you upgraded your site and run into something that's not covered here?\n[Add your changes on GitHub](https://github.com/mui-org/material-ui/blob/master/docs/src/pages/guides/migration-v3/migration-v3.md).\n\n## Introduction\n\nThis is a reference for upgrading your site from Material-UI v3 to v4.\nWhile there's a lot covered here, you probably won't need to do everything for your site.\nWe'll do our best to keep things easy to follow, and as sequential as possible so you can quickly get rocking on v4!\n\n## Why you should migrate\n\nThis documentation page covers the *how* of migrating from v3 to v4.\nThe *why* is covered in the [release blog post on Medium](https://medium.com/material-ui/material-ui-v4-is-out-4b7587d1e701).\n\n## Updating your dependencies\n\nThe very first thing you will need to do is to update your dependencies.\n\n### Update Material-UI version\n\nYou need to update your `package.json` to use the latest version of Material-UI.\n\n```json\n\"dependencies\": {\n  \"@material-ui/core\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/core\n\nor\n\nyarn add @material-ui/core\n```\n\n### Update React version\n\nThe minimum required version of React was increased from `react@^16.3.0` to `react@^16.8.0`.\nThis allows us to rely on [Hooks](https://reactjs.org/docs/hooks-intro.html) (we no longer use the class API).\n\n### Update Material-UI Styles version\n\nIf you were previously using `@material-ui/styles` with v3 you need to update your `package.json` to use the latest version of Material-UI Styles.\n\n```json\n\"dependencies\": {\n  \"@material-ui/styles\": \"^4.0.0\"\n}\n```\n\nOr run\n\n```sh\nnpm install @material-ui/styles\n\nor\n\nyarn add @material-ui/styles\n```\n\n## Handling breaking changes\n\n### Core\n\n- Every component forward their ref.\n  This is implemented by using `React.forwardRef()`.\n  This affects the internal component tree and display name and therefore might break shallow or snapshot tests.\n  `innerRef` will no longer return a ref to the instance (or nothing if the inner component is a function component) but a ref to its root component.\n  The corresponding API docs list the root component.\n\n### Styles\n\n- ⚠️ Material-UI depends on JSS v10. JSS v10 is not backward compatible with v9.\n  Make sure JSS v9 is not installed in your environment.\n  Removing `react-jss` from your `package.json` can help.\n  The StylesProvider component replaces the JssProvider one.\n- Remove the first option argument of `withTheme()`.\n  The first argument was a placeholder for a potential future option.\n  We have never found a need for it.\n  It's time to remove this argument.\n  It matches the [emotion API](https://emotion.sh/docs/introduction) and the [styled-components API](https://www.styled-components.com).\n\n  ```diff\n  -const DeepChild = withTheme()(DeepChildRaw);\n  +const DeepChild = withTheme(DeepChildRaw);\n  ```\n- Scope the [keyframes API](https://cssinjs.org/jss-syntax/#keyframes-animation). You should apply the following changes in your codebase.\n  It helps isolating the animation logic:\n\n  ```diff\n    rippleVisible: {\n      opacity: 0.3,\n  -   animation: 'mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n  +   animation: '$mui-ripple-enter 100ms cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    '@keyframes mui-ripple-enter': {\n      '0%': {\n        opacity: 0.1,\n      },\n      '100%': {\n        opacity: 0.3,\n      },\n    },\n  ```\n\n### Theme\n\n- The `theme.palette.augmentColor()` method no longer performs a side effect on its input color.\n  To use it correctly, you have to use the returned value.\n\n  ```diff\n  -const background = { main: color };\n  -theme.palette.augmentColor(background);\n  +const background = theme.palette.augmentColor({ main: color });\n\n  console.log({ background });\n  ```\n- You can safely remove the next variant from the theme creation:\n\n  ```diff\n  typography: {\n  - useNextVariants: true,\n  },\n  ```\n\n- `theme.spacing.unit` usage is deprecated, you can use the new API:\n\n  ```diff\n  label: {\n    [theme.breakpoints.up('sm')]: {\n  -   paddingTop: theme.spacing.unit * 12,\n  +   paddingTop: theme.spacing(12),\n    },\n  }\n  ```\n\n  *Tip: you can provide more than 1 argument: `theme.spacing(1, 2) // = '8px 16px'`*.\n\n  You can use [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api) on your project to make this smoother.\n\n### Layout\n\n- [Grid] In order to support arbitrary spacing values and to remove the need to mentally count by 8, we are changing the spacing API:\n\n  ```diff\n    /**\n     * Defines the space between the type `item` component.\n     * It can only be used on a type `container` component.\n     */\n  -  spacing: PropTypes.oneOf([0, 8, 16, 24, 32, 40]),\n  +  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n  ```\n  Going forward, you can use the theme to implement [a custom Grid spacing transformation function](https://material-ui.com/system/spacing/#transformation).\n- [Container] Moved from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Container from '@material-ui/lab/Container';\n  +import Container from '@material-ui/core/Container';\n  ```\n\n### TypeScript\n\n#### `value` type\n\nNormalized `value` prop type for input components to use `unknown`. This affects\n`InputBase`, `NativeSelect`, `OutlinedInput`, `Radio`, `RadioGroup`, `Select`, `SelectInput`, `Switch`, `TextArea`,  and `TextField`.\n\n```diff\nfunction MySelect({ children }) {\n-  function handleChange(event: any, value: string) {\n+  function handleChange(event: any, value: unknown) {\n    // handle value\n  }\n\n  return <Select onChange={handleChange}>{children}</Select>\n}\n```\n\nThis change is explained in more detail in our [TypeScript guide](/guides/typescript/#handling-value-and-event-handlers)\n\n### Button\n\n- [Button] Remove the deprecated button variants (flat, raised and fab):\n\n  ```diff\n  -<Button variant=\"raised\" />\n  +<Button variant=\"contained\" />\n  ```\n\n  ```diff\n  -<Button variant=\"flat\" />\n  +<Button variant=\"text\" />\n  ```\n\n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"fab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab />\n  ```\n\n  ```diff\n  -import Button from '@material-ui/core/Button';\n  -<Button variant=\"extendedFab\" />\n  +import Fab from '@material-ui/core/Fab';\n  +<Fab variant=\"extended\" />\n  ```\n\n- [ButtonBase] The component passed to the `component` prop needs to be able to hold a ref.\n  The [composition guide](/guides/composition/#caveat-with-refs) explains the migration strategy.\n\n  This also applies to `BottomNavigationAction`, `Button`, `CardActionArea`, `Checkbox`, `ExpansionPanelSummary`, `Fab`, `IconButton`, `MenuItem`, `Radio`, `StepButton`, `Tab`, `TableSortLabel` as well as `ListItem` if the `button` prop is true.\n\n### Card\n\n- [CardActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [CardActions] Remove the `disableActionSpacing` CSS class.\n- [CardActions] Rename the `action` CSS class to `spacing`.\n\n### ClickAwayListener\n\n- [ClickAwayListener] Hide react-event-listener props.\n\n### Dialog\n\n- [DialogActions] Rename the `disableActionSpacing` prop to `disableSpacing`.\n- [DialogActions] Rename the `action` CSS class to `spacing`.\n- [DialogContentText] Use typography variant `body1` instead of `subtitle1`.\n- [Dialog] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs)\n  explains the migration strategy.\n\n### Divider\n\n- [Divider] Remove the deprecated `inset` prop.\n\n  ```diff\n  -<Divider inset />\n  +<Divider variant=\"inset\" />\n  ```\n\n### ExpansionPanel\n\n- [ExpansionPanelActions] Rename the `action` CSS class to `spacing`.\n- [ExpansionPanel] Increase the CSS specificity of the `disabled` style rule.\n\n### List\n\n- [List] Rework the list components to match the specification:\n\n  - The `ListItemAvatar` component is required when using an avatar.\n  - The `ListItemIcon` component is required when using a left checkbox.\n  - The `edge` property should be set on the icon buttons.\n\n- [List] `dense` no longer reduces the top and bottom padding of the `List` element.\n- [ListItem] Increase the CSS specificity of the `disabled` and `focusVisible` style rules.\n\n### Menu\n\n- [MenuItem] Remove the fixed height of the MenuItem.\n  The padding and line-height are used by the browser to compute the height.\n\n### Modal\n\n- [Modal] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains\n  the migration strategy.\n\n  This also applies to `Dialog` and `Popover`.\n- [Modal] Remove the classes customization API for the Modal component (-74% bundle size reduction when used standalone).\n- [Modal] event.defaultPrevented is now ignored.\n  The new logic closes the Modal even if `event.preventDefault()` is called on the key down escape event.\n  `event.preventDefault()` is meant to stop default behaviors like clicking a checkbox to check it, hitting a button to submit a form, and hitting left arrow to move the cursor in a text input etc.\n  Only special HTML elements have these default behaviors.\n  You should use `event.stopPropagation()` if you don't want to trigger an `onClose` event on the modal.\n\n### Paper\n\n- [Paper] Reduce the default elevation.\n  Change the default Paper elevation to match the Card and the Expansion Panel:\n\n  ```diff\n  -<Paper />\n  +<Paper elevation={2} />\n  ```\n\n  This affects the `ExpansionPanel` as well.\n\n### Portal\n\n- [Portal] The child needs to be able to hold a ref when `disablePortal` is used. The [composition guide](/guides/composition/#caveat-with-refs) explains\n  the migration strategy.\n\n### Slide\n\n- [Slide] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains\n  the migration strategy.\n\n### Slider\n\n- [Slider] Move from `@material-ui/lab` to `@material-ui/core`.\n\n  ```diff\n  -import Slider from '@material-ui/lab/Slider'\n  +import Slider from '@material-ui/core/Slider'\n  ```\n\n### Switch\n\n- [Switch] Refactor the implementation to make it easier to override the styles.\n  Rename the class names to match the specification wording:\n\n  ```diff\n  -icon\n  -bar\n  +thumb\n  +track\n  ```\n\n\n### Snackbar\n\n- [Snackbar] Match the new specification.\n\n  - Change the dimensions\n  - Change the default transition from `Slide` to `Grow`.\n\n### SvgIcon\n\n- [SvgIcon] Rename nativeColor -> htmlColor.\n  React solved the same problem with the `for` HTML attribute, they have decided to call the prop  `htmlFor`. This change follows the same reasoning.\n\n  ```diff\n  -<AddIcon nativeColor=\"#fff\" />\n  +<AddIcon htmlColor=\"#fff\" />\n  ```\n\n\n### Tabs\n\n- [Tab] Remove the `labelContainer`, `label` and `labelWrapped` class keys for simplicity.\nThis has allowed us to remove 2 intermediary DOM elements.\nYou should be able to move the custom styles to the `root` class key.\n\n  ![A simpler tab item DOM structure](https://user-images.githubusercontent.com/3165635/53287870-53a35500-3782-11e9-9431-2d1a14a41be0.png)\n\n- [Tabs] Remove deprecated fullWidth and scrollable props:\n\n  ```diff\n  -<Tabs fullWidth scrollable />\n  +<Tabs variant=\"scrollable\" />\n  ```\n\n### Table\n\n- [TableCell] Remove the deprecated `numeric` property:\n\n  ```diff\n  -<TableCell numeric>{row.calories}</TableCell>\n  +<TableCell align=\"right\">{row.calories}</TableCell>\n  ```\n- [TableRow] Remove the fixed height CSS property.\n  The cell height is computed by the browser using the padding and line-height.\n- [TableCell] Move the `dense` mode to a different property:\n\n  ```diff\n  -<TableCell padding=\"dense\" />\n  +<TableCell size=\"small\" />\n  ```\n- [TablePagination] The component no longer tries to fix invalid (`page`, `count`, `rowsPerPage`) property combinations. It raises a warning instead.\n\n### TextField\n\n- [InputLabel] You should be able to override all the styles of the FormLabel component using the CSS API of the InputLabel component.\n  The `FormLabelClasses` property has been removed.\n\n  ```diff\n  <InputLabel\n  - FormLabelClasses={{ asterisk: 'bar' }}\n  + classes={{ asterisk: 'bar' }}\n  >\n    Foo\n  </InputLabel>\n  ```\n- [InputBase] Change the default box sizing model.\n  It uses the following CSS now:\n\n  ```css\n  box-sizing: border-box;\n  ```\n  This solves issues with the `fullWidth` prop.\n- [InputBase] Remove the `inputType` class from `InputBase`.\n\n### Tooltip\n\n- [Tooltip] The child needs to be able to hold a ref. The [composition guide](/guides/composition/#caveat-with-refs) explains\n  the migration strategy.\n- [Tooltip] Appears only after focus-visible focus instead of any focus.\n\n### Typography\n\n- [Typography] Remove the deprecated typography variants. You can upgrade by performing the following replacements:\n  - display4 => h1\n  - display3 => h2\n  - display2 => h3\n  - display1 => h4\n  - headline => h5\n  - title => h6\n  - subheading => subtitle1\n  - body2 => body1\n  - body1 (default) => body2 (default)\n- [Typography] Remove the opinionated `display: block` default typography style.\n  You can use the new `display?: 'initial' | 'inline' | 'block';` property.\n- [Typography] Rename the `headlineMapping` property to `variantMapping` to better align with its purpose.\n\n  ```diff\n  -<Typography headlineMapping={headlineMapping}>\n  +<Typography variantMapping={variantMapping}>\n  ```\n- [Typography] Change the default variant from `body2` to `body1`.\n  A font size of 16px is a better default than 14px.\n  Bootstrap, material.io, and even our documentation use 16px as a default font size.\n  14px like Ant Design uses is understandable, as Chinese users have a different alphabet.\n  We recommend 12px as the default font size for Japanese.\n- [Typography] Remove the default color from the typography variants.\n  The color should inherit most of the time. It's the default behavior of the web.\n- [Typography] Rename `color=\"default\"` to `color=\"initial\"` following the logic of [this thread](https://github.com/mui-org/material-ui/issues/13028).\n  The usage of *default* should be avoided, it lacks semantic.\n\n### Node\n\n- [Drop node 6 support](https://github.com/nodejs/Release/blob/eb91c94681ea968a69bf4a4fe85c656ed44263b3/README.md#release-schedule), you should upgrade to node 8.\n\n\n### UMD\n\n- This change eases the use of Material-UI with a CDN:\n\n  ```diff\n  const {\n    Button,\n    TextField,\n  -} = window['material-ui'];\n  +} = MaterialUI;\n  ```\n\n  It's consistent with other React projects:\n\n  - material-ui => MaterialUI\n  - react-dom => ReactDOM\n  - prop-types => PropTypes\n"}},[["xlBx","5d41","9da1"]]]);