(window.webpackJsonp=window.webpackJsonp||[]).push([["5a38"],{"/NFi":function(e,n){e.exports='# Адаптивный пользовательский интерфейс\n\n<p class="description">Макеты Material Design остаются одинаковыми вне зависимости от используемых платформ, сред выполнения и разрешений экрана благодаря использованию единообразной системы элементов и интервалов.</p>\n\n[ Адаптивные макеты ](https://material.io/design/layout/responsive-layout-grid.html) в Material Design подстраиваются под все возможные размеры экрана. Для обеспечения адаптивности пользовательского интерфейса мы предоставляем следующие средства:\n\n- [Grid](/components/grid/): Адаптивная сетка макетов Material Design подстраивается под размер и ориентацию экрана, обеспечивая согласованность макетов.\n- [Container](/components/container/): Контейнер центрирует ваш контент по горизонтали. Это базовый элемент всех макетов.\n- [Breakpoints](/customization/breakpoints/): API, позволяющий использовать контрольные точки в широком диапазоне контекстов.\n- [useMediaQuery](/components/use-media-query/): Это хук медиа-запроса для React. Он отслеживает совпадения с медиа-запросом CSS.\n- [Hidden](/components/hidden/): Быстро и оперативно управляет видимостью компонентов.'},"88YG":function(e,n){e.exports='# Responsive UI\n\n<p class="description">Material Design layouts encourage consistency across platforms, environments, and screen sizes by using uniform elements and spacing.</p>\n\n[Responsive layouts](https://material.io/design/layout/responsive-layout-grid.html) in Material Design adapt to any possible screen size. We provide the following helpers to make the UI responsive:\n\n- [Grid](/components/grid/): The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\n- [Container](/components/container/): The container centers your content horizontally. それが最も基本的なレイアウト要素です。\n- [Breakpoints](/customization/breakpoints/): API that enables the use of breakpoints in a wide variety of contexts.\n- [useMediaQuery](/components/use-media-query/): This is a CSS media query hook for React. It listens for matches to a CSS media query.\n- [Hidden](/components/hidden/): Quickly and responsively toggle the visibility value of components and more with our hidden utilities.'},DQF7:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/responsive-ui",function(){var e=s("xnH+");return{page:e.default||e}}])},DSlb:function(e,n){e.exports='# Responsive UI\n\n<p class="description">Os leiautes de Material Design incentivam a consistência entre plataformas, ambientes e tamanhos de tela usando elementos uniformes e espaçamento.</p>\n\n[Leiautes responsivos](https://material.io/design/layout/responsive-layout-grid.html) em Material Design adaptam-se a qualquer tamanho de tela possível. Fornecemos os seguintes modos para tornar a interface do usuário responsiva:\n\n- [Grade](/components/grid/): O leiaute responsivo da grade do Material Design se adapta ao tamanho e orientação da tela, garantindo a consistência entre leiautes.\n- [Container](/components/container/): O contêiner centraliza seu conteúdo horizontalmente. É o elemento de leiaute mais básico.\n- [Pontos de quebra](/customization/breakpoints/): API que permite o uso de pontos de quebra em uma ampla variedade de contextos.\n- [useMediaQuery](/components/use-media-query/): Este é um hook CSS de consulta de mídia para React. Ele ouve correspondências para uma consulta de mídia no CSS.\n- [Hidden](/components/hidden/): Modifique rapidamente e de forma responsiva a visibilidade dos componentes e muito mais com nosso utilitário hidden.'},ULrQ:function(e,n){function s(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}s.keys=function(){return[]},s.resolve=s,e.exports=s,s.id="ULrQ"},etoy:function(e,n){e.exports='# Responsive UI\n\n<p class="description">Material Design layouts encourage consistency across platforms, environments, and screen sizes by using uniform elements and spacing.</p>\n\n[Responsive layouts](https://material.io/design/layout/responsive-layout-grid.html) in Material Design adapt to any possible screen size.\nWe provide the following helpers to make the UI responsive:\n\n- [Grid](/components/grid/): The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\n- [Container](/components/container/): The container centers your content horizontally. It\'s the most basic layout element.\n- [Breakpoints](/customization/breakpoints/): API that enables the use of breakpoints in a wide variety of contexts.\n- [useMediaQuery](/components/use-media-query/): This is a CSS media query hook for React. It listens for matches to a CSS media query.\n- [Hidden](/components/hidden/):\nQuickly and responsively toggle the visibility value of components and more with our hidden utilities.\n'},f9QU:function(e,n){e.exports='# Responsive UI\n\n<p class="description">Layouts für Materialdesigns fördern die Konsistenz über Plattformen, Umgebungen und Bildschirmgrößen hinweg, indem einheitliche Elemente und Abstände verwendet werden.</p>\n\n[Responsive Layouts](https://material.io/design/layout/responsive-layout-grid.html) passen sich in Material Design an jede mögliche Bildschirmgröße an. Wir bieten die folgenden Helfer, um die Benutzeroberfläche ansprechbar zu machen:\n\n- [Grid](/components/grid/): Das responsive Layoutraster von Material Design passt sich der Bildschirmgröße und -ausrichtung an und sorgt für Konsistenz über alle Layouts hinweg.\n- [Container](/components/container/): Der Container zentriert Ihren Inhalt horizontal. Es ist das grundlegendste Layoutelement.\n- [ Rasterpunkte](/customization/breakpoints/): API, die die Verwendung von Rasterpunkten in einer Vielzahl von Kontexten ermöglicht.\n- [useMediaQuery](/components/use-media-query/): Dies ist ein CSS-Media-Abfrage-Hook für React. Es wartet auf Übereinstimmungen mit einer CSS-Medienabfrage.\n- [Hidden](/components/hidden/): Wechseln Sie mit unseren versteckten Komponenten schnell und ansprechend den Sichtbarkeitswert von Komponenten und mehr.'},fWtC:function(e,n){e.exports='# Responsive UI\n\n<p class="description">Material Design layouts encourage consistency across platforms, environments, and screen sizes by using uniform elements and spacing.</p>\n\n[Responsive layouts](https://material.io/design/layout/responsive-layout-grid.html) in Material Design adapt to any possible screen size. We provide the following helpers to make the UI responsive:\n\n- [Grid](/components/grid/): The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\n- [Container](/components/container/): The container centers your content horizontally. It\'s the most basic layout element.\n- [Breakpoints](/customization/breakpoints/): API that enables the use of breakpoints in a wide variety of contexts.\n- [useMediaQuery](/components/use-media-query/): This is a CSS media query hook for React. It listens for matches to a CSS media query.\n- [Hidden](/components/hidden/): Quickly and responsively toggle the visibility value of components and more with our hidden utilities.'},fsc6:function(e,n){e.exports='# crwdns96390:0crwdne96390:0\n\n<p class="description">crwdns96392:0crwdne96392:0</p>\n\ncrwdns96394:0crwdne96394:0 crwdns96396:0crwdne96396:0\n\n- crwdns96398:0crwdne96398:0\n- crwdns96400:0crwdne96400:0 crwdns96402:0crwdne96402:0\n- crwdns96404:0crwdne96404:0\n- crwdns96406:0crwdne96406:0 crwdns96408:0crwdne96408:0\n- crwdns96410:0crwdne96410:0'},jrLd:function(e,n){e.exports='# 响应式 UI\n\n<p class="description">Material Design 布局鼓励通过使用统一的元素和间距来实现跨平台、跨环境、不同屏幕尺寸下的一致性。</p>\n\nMaterial Design 中的[响应式布局](https://material.io/design/layout/responsive-layout-grid.html)可适配任何可能的屏幕尺寸。 我们提供以下工具以实现响应式 UI：\n\n- [Grid](/components/grid/): Material Design 的响应式网格布局可以适应屏幕的尺寸和方向，确保布局之间的一致性。\n- [Container](/components/container/): 容器可以将您页面的内容水平居中。 它是最基本的布局元素。\n- [Breakpoints](/customization/breakpoints/)：它的 API 使得在各种环境中使用断点。\n- [useMediaQuery](/components/use-media-query/) ：这是 React 的 CSS 媒体查询 hook。 它监控着与 CSS 媒体查询的匹配结果。\n- [Hidden](/components/hidden/)：使用我们隐藏的实用程序来快速并响应式地切换元素的显隐。'},kDvj:function(e,n){e.exports="# UI responsive\n\n<p class=\"description\">Les layouts Material Design encouragent à la cohérence entre les plate-formes, environnements et tailles d'écran en utilisant des éléments et des espacements uniformes.</p>\n\nLes [layouts responsive](https://material.io/design/layout/responsive-layout-grid.html) Material Design s'adaptent à toutes les tailles d'écran possibles. Nous fournissons les helpers suivants pour rendre l'UI responsive :\n\n- [Grid](/components/grid/): The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\n- [Container](/components/container/): The container centers your content horizontally. It's the most basic layout element.\n- [Breakpoints](/customization/breakpoints/): API that enables the use of breakpoints in a wide variety of contexts.\n- [useMediaQuery](/components/use-media-query/) : Ceci est un hook media query CSS pour React ; It listens for matches to a CSS media query.\n- [Hidden](/components/hidden/): Quickly and responsively toggle the visibility value of components and more with our hidden utilities."},wTPU:function(e,n,s){var i={"./responsive-ui-aa.md":"fsc6","./responsive-ui-de.md":"f9QU","./responsive-ui-es.md":"fWtC","./responsive-ui-fr.md":"kDvj","./responsive-ui-ja.md":"88YG","./responsive-ui-pt.md":"DSlb","./responsive-ui-ru.md":"/NFi","./responsive-ui-zh.md":"jrLd","./responsive-ui.md":"etoy"};function t(e){var n=o(e);return s(n)}function o(e){var n=i[e];if(!(n+1)){var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}return n}t.keys=function(){return Object.keys(i)},t.resolve=o,e.exports=t,t.id="wTPU"},"xnH+":function(e,n,s){"use strict";s.r(n),s.d(n,"default",function(){return c});var i=s("mXGw"),t=s.n(i),o=s("e+1t"),a=s("wTPU"),r=s("ULrQ"),d=t.a.createElement(o.a,{req:a,reqSource:r,reqPrefix:"pages/guides/responsive-ui"});function c(){return d}}},[["DQF7","5d41","9da1"]]]);