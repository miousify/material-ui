(window.webpackJsonp=window.webpackJsonp||[]).push([["4310"],{"/9GK":function(e,n){e.exports="# Migration From v0.x to v1\n\n<p class=\"description\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\n\n## FAQ\n\n### Woah - the API is way different! Does that mean 1.0 is completely different, I’ll have to learn the basics all over again, and migrating will be practically impossible?\n\nI’m glad you asked! The answer is no. The core concepts haven’t changed. You will notice that the API provides more flexibility, but this has a cost. We have been making lower-level components, abstracting less complexity.\n\n### What motivated such a large change?\n\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\n\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\n- New theme handling (nesting, self-supporting, etc.)\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\n- Full [server-side rendering](/guides/server-rendering/) support\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\n\n### Where should I start in a migration?\n\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\n    \n    With yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. After that, you are free to migrate one component instance at the time.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button\n\nRaisedButton upgrade path:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### To be continued…\n\nHave you successfully migrated your app, and wish to help the community? Please help us! We have an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊."},IqEo:function(e,n){e.exports="# 从v0.x版本迁移到v1版本\n\n<p class=\"description\">是的，v1版本已经发布了！ 我们用了两年的努力达到了这个里程碑。</p>\n\n## 常问问题\n\n### 哇—— API 看起来完全不一样！ 这是否意味着1.0完全不同，而我得重新学习基础知识，而迁移是几乎不可能的？\n\n我很高兴你问了！ 答案是不。我们的核心概念并没有改变。 您会注意到 API 的灵活性更强了，但这是有一些代价的。 我们一直在实现一些较低级别的组件，并且减少了复杂性。\n\n### 到底是什么带来了如此巨大的改变呢？\n\nMaterial-UI 这个项目是从[4年前](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46)开始的。 在此期间，整个个生态系统发展了很多，我们也学到了很多东西。 [@nathanmarks](https://github.com/nathanmarks/) 启动了一项雄心勃勃的任务，将 Material-UI **重新启动**，并利用我们学到的知识，来解决一些长期存在的问题。 譬如这些主要的变化：\n\n- 我们采用 CSS-in-JS 这个新的样式方案（更好的[自定义](/customization/components/)的能力和整体性能）\n- New theme handling (nesting, self-supporting, etc.)\n- 感谢 [Next.js](https://github.com/zeit/next.js) 超快地创建文档\n- 更容易检测 [测试覆盖率](/guides/testing/) （99％以上，在所有主流浏览器上运行， [视觉回归测试](https://www.argos-ci.com/mui-org/material-ui)）\n- 完全[服务器端渲染](/guides/server-rendering/)支持\n- 大范围地[支持的浏览器](/getting-started/supported-platforms/)\n\n### 我应该从哪里开始迁移？\n\n1. 首先，和v0.x版本一起，安装v1.x版本的 Material-UI。\n    \n    用 yarn：\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3。 `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. 之后，您可以自由地一次迁移一个组件实例。\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button（扁平按钮）\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button（凸起的按钮）\n\n凸起按钮的升级的路径：\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader（副标题)\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle（切换）\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item（菜单项）\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon（字体图标）\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress（环状进度条）\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu（下拉式菜单）\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### 未完待续...\n\n您是否已成功迁移您的应用，并助社区一臂之力？ 请帮助我们！ 我们有一个未解决的问题，以完成此迁移指南 [＃7195](https://github.com/mui-org/material-ui/issues/7195)。 Any pull request is welcomed 😊."},KIDt:function(e,n){e.exports='# crwdns95782:0crwdne95782:0\n\n<p class="description">crwdns95784:0crwdne95784:0 crwdns95786:0crwdne95786:0</p>\n\n## crwdns95788:0crwdne95788:0\n\n### crwdns95790:0crwdne95790:0 crwdns95792:0crwdne95792:0\n\ncrwdns95794:0crwdne95794:0 crwdns95796:0crwdne95796:0 crwdns95798:0crwdne95798:0 crwdns95800:0crwdne95800:0\n\n### crwdns95802:0crwdne95802:0\n\ncrwdns95804:0crwdne95804:0 crwdns95806:0crwdne95806:0 crwdns95808:0crwdne95808:0 crwdns95810:0crwdne95810:0\n\n- crwdns95812:0crwdne95812:0\n- crwdns95814:0crwdne95814:0\n- crwdns95816:0crwdne95816:0\n- crwdns95818:0crwdne95818:0\n- crwdns95820:0crwdne95820:0\n- crwdns95822:0crwdne95822:0\n\n### crwdns95824:0crwdne95824:0\n\n1. crwdns95826:0crwdne95826:0\n    \n    crwdns95828:0crwdne95828:0\n\n```sh\n  crwdns95830:0crwdne95830:0 crwdns95832:0crwdne95832:0\ncrwdns95834:0crwdne95834:0 crwdns95836:0{ MuiThemeProvider, createMuiTheme }crwdnd95836:0{ MuiThemeProvider as V0MuiThemeProvider}crwdnd95836:0{theme}crwdnd95836:0{themeV0}crwdne95836:0 crwdns95838:0crwdne95838:0\n\ncrwdns95840:0crwdne95840:0\ncrwdns95842:0crwdne95842:0\n\ncrwdns95844:0crwdne95844:0\n\ncrwdns95846:0crwdne95846:0\n\ncrwdns95848:0crwdne95848:0\n```\n\n### crwdns95850:0crwdne95850:0\n\n```diff\ncrwdns95852:0crwdne95852:0\n```\n\n### crwdns95854:0crwdne95854:0\n\ncrwdns95856:0crwdne95856:0\n\n```diff\ncrwdns95858:0crwdne95858:0\n```\n\n### crwdns95860:0crwdne95860:0\n\n```diff\ncrwdns95862:0crwdne95862:0\n```\n\n### crwdns95864:0crwdne95864:0\n\n```diff\ncrwdns95866:0{this.state.checkedA}crwdnd95866:0{this.handleToggle}crwdnd95866:0{this.state.checkedA}crwdnd95866:0{this.handleSwitch}crwdne95866:0\n```\n\n### crwdns95868:0crwdne95868:0\n\n```diff\ncrwdns95870:0crwdne95870:0\n```\n\n### crwdns95872:0crwdne95872:0\n\n```diff\ncrwdns95874:0crwdne95874:0\n```\n\n### crwdns95876:0crwdne95876:0\n\n```diff\ncrwdns95878:0crwdne95878:0\n```\n\n### crwdns95880:0crwdne95880:0\n\n```diff\ncrwdns95882:0{this.state.value}crwdne95882:0\n```\n\n### crwdns95884:0crwdne95884:0\n\ncrwdns95886:0crwdne95886:0 crwdns95888:0crwdne95888:0 crwdns95890:0crwdne95890:0 crwdns95892:0crwdne95892:0'},LNGQ:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var o=t("mXGw"),i=t.n(o),r=t("e+1t"),a=t("lxf0"),m=t("zGDQ"),s=i.a.createElement(r.a,{req:a,reqSource:m,reqPrefix:"pages/guides/migration-v0x"});function u(){return s}},YUKN:function(e,n){e.exports="# Migration From v0.x to v1\n\n<p class=\"description\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\n\n## FAQ\n\n### Woah - the API is way different! Does that mean 1.0 is completely different, I’ll have to learn the basics all over again, and migrating will be practically impossible?\n\nI’m glad you asked! The answer is no. The core concepts haven’t changed.\nYou will notice that the API provides more flexibility, but this has a cost.\nWe have been making lower-level components, abstracting less complexity.\n\n### What motivated such a large change?\n\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46).\nThe ecosystem has evolved a lot since then, we have also learned a lot.\n[@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up**\ntaking advantage of this knowledge to address long-standing issues. To name some of the major changes:\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\n- New theme handling (nesting, self-supporting, etc.)\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\n- Full [server-side rendering](/guides/server-rendering/) support\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\n\n### Where should I start in a migration?\n\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\n\n  With yarn:\n  ```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. After that, you are free to migrate one component instance at the time.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button\n\nRaisedButton upgrade path:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### To be continued…\n\nHave you successfully migrated your app, and wish to help the community?\nPlease help us! We have an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊.\n"},aWzc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/migration-v0x",function(){var e=t("LNGQ");return{page:e.default||e}}])},kVyY:function(e,n){e.exports="# Migration von v0.x zu v1\n\n<p class=\"description\">Ja, v1 wurde veröffentlicht! Profitieren Sie von 2 Jahren Arbeit.</p>\n\n## Häufig gestellte Fragen\n\n### Woah - die API ist anders! Bedeutet das, dass 1.0 völlig anders ist und ich die Grundlagen noch einmal erlernen muss, und eine Migration wird praktisch unmöglich sein?\n\nGute Frage! Die Antwort ist nein. Die Kernkonzepte haben sich nicht geändert. Sie werden feststellen, dass die API mehr Flexibilität bietet, dies ist jedoch mit Kosten verbunden. Wir haben untergeordnete Komponenten hergestellt und weniger Komplexität abstrahiert.\n\n### Was hat zu einer so großen Veränderung geführt?\n\nDie Material-UI wurde vor [4 Jahren gestartet](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). Das Ökosystem hat sich seitdem stark verändert, wir haben auch viel gelernt. [@nathanmarks](https://github.com/nathanmarks/) begann eine ehrgeizige Aufgabe, Material-UI **von Grund auf ** neu zu erstellen unter Ausnutzung seines Wissen seit langem bestehende Probleme zu lösen. Um einige der wichtigsten Änderungen zu nennen:\n\n- Neue Styling-Lösung mit CSS-in-JS (bessere[ Anpassungsmöglichkeiten](/customization/components/), bessere Leistung)\n- New theme handling (nesting, self-supporting, etc.)\n- Schnelle Dokumentation dank [Next.js](https://github.com/zeit/next.js)\n- Viel bessere [Testabdeckung](/guides/testing/) (99%+, läuft auf allen gängigen Browsern, [visuelle Regressionstests](https://www.argos-ci.com/mui-org/material-ui))\n- Vollständige [serverseitiges Rendern](/guides/server-rendering/) Unterstützung\n- Große Auswahl an [ unterstützten Browsern](/getting-started/supported-platforms/)\n\n### Wo soll ich bei einer Migration anfangen?\n\n1. Beginnen Sie mit der Installation der v1.x-Version von Material-UI neben der v0.x-Version.\n    \n    Mit yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. Danach können Sie jeweils eine Komponenteninstanz migrieren.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flacher Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Erhöhter Button\n\nErhöhter Button-Aktualisierungspfad:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Untertitel\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Umschalten\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menüelemente\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Schriftarten-Icons\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Zirkulärer Fortschritt\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Dropdownmenü\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### Fortsetzung folgt…\n\nHaben Sie Ihre App erfolgreich migriert und möchten der Community helfen? Bitte hilf uns! Wir haben ein offenes Problem, um den Migrationsleitfaden [#7195](https://github.com/mui-org/material-ui/issues/7195) abzuschließen. Any pull request is welcomed 😊."},kjy0:function(e,n){e.exports="# Migration de v0.x vers v1\n\n<p class=\"description\">Yeah, la v1 est sortie! Take advantage of 2 years worth of effort.</p>\n\n## FAQ\n\n### Woah - the API is way different! Does that mean 1.0 is completely different, I’ll have to learn the basics all over again, and migrating will be practically impossible?\n\nJe suis content que vous ayez demandé! La réponse est non. Les concepts de base n'ont pas changé. You will notice that the API provides more flexibility, but this has a cost. We have been making lower-level components, abstracting less complexity.\n\n### What motivated such a large change?\n\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\n\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\n- New theme handling (nesting, self-supporting, etc.)\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\n- Full [server-side rendering](/guides/server-rendering/) support\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\n\n### Where should I start in a migration?\n\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\n    \n    With yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. After that, you are free to migrate one component instance at the time.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button\n\nRaisedButton upgrade path:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### To be continued…\n\nHave you successfully migrated your app, and wish to help the community? Please help us! We have an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊."},lxf0:function(e,n,t){var o={"./migration-v0x-aa.md":"KIDt","./migration-v0x-de.md":"kVyY","./migration-v0x-es.md":"wii3","./migration-v0x-fr.md":"kjy0","./migration-v0x-ja.md":"nIeO","./migration-v0x-pt.md":"s/ls","./migration-v0x-ru.md":"/9GK","./migration-v0x-zh.md":"IqEo","./migration-v0x.md":"YUKN"};function i(e){var n=r(e);return t(n)}function r(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}i.keys=function(){return Object.keys(o)},i.resolve=r,e.exports=i,i.id="lxf0"},nIeO:function(e,n){e.exports="# Migration From v0.x to v1\n\n<p class=\"description\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\n\n## FAQ\n\n### Woah - the API is way different! Does that mean 1.0 is completely different, I’ll have to learn the basics all over again, and migrating will be practically impossible?\n\nI’m glad you asked! The answer is no. The core concepts haven’t changed. You will notice that the API provides more flexibility, but this has a cost. We have been making lower-level components, abstracting less complexity.\n\n### What motivated such a large change?\n\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\n\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\n- New theme handling (nesting, self-supporting, etc.)\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\n- Full [server-side rendering](/guides/server-rendering/) support\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\n\n### Where should I start in a migration?\n\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\n    \n    With yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. After that, you are free to migrate one component instance at the time.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button\n\nRaisedButton upgrade path:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### To be continued…\n\nHave you successfully migrated your app, and wish to help the community? Please help us! We have an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊."},"s/ls":function(e,n){e.exports="# Migrando da v0.x para v1\n\n<p class=\"description\">Sim, v1 foi lançada! Tire proveito de 2 anos de esforço.</p>\n\n## Perguntas Frequentes\n\n### Woah - a API é diferente! Isso significa que 1.0 é completamente diferente, vou ter que aprender o básico de novo, e a migração será praticamente impossível?\n\nEstou feliz que você tenha perguntado! A resposta é não. Os principais conceitos não mudaram. Você notará que a API oferece mais flexibilidade, mas isso tem um custo. Temos feito componentes de baixo nível, abstraindo menos complexidade.\n\n### O que motivou uma mudança tão grande?\n\nMaterial-UI foi iniciado [4 anos atrás](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). O ecossistema evoluiu muito desde então, também aprendemos muito. [@nathanmarks](https://github.com/nathanmarks/) iniciou uma tarefa ambiciosa, reconstruindo o Material-UI do **zero**, aproveitando esse conhecimento para resolver problemas de longa data. Para citar algumas das principais mudanças:\n\n- Nova solução de estilo usando CSS-in-JS (melhor poder de [customização](/customization/components/), melhor desempenho)\n- New theme handling (nesting, self-supporting, etc.)\n- Documentação rápida e brilhante graças a [Next.js](https://github.com/zeit/next.js)\n- Melhor [cobertura de teste](/guides/testing/) (99%+, executado em todos os principais navegadores, [testes de regressão visual](https://www.argos-ci.com/mui-org/material-ui))\n- Suporte completo [a renderização do lado do servidor](/guides/server-rendering/)\n- Vasta gama de [navegadores suportados](/getting-started/supported-platforms/)\n\n### Onde devo começar a migração?\n\n1. Comece instalando a versão v1.x do Material-UI ao lado da versão v0.x.\n    \n    utilizando o yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Ou utilizando npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  então\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Execute [o auxiliar de migração](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) em seu projeto.\n3. `MuiThemeProvider` é opcional para v1.x., mas se você tem um tema customizado, você é livre para usar as versões v0.x e v1.x do componente, ao mesmo tempo, como neste exemplo:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* tema para v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* tema para v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. Depois disso, você está livre para migrar uma instância de componente por vez.\n\n## Componentes\n\n### Autocompletar\n\nMaterial-UI, não fornece uma API de alto nível para resolver este problema.\nRecomendamos que você explore [as soluções que a comunidade construiu](/components/autocomplete/).\n\nNo futuro, procuraremos fornecer um componente para resolver as formas de uso mais simples: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nExecute [o auxiliar de migração](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) em seu projeto.\n\nIsto irá aplicar a seguinte mudança:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Botão liso\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Botão elevado\n\nCaminho de atualização do RaisedButton:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subcabeçalho\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Alternar\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Item de menu\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Ícone de fonte\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Progresso Circular\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Menu suspenso\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### Continua…\n\nVocê migrou sua aplicação com sucesso e deseja ajudar a comunidade? Por favor nos ajude! Temos um problema em aberto para concluir este guia de migração [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊."},wii3:function(e,n){e.exports="# Migration From v0.x to v1\n\n<p class=\"description\">Yeah, v1 has been released! Take advantage of 2 years worth of effort.</p>\n\n## FAQ\n\n### Woah - the API is way different! Does that mean 1.0 is completely different, I’ll have to learn the basics all over again, and migrating will be practically impossible?\n\nI’m glad you asked! The answer is no. The core concepts haven’t changed. You will notice that the API provides more flexibility, but this has a cost. We have been making lower-level components, abstracting less complexity.\n\n### What motivated such a large change?\n\nMaterial-UI was started [4 years ago](https://github.com/mui-org/material-ui/commit/28b768913b75752ecf9b6bb32766e27c241dbc46). The ecosystem has evolved a lot since then, we have also learned a lot. [@nathanmarks](https://github.com/nathanmarks/) started an ambitious task, rebuilding Material-UI from the **ground-up** taking advantage of this knowledge to address long-standing issues. To name some of the major changes:\n\n- New styling solution using CSS-in-JS (better [customization](/customization/components/) power, better performance)\n- New theme handling (nesting, self-supporting, etc.)\n- Blazing fast documentation thanks to [Next.js](https://github.com/zeit/next.js)\n- Way better [test coverage](/guides/testing/) (99%+, run on all the major browsers, [visual regression tests](https://www.argos-ci.com/mui-org/material-ui))\n- Full [server-side rendering](/guides/server-rendering/) support\n- Wide range of [supported browsers](/getting-started/supported-platforms/)\n\n### Where should I start in a migration?\n\n1. Start by installing the v1.x version of Material-UI along side the v0.x version.\n    \n    With yarn:\n\n```sh\n  yarn add material-ui\n  yarn add @material-ui/core\n  ```\n\n  Or with npm:\n  ```sh\n  npm install material-ui\n  npm install @material-ui/core\n  ```\n\n  then\n\n  ```js\n  import FlatButton from 'material-ui/FlatButton'; // v0.x\n  import Button from '@material-ui/core/Button'; // v1.x\n  ```\n\n2. Run [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n3. `MuiThemeProvider` is optional for v1.x., but if you have a custom theme, you are free to use v0.x and v1.x versions of the component at the same time, like this:\n\n  ```jsx\n  import React from 'react';\n  import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'; // v1.x\n  import { MuiThemeProvider as V0MuiThemeProvider} from 'material-ui';\n  import getMuiTheme from 'material-ui/styles/getMuiTheme';\n\n  const theme = createMuiTheme({\n    /* theme for v1.x */\n  });\n  const themeV0 = getMuiTheme({\n    /* theme for v0.x */\n  });\n\n  function App() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <V0MuiThemeProvider muiTheme={themeV0}>\n          {/*Components*/}\n        </V0MuiThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n\n  export default App;\n  ```\n\n4. After that, you are free to migrate one component instance at the time.\n\n## Components\n\n### Autocomplete\n\nMaterial-UI doesn't provide a high-level API for solving this problem.\nYou're encouraged you to explore [the solutions the React community has built](/components/autocomplete/).\n\nIn the future, we will look into providing a simple component to solve the simple use cases: [#9997](https://github.com/mui-org/material-ui/issues/9997).\n\n### Svg Icon\n\nRun [the migration helper](https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod) on your project.\n\nThis will apply a change such as the following:\n\n```diff\n-import AddIcon from 'material-ui/svg-icons/Add';\n+import AddIcon from '@material-ui/icons/Add';\n\n<AddIcon />\n```\n\n### Flat Button\n\n```diff\n-import FlatButton from 'material-ui/FlatButton';\n+import Button from '@material-ui/core/Button';\n\n-<FlatButton />\n+<Button />\n```\n\n### Raised Button\n\nRaisedButton upgrade path:\n\n```diff\n-import RaisedButton from 'material-ui/RaisedButton';\n+import Button from '@material-ui/core/Button';\n\n-<RaisedButton />\n+<Button variant=\"contained\" />\n```\n\n### Subheader\n\n```diff\n-import Subheader from 'material-ui/Subheader';\n+import ListSubheader from '@material-ui/core/ListSubheader';\n\n-<Subheader>Sub Heading</Subheader>\n+<ListSubheader>Sub Heading</ListSubheader>\n```\n\n### Toggle\n\n```diff\n-import Toggle from 'material-ui/Toggle';\n+import Switch from '@material-ui/core/Switch';\n\n-<Toggle\n\n-  toggled={this.state.checkedA}\n-  onToggle={this.handleToggle}\n-/>\n+<Switch\n+  checked={this.state.checkedA}\n+  onChange={this.handleSwitch}\n+/>\n```\n\n### Menu Item\n\n```diff\n-import MenuItem from 'material-ui/MenuItem';\n+import MenuItem from '@material-ui/core/MenuItem';\n\n-<MenuItem primaryText=\"Profile\" />\n+<MenuItem>Profile</MenuItem>\n```\n\n### Font Icon\n\n```diff\n-import FontIcon from 'material-ui/FontIcon';\n+import Icon from '@material-ui/core/Icon';\n\n-<FontIcon>home</FontIcon>\n+<Icon>home</Icon>\n```\n\n### Circular Progress\n\n```diff\n-import CircularProgress from 'material-ui/CircularProgress';\n+import CircularProgress from '@material-ui/core/CircularProgress';\n\n-<CircularProgress mode=\"indeterminate\" />\n+<CircularProgress variant=\"indeterminate\" />\n```\n\n### Drop Down Menu\n\n```diff\n-import DropDownMenu from 'material-ui/DropDownMenu';\n+import Select from '@material-ui/core/Select';\n\n-<DropDownMenu></DropDownMenu>\n+<Select value={this.state.value}></Select>\n```\n\n### To be continued…\n\nHave you successfully migrated your app, and wish to help the community? Please help us! We have an open issue in order to finish this migration guide [#7195](https://github.com/mui-org/material-ui/issues/7195). Any pull request is welcomed 😊."},zGDQ:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="zGDQ"}},[["aWzc","5d41","9da1"]]]);